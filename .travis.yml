sudo: false

language: generic

# Caching so the next build will be fast too.
cache:
  directories:
    - $HOME/.cabal/packages

before_cache:
  - rm -fv $HOME/.cabal/packages/hackage.haskell.org/build-reports.log
  - rm -fv $HOME/.cabal/packages/hackage.haskell.org/00-index.tar

matrix:
  include:
  # https://github.com/hvr/multi-ghc-travis
  #- env: BUILD=cabal GHCVER=7.8.4 CABALVER=1.18
  #  compiler: ": #GHC 7.8.4"
  #  addons: {apt: {packages: [cabal-install-1.18,ghc-7.8.4,happy-1.19.5,alex-3.1.7], sources: [hvr-ghc]}}
  - env: BUILD=cabal GHCVER=7.10.3 CABALVER=1.22
    compiler: ": #GHC 7.10.3"
    addons: {apt: {packages: [cabal-install-1.22,ghc-7.10.3,happy-1.19.5,alex-3.1.7], sources: [hvr-ghc]}}
  - env: BUILD=cabal GHCVER=8.0.1 CABALVER=1.24
    compiler: ": #GHC 8.0.1"
    addons: {apt: {packages: [cabal-install-1.24,ghc-8.0.1,happy-1.19.5,alex-3.1.7], sources: [hvr-ghc]}}

  # Build with the upstream GHC and cabal-install. This is an accepted failure.
  - env: BUILD=cabal GHCVER=head  CABALVER=head
    compiler: ": #GHC HEAD"
    addons: {apt: {packages: [cabal-install-head,ghc-head], sources: [hvr-ghc]}}

  allow_failures:
  - env: BUILD=cabal GHCVER=head  CABALVER=head

  fast_finish: true

before_install:
  - unset CC
  - if [[ $TRAVIS_OS_NAME == 'linux' ]];
    then
        export PATH=/opt/alex/3.1.7/bin:/opt/happy/1.19.5/bin:/opt/ghc/$GHCVER/bin:/opt/cabal/$CABALVER/bin:$HOME/.cabal/bin:$PATH;
        export SED=sed;
        export ZCAT=zcat;
    fi
  - env
  # Allow newer versions of packages when building on GHC head
  - CABALARGS=""
  - if [ "x$GHCVER" = "xhead" ]; then CABALARGS=--allow-newer; fi

install:
  - which cabal
  - cabal --version
  - which ghc
  - echo "$(ghc --version) [$(ghc --print-project-git-commit-id 2> /dev/null || echo '?')]"
  - if [ -f $HOME/.cabal/packages/hackage.haskell.org/00-index.tar.gz ];
    then
        $ZCAT $HOME/.cabal/packages/hackage.haskell.org/00-index.tar.gz >
                $HOME/.cabal/packages/hackage.haskell.org/00-index.tar;
    fi
  - travis_retry cabal --ignore-sandbox update -v
  # Run build with 2 parallel jobs
  - $SED -i -r 's/(^jobs:).*/\1 2/' $HOME/.cabal/config
  # First install isa-parser
  - pushd isa-parser
  - cabal --ignore-sandbox install --only-dependencies --enable-tests
  - echo 'Configuring isa-parser'
  - cabal --ignore-sandbox configure
  - echo 'Building isa-parser'
  - cabal --ignore-sandbox build
  - echo 'Installing isa-parser'
  - cabal --ignore-sandbox install 
  - popd # Go back to the root dir
  - pushd cogent
  - cabal --ignore-sandbox install --only-dependencies --enable-tests;
  #- cabal --ignore-sandbox install --only-dependencies --enable-tests --force-reinstalls;
  - popd

script:
  - ORIGINAL_DIR=$(pwd)
  - pushd cogent
  - echo 'Configuring Cogent'
  - cabal --ignore-sandbox configure --enable-tests
  - echo 'Building Cogent'
  - cabal --ignore-sandbox build
  #- cabal copy
  #- cabal register
  - echo 'Installing Cogent'
  - cabal --ignore-sandbox install
  - echo 'Running tests'
  - make test-tc
  - make test-ds
  - make test-an
  - make test-mn
  - make test-cg
  #- make test-ac # 1 failed test - fix and re-enable
  - make test-aq
  #- make test-gcc #1 failed test - fix and re-enable
  - popd
