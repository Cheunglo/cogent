/*
 * Copyright 2016, NICTA
 *
 * This software may be distributed and modified according to the terms of
 * the GNU General Public License version 2. Note that NO WARRANTY is provided.
 * See "LICENSE_GPLv2.txt" for details.
 *
 * @TAG(NICTA_GPL)
 */

$ty:(VfsStat) vfs_stat_set_mtime($ty:((VfsStat, OSTimeSpec)) args)
{
	$ty:(VfsStat) stat = args.p1;

	stat->mtime.tv_sec = args.p2.tv_sec;
	stat->mtime.tv_nsec = args.p2.tv_nsec;

	return stat;
}

$ty:(VfsStat) vfs_stat_set_atime($ty:((VfsStat, OSTimeSpec)) args)
{
	$ty:(VfsStat) stat = args.p1;

	stat->atime.tv_sec = args.p2.tv_sec;
	stat->atime.tv_nsec = args.p2.tv_nsec;

	return stat;
}

$ty:(VfsStat) vfs_stat_set_ctime($ty:((VfsStat, OSTimeSpec)) args)
{
	$ty:(VfsStat) stat = args.p1;

	stat->ctime.tv_sec = args.p2.tv_sec;
	stat->ctime.tv_nsec = args.p2.tv_nsec;

	return stat;
}

$ty:(VfsStat) vfs_stat_set_gid ($ty:((VfsStat, U32)) args)
{
	$ty:(VfsStat) stat = args.p1;

	stat->gid = KGIDT_INIT(args.p2);
	return stat;
}

$ty:(VfsStat) vfs_stat_set_uid ($ty:((VfsStat, U32)) args) {
	$ty:(VfsStat) stat = args.p1;

	stat->uid = KUIDT_INIT(args.p2);
	return stat;
}

$ty:(VfsStat) vfs_stat_set_nlink ($ty:((VfsStat, U32)) args) {
	$ty:(VfsStat) stat = args.p1;

    stat->nlink = args.p2;
	return stat;
}

// set_mode is special because it also updates the i_fops
$ty:(VfsStat) vfs_stat_set_mode($ty:((VfsStat, U32)) args)
{
	$ty:(VfsStat) stat = args.p1;
	stat->mode = args.p2;
    return stat;
}

$ty:(VfsStat) vfs_stat_set_blksize($ty:((VfsStat, U32)) args)
{
	$ty:(VfsStat) stat = args.p1;
	stat->blksize = args.p2;
    return stat;
}

$ty:(VfsStat) vfs_stat_set_blocks($ty:((VfsStat, U64)) args)
{
	$ty:(VfsStat) stat = args.p1;
	stat->blocks = args.p2;
    return stat;
}

#define STAT_GETTER(field) \
u32 vfs_stat_get_##field ($ty:(VfsStat!) stat)\
{\
	return stat->field;\
}

#define STAT_SETTER(field) \
$ty:(VfsStat) vfs_stat_set_##field($ty:((VfsStat, U32)) args)\
{\
	args.p1->field = args.p2;\
    return args.p1; \
}

/*
STAT_GETTER(flags)
STAT_GETTER(ino)
STAT_GETTER(nlink)
STAT_GETTER(mode)
*/

STAT_SETTER(ino)

$ty:(VfsStat) vfs_stat_set_size($ty:((VfsStat, U64)) args)
{
	args.p1->size = args.p2;
    return args.p1;
}

