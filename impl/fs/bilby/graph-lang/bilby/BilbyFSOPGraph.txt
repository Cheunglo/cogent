Function COGENT.u16_to_u64 2 a@0 Word 16 mem Mem 2 ret Word 64 mem Mem
4 Basic Ret 1 ret Word 64 Var d@3 Word 64 
3 Call 4 COGENT.u32_to_u64 2 Var c@2 Word 32 Var mem Mem  2 d@3 Word 64 mem Mem
2 Call 3 COGENT.u16_to_u32 2 Var b@1 Word 16 Var mem Mem  2 c@2 Word 32 mem Mem
1 Basic 2 1 b@1 Word 16 Var a@0 Word 16 
EntryPoint 1

Function COGENT.setu8 4 a@0.0 Word 8 a@0.1 Word 32 a@0.2 Word 8 mem Mem 3 ret.0 Word 8 ret.1 Word 32 mem Mem
5 Basic Ret 2 ret.0 Word 8 Var a_fld2@4 Word 8 ret.1 Word 32 Var a_fld1@3 Word 32 
4 Basic 5 1 a_fld2@4 Word 8 Var a@4.2 Word 8 
3 Basic 4 1 a_fld1@3 Word 32 Var a@3.1 Word 32 
2 Basic 3 1 d@2 Word 8 Var a_fld0@1 Word 8 
1 Basic 2 1 a_fld0@1 Word 8 Var a@1.0 Word 8 
EntryPoint 1

Function COGENT.serialise_size_u8 2 a@0 Word 8 mem Mem 2 ret Word 32 mem Mem
3 Basic Ret 1 ret Word 32 Op WordCast Word 32 1 Var c@2 Word 8  
2 Basic 3 1 c@2 Word 8 Num 1 Word 8 
1 Basic 2 1 b@1 Word 8 Var a@0 Word 8 
EntryPoint 1

Function COGENT.serialise_size_le64 2 a@0 Word 64 mem Mem 2 ret Word 32 mem Mem
3 Basic Ret 1 ret Word 32 Op WordCast Word 32 1 Var c@2 Word 8  
2 Basic 3 1 c@2 Word 8 Num 8 Word 8 
1 Basic 2 1 b@1 Word 64 Var a@0 Word 64 
EntryPoint 1

Function COGENT.serialise_size_le32 2 a@0 Word 32 mem Mem 2 ret Word 32 mem Mem
3 Basic Ret 1 ret Word 32 Op WordCast Word 32 1 Var c@2 Word 8  
2 Basic 3 1 c@2 Word 8 Num 4 Word 8 
1 Basic 2 1 b@1 Word 32 Var a@0 Word 32 
EntryPoint 1

Function COGENT.min_u64 3 a@0.0 Word 64 a@0.1 Word 64 mem Mem 2 ret Word 64 mem Mem
4 Cond 5 6 Var f@3 Bool
6 Basic Ret 1 ret Word 64 Var a_fld1@2 Word 64 
5 Basic Ret 1 ret Word 64 Var a_fld0@1 Word 64 
3 Basic 4 1 f@3 Bool Op SignedLess Bool 2 Var a_fld0@1 Word 64 Var a_fld1@2 Word 64  
2 Basic 3 1 a_fld1@2 Word 64 Var a@2.1 Word 64 
1 Basic 2 1 a_fld0@1 Word 64 Var a@1.0 Word 64 
EntryPoint 1

Function COGENT.min_u32 3 a@0.0 Word 32 a@0.1 Word 32 mem Mem 2 ret Word 32 mem Mem
4 Cond 5 6 Var f@3 Bool
6 Basic Ret 1 ret Word 32 Var a_fld1@2 Word 32 
5 Basic Ret 1 ret Word 32 Var a_fld0@1 Word 32 
3 Basic 4 1 f@3 Bool Op SignedLess Bool 2 Var a_fld0@1 Word 32 Var a_fld1@2 Word 32  
2 Basic 3 1 a_fld1@2 Word 32 Var a@2.1 Word 32 
1 Basic 2 1 a_fld0@1 Word 32 Var a@1.0 Word 32 
EntryPoint 1

Function COGENT.mark_used_modifier 4 a@0.0 Word 8 a@0.1 Word 32 a@0.2 Word 32 mem Mem 3 ret.0 Word 8 ret.1 Word 32 mem Mem
10 Basic Ret 2 ret.0 Word 8 Var j@6 Word 8 ret.1 Word 32 Var m@9 Word 32 
9 Basic 10 1 m@9 Word 32 Op Minus Word 32 2 Var a_fld1@3 Word 32 Var l@8 Word 32  
8 Basic 9 1 l@8 Word 32 Op WordCast Word 32 1 Var k@7 Word 8  
7 Basic 8 1 k@7 Word 8 Num 1 Word 8 
6 Basic 7 1 j@6 Word 8 Num 1 Word 8 
5 Basic 6 1 i@5 Word 32 Var a_fld2@4 Word 32 
4 Basic 5 1 a_fld2@4 Word 32 Var a@4.2 Word 32 
3 Basic 4 1 a_fld1@3 Word 32 Var a@3.1 Word 32 
2 Basic 3 1 d@2 Word 8 Var a_fld0@1 Word 8 
1 Basic 2 1 a_fld0@1 Word 8 Var a@1.0 Word 8 
EntryPoint 1

Function COGENT.mark_dirty_modifier 4 a@0.0 Word 32 a@0.1 Word 32 a@0.2 Word 32 mem Mem 3 ret.0 Word 32 ret.1 Word 32 mem Mem
7 Basic Ret 2 ret.0 Word 32 Var i@5 Word 32 ret.1 Word 32 Var j@6 Word 32 
6 Basic 7 1 j@6 Word 32 Num 0 Word 32 
5 Basic 6 1 i@5 Word 32 Op Plus Word 32 2 Var a_fld0@1 Word 32 Var a_fld2@4 Word 32  
4 Basic 5 1 a_fld2@4 Word 32 Var a@4.2 Word 32 
3 Basic 4 1 f@3 Word 32 Var a_fld1@2 Word 32 
2 Basic 3 1 a_fld1@2 Word 32 Var a@2.1 Word 32 
1 Basic 2 1 a_fld0@1 Word 32 Var a@1.0 Word 32 
EntryPoint 1

Function COGENT.is_set 3 a@0.0 Word 32 a@0.1 Word 32 mem Mem 2 ret Bool mem Mem
6 Basic Ret 1 ret Bool Op Not Bool 1 Op Equals Bool 2 Var f@3 Word 32 Var h@5 Word 32   
5 Basic 6 1 h@5 Word 32 Op WordCast Word 32 1 Var g@4 Word 8  
4 Basic 5 1 g@4 Word 8 Num 0 Word 8 
3 Basic 4 1 f@3 Word 32 Op BWAnd Word 32 2 Var a_fld0@1 Word 32 Var a_fld1@2 Word 32  
2 Basic 3 1 a_fld1@2 Word 32 Var a@2.1 Word 32 
1 Basic 2 1 a_fld0@1 Word 32 Var a@1.0 Word 32 
EntryPoint 1

Function COGENT.in_range_u32 4 a@0.0 Word 32 a@0.1 Word 32 a@0.2 Word 32 mem Mem 2 ret Bool mem Mem
7 Cond 8 9 Var j@6 Bool
9 Basic Ret 1 ret Bool Num 0 Bool 
8 Basic Ret 1 ret Bool Num 1 Bool 
6 Basic 7 1 j@6 Bool Op And Bool 2 Var h@4 Bool Var i@5 Bool  
5 Basic 6 1 i@5 Bool Op SignedLess Bool 2 Var a_fld0@1 Word 32 Var a_fld2@3 Word 32  
4 Basic 5 1 h@4 Bool Op Not Bool 1 Op SignedLess Bool 2 Var a_fld0@1 Word 32 Var a_fld1@2 Word 32   
3 Basic 4 1 a_fld2@3 Word 32 Var a@3.2 Word 32 
2 Basic 3 1 a_fld1@2 Word 32 Var a@2.1 Word 32 
1 Basic 2 1 a_fld0@1 Word 32 Var a@1.0 Word 32 
EntryPoint 1

Function COGENT.cogent_low_16_bits 2 a@0 Word 32 mem Mem 2 ret Word 16 mem Mem
6 Basic Ret 1 ret Word 16 Var f@5 Word 16 
5 Call 6 COGENT.u32_to_u16 2 Var e@4 Word 32 Var mem Mem  2 f@5 Word 16 mem Mem
4 Basic 5 1 e@4 Word 32 Op BWAnd Word 32 2 Var b@1 Word 32 Var d@3 Word 32  
3 Basic 4 1 d@3 Word 32 Op WordCast Word 32 1 Var c@2 Word 16  
2 Basic 3 1 c@2 Word 16 Num 65535 Word 16 
1 Basic 2 1 b@1 Word 32 Var a@0 Word 32 
EntryPoint 1

Function COGENT.cogent_high_16_bits 2 a@0 Word 32 mem Mem 2 ret Word 16 mem Mem
8 Basic Ret 1 ret Word 16 Var h@7 Word 16 
7 Call 8 COGENT.u32_to_u16 2 Var g@6 Word 32 Var mem Mem  2 h@7 Word 16 mem Mem
6 Basic 7 1 g@6 Word 32 Op ShiftRight Word 32 2 Var d@3 Word 32 Var f@5 Word 32  
5 Call 6 COGENT.u8_to_u32 2 Var e@4 Word 8 Var mem Mem  2 f@5 Word 32 mem Mem
4 Basic 5 1 e@4 Word 8 Num 16 Word 8 
3 Basic 4 1 d@3 Word 32 Op BWAnd Word 32 2 Var b@1 Word 32 Var c@2 Word 32  
2 Basic 3 1 c@2 Word 32 Num 4294901760 Word 32 
1 Basic 2 1 b@1 Word 32 Var a@0 Word 32 
EntryPoint 1

Function COGENT.buffer_memset_loop 4 a@0.0 Word 8 a@0.1 Word 32 a@0.2 Word 8 mem Mem 3 ret.0 Word 8 ret.1 Word 32 mem Mem
7 Basic Ret 2 ret.0 Word 8 Var a_fld2@5 Word 8 ret.1 Word 32 Var j@6 Word 32 
6 Basic 7 1 j@6 Word 32 Num 0 Word 32 
5 Basic 6 1 a_fld2@5 Word 8 Var a@5.2 Word 8 
4 Basic 5 1 g@4 Word 32 Var a_fld1@3 Word 32 
3 Basic 4 1 a_fld1@3 Word 32 Var a@3.1 Word 32 
2 Basic 3 1 d@2 Word 8 Var a_fld0@1 Word 8 
1 Basic 2 1 a_fld0@1 Word 8 Var a@1.0 Word 8 
EntryPoint 1

Function COGENT.binNot 2 a@0 Word 64 mem Mem 2 ret Word 64 mem Mem
3 Basic Ret 1 ret Word 64 Op BWXOR Word 64 2 Var c@2 Word 64 Var b@1 Word 64  
2 Basic 3 1 c@2 Word 64 Num 18446744073709551615 Word 64 
1 Basic 2 1 b@1 Word 64 Var a@0 Word 64 
EntryPoint 1

Function COGENT.copy_wa 4 a@0.0 Word 8 a@0.1 Word 32 a@0.2 Word 32 mem Mem 3 ret.0 Word 8 ret.1 Word 32 mem Mem
10 Basic Ret 2 ret.0 Word 8 Var j@6 Word 8 ret.1 Word 32 Var m@9 Word 32 
9 Basic 10 1 m@9 Word 32 Op Plus Word 32 2 Var a_fld1@3 Word 32 Var l@8 Word 32  
8 Basic 9 1 l@8 Word 32 Op WordCast Word 32 1 Var k@7 Word 8  
7 Basic 8 1 k@7 Word 8 Num 1 Word 8 
6 Call 7 COGENT.wordarray_get_0 3 Var i@5.0 Word 32 Var i@5.1 Word 32 Var mem Mem  2 j@6 Word 8 mem Mem
5 Basic 6 2 i@5.0 Word 32 Var a_fld2@4 Word 32 i@5.1 Word 32 Var a_fld1@3 Word 32 
4 Basic 5 1 a_fld2@4 Word 32 Var a@4.2 Word 32 
3 Basic 4 1 a_fld1@3 Word 32 Var a@3.1 Word 32 
2 Basic 3 1 d@2 Word 8 Var a_fld0@1 Word 8 
1 Basic 2 1 a_fld0@1 Word 8 Var a@1.0 Word 8 
EntryPoint 1

Function COGENT.dtype_to_vtype 2 a@0 Word 8 mem Mem 2 ret Word 32 mem Mem
4 Cond 5 7 Var d@3 Bool
9 Cond 10 12 Var f@8 Bool
14 Cond 15 17 Var h@13 Bool
19 Cond 20 22 Var j@18 Bool
24 Cond 25 27 Var l@23 Bool
29 Cond 30 32 Var n@28 Bool
33 Basic Ret 1 ret Word 32 Op WordCast Word 32 1 Var o@32 Word 16  
32 Basic 33 1 o@32 Word 16 Num 49152 Word 16 
31 Basic Ret 1 ret Word 32 Op WordCast Word 32 1 Var o@30 Word 16  
30 Basic 31 1 o@30 Word 16 Num 4096 Word 16 
28 Basic 29 1 n@28 Bool Op Equals Bool 2 Var b@1 Word 8 Var m@27 Word 8  
27 Basic 28 1 m@27 Word 8 Num 5 Word 8 
26 Basic Ret 1 ret Word 32 Op WordCast Word 32 1 Var m@25 Word 16  
25 Basic 26 1 m@25 Word 16 Num 8192 Word 16 
23 Basic 24 1 l@23 Bool Op Equals Bool 2 Var b@1 Word 8 Var k@22 Word 8  
22 Basic 23 1 k@22 Word 8 Num 4 Word 8 
21 Basic Ret 1 ret Word 32 Op WordCast Word 32 1 Var k@20 Word 16  
20 Basic 21 1 k@20 Word 16 Num 24576 Word 16 
18 Basic 19 1 j@18 Bool Op Equals Bool 2 Var b@1 Word 8 Var i@17 Word 8  
17 Basic 18 1 i@17 Word 8 Num 3 Word 8 
16 Basic Ret 1 ret Word 32 Op WordCast Word 32 1 Var i@15 Word 16  
15 Basic 16 1 i@15 Word 16 Num 40960 Word 16 
13 Basic 14 1 h@13 Bool Op Equals Bool 2 Var b@1 Word 8 Var g@12 Word 8  
12 Basic 13 1 g@12 Word 8 Num 2 Word 8 
11 Basic Ret 1 ret Word 32 Op WordCast Word 32 1 Var g@10 Word 16  
10 Basic 11 1 g@10 Word 16 Num 16384 Word 16 
8 Basic 9 1 f@8 Bool Op Equals Bool 2 Var b@1 Word 8 Var e@7 Word 8  
7 Basic 8 1 e@7 Word 8 Num 1 Word 8 
6 Basic Ret 1 ret Word 32 Op WordCast Word 32 1 Var e@5 Word 16  
5 Basic 6 1 e@5 Word 16 Num 32768 Word 16 
3 Basic 4 1 d@3 Bool Op Equals Bool 2 Var b@1 Word 8 Var c@2 Word 8  
2 Basic 3 1 c@2 Word 8 Num 0 Word 8 
1 Basic 2 1 b@1 Word 8 Var a@0 Word 8 
EntryPoint 1

Function COGENT.vtype_to_dtype 2 a@0 Word 32 mem Mem 2 ret Word 8 mem Mem
5 Cond 6 7 Var e@4 Bool
10 Cond 11 12 Var h@9 Bool
15 Cond 16 17 Var k@14 Bool
20 Cond 21 22 Var n@19 Bool
25 Cond 26 27 Var q@24 Bool
30 Cond 31 32 Var t@29 Bool
32 Basic Ret 1 ret Word 8 Num 6 Word 8 
31 Basic Ret 1 ret Word 8 Num 5 Word 8 
29 Basic 30 1 t@29 Bool Op Equals Bool 2 Var b@1 Word 32 Var s@28 Word 32  
28 Basic 29 1 s@28 Word 32 Op WordCast Word 32 1 Var r@27 Word 16  
27 Basic 28 1 r@27 Word 16 Num 4096 Word 16 
26 Basic Ret 1 ret Word 8 Num 4 Word 8 
24 Basic 25 1 q@24 Bool Op Equals Bool 2 Var b@1 Word 32 Var p@23 Word 32  
23 Basic 24 1 p@23 Word 32 Op WordCast Word 32 1 Var o@22 Word 16  
22 Basic 23 1 o@22 Word 16 Num 8192 Word 16 
21 Basic Ret 1 ret Word 8 Num 3 Word 8 
19 Basic 20 1 n@19 Bool Op Equals Bool 2 Var b@1 Word 32 Var m@18 Word 32  
18 Basic 19 1 m@18 Word 32 Op WordCast Word 32 1 Var l@17 Word 16  
17 Basic 18 1 l@17 Word 16 Num 24576 Word 16 
16 Basic Ret 1 ret Word 8 Num 2 Word 8 
14 Basic 15 1 k@14 Bool Op Equals Bool 2 Var b@1 Word 32 Var j@13 Word 32  
13 Basic 14 1 j@13 Word 32 Op WordCast Word 32 1 Var i@12 Word 16  
12 Basic 13 1 i@12 Word 16 Num 40960 Word 16 
11 Basic Ret 1 ret Word 8 Num 1 Word 8 
9 Basic 10 1 h@9 Bool Op Equals Bool 2 Var b@1 Word 32 Var g@8 Word 32  
8 Basic 9 1 g@8 Word 32 Op WordCast Word 32 1 Var f@7 Word 16  
7 Basic 8 1 f@7 Word 16 Num 16384 Word 16 
6 Basic Ret 1 ret Word 8 Num 0 Word 8 
4 Basic 5 1 e@4 Bool Op Equals Bool 2 Var b@1 Word 32 Var d@3 Word 32  
3 Basic 4 1 d@3 Word 32 Op WordCast Word 32 1 Var c@2 Word 16  
2 Basic 3 1 c@2 Word 16 Num 32768 Word 16 
1 Basic 2 1 b@1 Word 32 Var a@0 Word 32 
EntryPoint 1

Function COGENT.vmode_is_dir 2 a@0 Word 32 mem Mem 2 ret Bool mem Mem
7 Basic Ret 1 ret Bool Op Equals Bool 2 Var e@4 Word 32 Var g@6 Word 32  
6 Basic 7 1 g@6 Word 32 Op WordCast Word 32 1 Var f@5 Word 16  
5 Basic 6 1 f@5 Word 16 Num 16384 Word 16 
4 Basic 5 1 e@4 Word 32 Op BWAnd Word 32 2 Var b@1 Word 32 Var d@3 Word 32  
3 Basic 4 1 d@3 Word 32 Op WordCast Word 32 1 Var c@2 Word 16  
2 Basic 3 1 c@2 Word 16 Num 61440 Word 16 
1 Basic 2 1 b@1 Word 32 Var a@0 Word 32 
EntryPoint 1

Function COGENT.vmode_to_vtype 2 a@0 Word 32 mem Mem 2 ret Word 32 mem Mem
4 Basic Ret 1 ret Word 32 Op BWAnd Word 32 2 Var b@1 Word 32 Var d@3 Word 32  
3 Basic 4 1 d@3 Word 32 Op WordCast Word 32 1 Var c@2 Word 16  
2 Basic 3 1 c@2 Word 16 Num 61440 Word 16 
1 Basic 2 1 b@1 Word 32 Var a@0 Word 32 
EntryPoint 1

Function COGENT.safe_add32 3 a@0.0 Word 32 a@0.1 Word 32 mem Mem 4 ret.0 Word 32 ret.1 Word 32 ret.2 Word 32 mem Mem
7 Cond 8 11 Var i@6 Bool
12 Basic Ret 3 ret.0 Word 32 Var j@11.0 Word 32 ret.1 Word 32 Num 0 Word 32 ret.2 Word 32 Var j@11.1 Word 32 
11 Basic 12 2 j@11.0 Word 32 Num 0 Word 32 j@11.1 Word 32 Var f@3 Word 32 
10 Basic Ret 3 ret.0 Word 32 Var k@9.0 Word 32 ret.1 Word 32 Var k@9.1 Word 32 ret.2 Word 32 Num 0 Word 32 
9 Basic 10 2 k@9.0 Word 32 Num 0 Word 32 k@9.1 Word 32 Var j@8 Word 32 
8 Basic 9 1 j@8 Word 32 Num 0 Word 32 
6 Basic 7 1 i@6 Bool Op Or Bool 2 Var g@4 Bool Var h@5 Bool  
5 Basic 6 1 h@5 Bool Op SignedLess Bool 2 Var f@3 Word 32 Var a_fld1@2 Word 32  
4 Basic 5 1 g@4 Bool Op SignedLess Bool 2 Var f@3 Word 32 Var a_fld0@1 Word 32  
3 Basic 4 1 f@3 Word 32 Op Plus Word 32 2 Var a_fld0@1 Word 32 Var a_fld1@2 Word 32  
2 Basic 3 1 a_fld1@2 Word 32 Var a@2.1 Word 32 
1 Basic 2 1 a_fld0@1 Word 32 Var a@1.0 Word 32 
EntryPoint 1

Function COGENT.safe_add64 3 a@0.0 Word 64 a@0.1 Word 64 mem Mem 4 ret.0 Word 32 ret.1 Word 32 ret.2 Word 64 mem Mem
7 Cond 8 11 Var i@6 Bool
12 Basic Ret 3 ret.0 Word 32 Var j@11.0 Word 32 ret.1 Word 32 Num 0 Word 32 ret.2 Word 64 Var j@11.1 Word 64 
11 Basic 12 2 j@11.0 Word 32 Num 0 Word 32 j@11.1 Word 64 Var f@3 Word 64 
10 Basic Ret 3 ret.0 Word 32 Var k@9.0 Word 32 ret.1 Word 32 Var k@9.1 Word 32 ret.2 Word 64 Num 0 Word 64 
9 Basic 10 2 k@9.0 Word 32 Num 0 Word 32 k@9.1 Word 32 Var j@8 Word 32 
8 Basic 9 1 j@8 Word 32 Num 0 Word 32 
6 Basic 7 1 i@6 Bool Op Or Bool 2 Var g@4 Bool Var h@5 Bool  
5 Basic 6 1 h@5 Bool Op SignedLess Bool 2 Var f@3 Word 64 Var a_fld1@2 Word 64  
4 Basic 5 1 g@4 Bool Op SignedLess Bool 2 Var f@3 Word 64 Var a_fld0@1 Word 64  
3 Basic 4 1 f@3 Word 64 Op Plus Word 64 2 Var a_fld0@1 Word 64 Var a_fld1@2 Word 64  
2 Basic 3 1 a_fld1@2 Word 64 Var a@2.1 Word 64 
1 Basic 2 1 a_fld0@1 Word 64 Var a@1.0 Word 64 
EntryPoint 1

Function COGENT.safe_sub32 3 a@0.0 Word 32 a@0.1 Word 32 mem Mem 4 ret.0 Word 32 ret.1 Word 32 ret.2 Word 32 mem Mem
5 Cond 6 14 Var g@4 Bool
15 Basic Ret 3 ret.0 Word 32 Var h@14.0 Word 32 ret.1 Word 32 Num 0 Word 32 ret.2 Word 32 Var h@14.1 Word 32 
14 Basic 15 2 h@14.0 Word 32 Num 0 Word 32 h@14.1 Word 32 Var f@3 Word 32 
13 Basic Ret 3 ret.0 Word 32 Var n@12.0 Word 32 ret.1 Word 32 Var n@12.1 Word 32 ret.2 Word 32 Num 0 Word 32 
12 Basic 13 2 n@12.0 Word 32 Num 0 Word 32 n@12.1 Word 32 Var m@11 Word 32 
11 Basic 12 1 m@11 Word 32 Num 0 Word 32 
10 Basic 11 1 l@10 Word 32 Num 0 Word 32 
9 Basic 10 1 k@9 Word 32 Num 0 Word 32 
8 Basic 9 1 j@8 Word 32 Num 0 Word 32 
7 Basic 8 1 i@7 Word 32 Num 0 Word 32 
6 Basic 7 1 h@6 Word 32 Num 0 Word 32 
4 Basic 5 1 g@4 Bool Op Not Bool 1 Op SignedLessEquals Bool 2 Var f@3 Word 32 Var a_fld0@1 Word 32   
3 Basic 4 1 f@3 Word 32 Op Minus Word 32 2 Var a_fld0@1 Word 32 Var a_fld1@2 Word 32  
2 Basic 3 1 a_fld1@2 Word 32 Var a@2.1 Word 32 
1 Basic 2 1 a_fld0@1 Word 32 Var a@1.0 Word 32 
EntryPoint 1

Function COGENT.safe_sub64 3 a@0.0 Word 64 a@0.1 Word 64 mem Mem 4 ret.0 Word 32 ret.1 Word 32 ret.2 Word 64 mem Mem
5 Cond 6 9 Var g@4 Bool
10 Basic Ret 3 ret.0 Word 32 Var h@9.0 Word 32 ret.1 Word 32 Num 0 Word 32 ret.2 Word 64 Var h@9.1 Word 64 
9 Basic 10 2 h@9.0 Word 32 Num 0 Word 32 h@9.1 Word 64 Var f@3 Word 64 
8 Basic Ret 3 ret.0 Word 32 Var i@7.0 Word 32 ret.1 Word 32 Var i@7.1 Word 32 ret.2 Word 64 Num 0 Word 64 
7 Basic 8 2 i@7.0 Word 32 Num 0 Word 32 i@7.1 Word 32 Var h@6 Word 32 
6 Basic 7 1 h@6 Word 32 Num 0 Word 32 
4 Basic 5 1 g@4 Bool Op Not Bool 1 Op SignedLessEquals Bool 2 Var f@3 Word 64 Var a_fld0@1 Word 64   
3 Basic 4 1 f@3 Word 64 Op Minus Word 64 2 Var a_fld0@1 Word 64 Var a_fld1@2 Word 64  
2 Basic 3 1 a_fld1@2 Word 64 Var a@2.1 Word 64 
1 Basic 2 1 a_fld0@1 Word 64 Var a@1.0 Word 64 
EntryPoint 1

Function COGENT.get_obj_trans 3 a@0.0 Word 32 a@0.1 Word 32 mem Mem 2 ret Word 8 mem Mem
8 Cond 9 10 Var j@7 Bool
10 Basic Ret 1 ret Word 8 Num 1 Word 8 
9 Basic Ret 1 ret Word 8 Num 2 Word 8 
7 Basic 8 1 j@7 Bool Op Equals Bool 2 Var a_fld0@1 Word 32 Var i@6 Word 32  
6 Basic 7 1 i@6 Word 32 Op Minus Word 32 2 Var a_fld1@2 Word 32 Var h@5 Word 32  
5 Basic 6 1 h@5 Word 32 Op WordCast Word 32 1 Var g@4 Word 8  
4 Basic 5 1 g@4 Word 8 Num 1 Word 8 
3 Basic 4 1 f@3 Word 32 Num 0 Word 32 
2 Basic 3 1 a_fld1@2 Word 32 Var a@2.1 Word 32 
1 Basic 2 1 a_fld0@1 Word 32 Var a@1.0 Word 32 
EntryPoint 1

Function COGENT.mkObjSuper 4 a@0.0 Word 32 a@0.1 Word 32 a@0.2 Word 32 mem Mem 2 ret Word 32 mem Mem
28 Basic Ret 1 ret Word 32 Var v5@27 Word 32 
27 Basic 28 2 v5@27 Word 32 Var v2@24 Word 32 mem Mem Op MemUpdate Mem 3 Var mem Mem Op Plus Word 32 2 Var v2@24 Word 32 Num 32 Word 32  Var v4@26 Word 64  
26 Basic 27 1 v4@26 Word 64 Op WordCast Word 64 1 Var v3@25 Word 8  
25 Basic 26 1 v3@25 Word 8 Num 0 Word 8 
24 Basic 25 2 v2@24 Word 32 Var y@21 Word 32 mem Mem Op MemUpdate Mem 3 Var mem Mem Op Plus Word 32 2 Var y@21 Word 32 Num 28 Word 32  Var v1@23 Word 32  
23 Basic 24 1 v1@23 Word 32 Op WordCast Word 32 1 Var z@22 Word 8  
22 Basic 23 1 z@22 Word 8 Num 0 Word 8 
21 Basic 22 2 y@21 Word 32 Var v@18 Word 32 mem Mem Op MemUpdate Mem 3 Var mem Mem Op Plus Word 32 2 Var v@18 Word 32 Num 24 Word 32  Var x@20 Word 32  
20 Basic 21 1 x@20 Word 32 Op WordCast Word 32 1 Var w@19 Word 8  
19 Basic 20 1 w@19 Word 8 Num 0 Word 8 
18 Basic 19 2 v@18 Word 32 Var s@15 Word 32 mem Mem Op MemUpdate Mem 3 Var mem Mem Op Plus Word 32 2 Var s@15 Word 32 Num 20 Word 32  Var u@17 Word 32  
17 Basic 18 1 u@17 Word 32 Op WordCast Word 32 1 Var t@16 Word 8  
16 Basic 17 1 t@16 Word 8 Num 0 Word 8 
15 Basic 16 2 s@15 Word 32 Var p@12 Word 32 mem Mem Op MemUpdate Mem 3 Var mem Mem Op Plus Word 32 2 Var p@12 Word 32 Num 16 Word 32  Var r@14 Word 32  
14 Basic 15 1 r@14 Word 32 Op WordCast Word 32 1 Var q@13 Word 8  
13 Basic 14 1 q@13 Word 8 Num 0 Word 8 
12 Basic 13 2 p@12 Word 32 Var m@9 Word 32 mem Mem Op MemUpdate Mem 3 Var mem Mem Op Plus Word 32 2 Var m@9 Word 32 Num 12 Word 32  Var o@11 Word 32  
11 Basic 12 1 o@11 Word 32 Op WordCast Word 32 1 Var n@10 Word 8  
10 Basic 11 1 n@10 Word 8 Num 0 Word 8 
9 Basic 10 2 m@9 Word 32 Var k@7 Word 32 mem Mem Op MemUpdate Mem 3 Var mem Mem Op Plus Word 32 2 Var k@7 Word 32 Num 8 Word 32  Var l@8 Word 32  
8 Call 9 COGENT.wubi_dev_min_io_size 2 Var a_fld2@3 Word 32 Var mem Mem  2 l@8 Word 32 mem Mem
7 Basic 8 2 k@7 Word 32 Var i@5 Word 32 mem Mem Op MemUpdate Mem 3 Var mem Mem Op Plus Word 32 2 Var i@5 Word 32 Num 4 Word 32  Var j@6 Word 32  
6 Call 7 COGENT.wubi_vol_usable_leb_size 2 Var a_fld1@2 Word 32 Var mem Mem  2 j@6 Word 32 mem Mem
5 Basic 6 2 i@5 Word 32 Var a_fld0@1 Word 32 mem Mem Op MemUpdate Mem 3 Var mem Mem Op Plus Word 32 2 Var a_fld0@1 Word 32 Num 0 Word 32  Var h@4 Word 32  
4 Call 5 COGENT.wubi_vol_size 2 Var a_fld1@2 Word 32 Var mem Mem  2 h@4 Word 32 mem Mem
3 Basic 4 1 a_fld2@3 Word 32 Var a@3.2 Word 32 
2 Basic 3 1 a_fld1@2 Word 32 Var a@2.1 Word 32 
1 Basic 2 1 a_fld0@1 Word 32 Var a@1.0 Word 32 
EntryPoint 1

Function COGENT.print_ObjSuper 2 a@0 Word 32 mem Mem 2 ret Word 32 mem Mem
20 Basic Ret 1 ret Word 32 Num 0 Word 32 
19 Basic 20 1 t@19 Word 32 Num 0 Word 32 
18 Basic 19 1 s@18 Word 32 Num 0 Word 32 
17 Basic 18 1 r@17 Word 32 Num 0 Word 32 
16 Basic 17 1 q@16 Word 32 Num 0 Word 32 
15 Basic 16 1 p@15 Word 32 Num 0 Word 32 
14 Basic 15 1 o@14 Word 32 Num 0 Word 32 
13 Basic 14 1 n@13 Word 32 Num 0 Word 32 
12 Basic 13 1 m@12 Word 32 Num 0 Word 32 
11 Basic 12 1 l@11 Word 32 Num 0 Word 32 
10 Basic 11 1 k@10 Word 32 Num 0 Word 32 
9 Basic 10 1 j@9 Word 32 Num 0 Word 32 
8 Basic 9 1 i@8 Word 32 Num 0 Word 32 
7 Basic 8 1 h@7 Word 32 Num 0 Word 32 
6 Basic 7 1 g@6 Word 32 Num 0 Word 32 
5 Basic 6 1 f@5 Word 32 Num 0 Word 32 
4 Basic 5 1 e@4 Word 32 Num 0 Word 32 
3 Basic 4 1 d@3 Word 32 Num 0 Word 32 
2 Basic 3 1 c@2 Word 32 Num 0 Word 32 
1 Basic 2 1 b@1 Word 32 Var a@0 Word 32 
EntryPoint 1

Function COGENT.print_obj_super 2 a@0 Word 32 mem Mem 2 ret Word 32 mem Mem
11 Basic Ret 1 ret Word 32 Num 0 Word 32 
10 Basic 11 1 k@10 Word 32 Num 0 Word 32 
9 Basic 10 1 j@9 Word 32 Num 0 Word 32 
8 Basic 9 1 i@8 Word 32 Num 0 Word 32 
7 Basic 8 1 h@7 Word 32 Num 0 Word 32 
6 Basic 7 1 g@6 Word 32 Num 0 Word 32 
5 Basic 6 1 f@5 Word 32 Num 0 Word 32 
4 Basic 5 1 e@4 Word 32 Num 0 Word 32 
3 Basic 4 1 d@3 Word 32 Num 0 Word 32 
2 Basic 3 1 c@2 Word 32 Num 0 Word 32 
1 Basic 2 1 b@1 Word 32 Var a@0 Word 32 
EntryPoint 1

Function COGENT.serialise_size_ObjSuper 2 a@0 Word 32 mem Mem 2 ret Word 32 mem Mem
3 Basic Ret 1 ret Word 32 Op WordCast Word 32 1 Var c@2 Word 8  
2 Basic 3 1 c@2 Word 8 Num 40 Word 8 
1 Basic 2 1 b@1 Word 32 Var a@0 Word 32 
EntryPoint 1

Function COGENT.serialise_size_ObjInode 2 a@0 Word 32 mem Mem 2 ret Word 32 mem Mem
3 Basic Ret 1 ret Word 32 Op WordCast Word 32 1 Var c@2 Word 8  
2 Basic 3 1 c@2 Word 8 Num 60 Word 8 
1 Basic 2 1 b@1 Word 32 Var a@0 Word 32 
EntryPoint 1

Function COGENT.inum_from_obj_id 2 a@0 Word 64 mem Mem 2 ret Word 32 mem Mem
6 Basic Ret 1 ret Word 32 Var f@5 Word 32 
5 Call 6 COGENT.u64_to_u32 2 Var e@4 Word 64 Var mem Mem  2 f@5 Word 32 mem Mem
4 Basic 5 1 e@4 Word 64 Op ShiftRight Word 64 2 Var b@1 Word 64 Var d@3 Word 64  
3 Basic 4 1 d@3 Word 64 Op WordCast Word 64 1 Var c@2 Word 8  
2 Basic 3 1 c@2 Word 8 Num 32 Word 8 
1 Basic 2 1 b@1 Word 64 Var a@0 Word 64 
EntryPoint 1

Function COGENT.obj_id_inode_mk 2 a@0 Word 32 mem Mem 2 ret Word 64 mem Mem
11 Basic Ret 1 ret Word 64 Op BWOr Word 64 2 Var f@5 Word 64 Var k@10 Word 64  
10 Basic 11 1 k@10 Word 64 Op ShiftLeft Word 64 2 Var h@7 Word 64 Var j@9 Word 64  
9 Basic 10 1 j@9 Word 64 Op WordCast Word 64 1 Var i@8 Word 8  
8 Basic 9 1 i@8 Word 8 Num 29 Word 8 
7 Call 8 COGENT.u8_to_u64 2 Var g@6 Word 8 Var mem Mem  2 h@7 Word 64 mem Mem
6 Basic 7 1 g@6 Word 8 Num 0 Word 8 
5 Basic 6 1 f@5 Word 64 Op ShiftLeft Word 64 2 Var c@2 Word 64 Var e@4 Word 64  
4 Basic 5 1 e@4 Word 64 Op WordCast Word 64 1 Var d@3 Word 8  
3 Basic 4 1 d@3 Word 8 Num 32 Word 8 
2 Call 3 COGENT.u32_to_u64 2 Var b@1 Word 32 Var mem Mem  2 c@2 Word 64 mem Mem
1 Basic 2 1 b@1 Word 32 Var a@0 Word 32 
EntryPoint 1

Function COGENT.next_inode_id 2 a@0 Word 64 mem Mem 2 ret Word 64 mem Mem
5 Cond 6 7 Var e@4 Bool
11 Basic Ret 1 ret Word 64 Var i@10 Word 64 
10 Call 11 COGENT.obj_id_inode_mk 2 Var h@9 Word 32 Var mem Mem  2 i@10 Word 64 mem Mem
9 Basic 10 1 h@9 Word 32 Op Plus Word 32 2 Var c@2 Word 32 Var g@8 Word 32  
8 Basic 9 1 g@8 Word 32 Op WordCast Word 32 1 Var f@7 Word 8  
7 Basic 8 1 f@7 Word 8 Num 1 Word 8 
6 Basic Ret 1 ret Word 64 Num 18446744073709551615 Word 64 
4 Basic 5 1 e@4 Bool Op Equals Bool 2 Var c@2 Word 32 Var d@3 Word 32  
3 Basic 4 1 d@3 Word 32 Num 4294967295 Word 32 
2 Call 3 COGENT.inum_from_obj_id 2 Var b@1 Word 64 Var mem Mem  2 c@2 Word 32 mem Mem
1 Basic 2 1 b@1 Word 64 Var a@0 Word 64 
EntryPoint 1

Function COGENT.obj_id_data_mk 3 a@0.0 Word 32 a@0.1 Word 32 mem Mem 2 ret Word 64 mem Mem
11 Basic Ret 1 ret Word 64 Op BWOr Word 64 2 Var l@9 Word 64 Var m@10 Word 64  
10 Call 11 COGENT.u32_to_u64 2 Var a_fld1@2 Word 32 Var mem Mem  2 m@10 Word 64 mem Mem
9 Basic 10 1 l@9 Word 64 Op BWOr Word 64 2 Var f@3 Word 64 Var k@8 Word 64  
8 Basic 9 1 k@8 Word 64 Op ShiftLeft Word 64 2 Var h@5 Word 64 Var j@7 Word 64  
7 Basic 8 1 j@7 Word 64 Op WordCast Word 64 1 Var i@6 Word 8  
6 Basic 7 1 i@6 Word 8 Num 29 Word 8 
5 Call 6 COGENT.u8_to_u64 2 Var g@4 Word 8 Var mem Mem  2 h@5 Word 64 mem Mem
4 Basic 5 1 g@4 Word 8 Num 1 Word 8 
3 Call 4 COGENT.obj_id_inode_mk 2 Var a_fld0@1 Word 32 Var mem Mem  2 f@3 Word 64 mem Mem
2 Basic 3 1 a_fld1@2 Word 32 Var a@2.1 Word 32 
1 Basic 2 1 a_fld0@1 Word 32 Var a@1.0 Word 32 
EntryPoint 1

Function COGENT.obj_id_end_mk 2 a@0 Word 32 mem Mem 2 ret Word 64 mem Mem
5 Basic Ret 1 ret Word 64 Op BWOr Word 64 2 Var c@2 Word 64 Var e@4 Word 64  
4 Call 5 COGENT.u32_to_u64 2 Var d@3 Word 32 Var mem Mem  2 e@4 Word 64 mem Mem
3 Basic 4 1 d@3 Word 32 Num 4294967295 Word 32 
2 Call 3 COGENT.obj_id_inode_mk 2 Var b@1 Word 32 Var mem Mem  2 c@2 Word 64 mem Mem
1 Basic 2 1 b@1 Word 32 Var a@0 Word 32 
EntryPoint 1

Function COGENT.obj_id_pad_mk 2 a@0 Word 32 mem Mem 2 ret Word 64 mem Mem
6 Basic Ret 1 ret Word 64 Op ShiftLeft Word 64 2 Var d@3 Word 64 Var f@5 Word 64  
5 Basic 6 1 f@5 Word 64 Op WordCast Word 64 1 Var e@4 Word 8  
4 Basic 5 1 e@4 Word 8 Num 29 Word 8 
3 Call 4 COGENT.u8_to_u64 2 Var c@2 Word 8 Var mem Mem  2 d@3 Word 64 mem Mem
2 Basic 3 1 c@2 Word 8 Num 5 Word 8 
1 Basic 2 1 b@1 Word 32 Var a@0 Word 32 
EntryPoint 1

Function COGENT.obj_id_type 2 a@0 Word 64 mem Mem 2 ret Word 64 mem Mem
10 Basic Ret 1 ret Word 64 Op ShiftRight Word 64 2 Var h@7 Word 64 Var j@9 Word 64  
9 Basic 10 1 j@9 Word 64 Op WordCast Word 64 1 Var i@8 Word 8  
8 Basic 9 1 i@8 Word 8 Num 29 Word 8 
7 Basic 8 1 h@7 Word 64 Op BWAnd Word 64 2 Var b@1 Word 64 Var g@6 Word 64  
6 Basic 7 1 g@6 Word 64 Op ShiftLeft Word 64 2 Var d@3 Word 64 Var f@5 Word 64  
5 Basic 6 1 f@5 Word 64 Op WordCast Word 64 1 Var e@4 Word 8  
4 Basic 5 1 e@4 Word 8 Num 29 Word 8 
3 Basic 4 1 d@3 Word 64 Op WordCast Word 64 1 Var c@2 Word 8  
2 Basic 3 1 c@2 Word 8 Num 7 Word 8 
1 Basic 2 1 b@1 Word 64 Var a@0 Word 64 
EntryPoint 1

Function COGENT.obj_id_is_data 2 a@0 Word 64 mem Mem 2 ret Bool mem Mem
5 Basic Ret 1 ret Bool Op Equals Bool 2 Var c@2 Word 64 Var e@4 Word 64  
4 Call 5 COGENT.u8_to_u64 2 Var d@3 Word 8 Var mem Mem  2 e@4 Word 64 mem Mem
3 Basic 4 1 d@3 Word 8 Num 1 Word 8 
2 Call 3 COGENT.obj_id_type 2 Var b@1 Word 64 Var mem Mem  2 c@2 Word 64 mem Mem
1 Basic 2 1 b@1 Word 64 Var a@0 Word 64 
EntryPoint 1

Function COGENT.obj_id_is_dentarr 2 a@0 Word 64 mem Mem 2 ret Bool mem Mem
5 Basic Ret 1 ret Bool Op Equals Bool 2 Var c@2 Word 64 Var e@4 Word 64  
4 Call 5 COGENT.u8_to_u64 2 Var d@3 Word 8 Var mem Mem  2 e@4 Word 64 mem Mem
3 Basic 4 1 d@3 Word 8 Num 2 Word 8 
2 Call 3 COGENT.obj_id_type 2 Var b@1 Word 64 Var mem Mem  2 c@2 Word 64 mem Mem
1 Basic 2 1 b@1 Word 64 Var a@0 Word 64 
EntryPoint 1

Function COGENT.obj_id_is_inode 2 a@0 Word 64 mem Mem 2 ret Bool mem Mem
5 Basic Ret 1 ret Bool Op Equals Bool 2 Var c@2 Word 64 Var e@4 Word 64  
4 Call 5 COGENT.u8_to_u64 2 Var d@3 Word 8 Var mem Mem  2 e@4 Word 64 mem Mem
3 Basic 4 1 d@3 Word 8 Num 0 Word 8 
2 Call 3 COGENT.obj_id_type 2 Var b@1 Word 64 Var mem Mem  2 c@2 Word 64 mem Mem
1 Basic 2 1 b@1 Word 64 Var a@0 Word 64 
EntryPoint 1

Function COGENT.print_ObjDentry 2 a@0 Word 32 mem Mem 2 ret Word 32 mem Mem
9 Basic Ret 1 ret Word 32 Num 0 Word 32 
8 Basic 9 1 i@8 Word 32 Num 0 Word 32 
7 Basic 8 1 h@7 Word 32 Num 0 Word 32 
6 Basic 7 1 g@6 Word 32 Num 0 Word 32 
5 Basic 6 1 f@5 Word 32 Num 0 Word 32 
4 Basic 5 1 e@4 Word 32 Num 0 Word 32 
3 Basic 4 1 d@3 Word 32 Num 0 Word 32 
2 Basic 3 1 c@2 Word 32 Num 0 Word 32 
1 Basic 2 1 b@1 Word 32 Var a@0 Word 32 
EntryPoint 1

Function COGENT.serialise_size_Arr_ObjDentry_f 4 a@0.0 Word 32 a@0.1 Word 32 a@0.2 Word 32 mem Mem 2 ret Word 32 mem Mem
6 Basic Ret 1 ret Word 32 Op Plus Word 32 2 Var a_fld1@2 Word 32 Var i@5 Word 32  
5 Call 6 COGENT.serialise_size_ObjDentry 2 Var a_fld0@1 Word 32 Var mem Mem  2 i@5 Word 32 mem Mem
4 Basic 5 1 h@4 Word 32 Var a_fld2@3 Word 32 
3 Basic 4 1 a_fld2@3 Word 32 Var a@3.2 Word 32 
2 Basic 3 1 a_fld1@2 Word 32 Var a@2.1 Word 32 
1 Basic 2 1 a_fld0@1 Word 32 Var a@1.0 Word 32 
EntryPoint 1

Function COGENT.serialise_size_ObjDel 2 a@0.0 Word 64 mem Mem 2 ret Word 32 mem Mem
3 Basic Ret 1 ret Word 32 Op WordCast Word 32 1 Var c@2 Word 8  
2 Basic 3 1 c@2 Word 8 Num 8 Word 8 
1 Basic 2 1 b@1.0 Word 64 Var a@0.0 Word 64 
EntryPoint 1

Function COGENT.serialise_size_ObjData 3 a@0.0 Word 64 a@0.1 Word 32 mem Mem 2 ret Word 32 mem Mem
6 Basic Ret 1 ret Word 32 Op Plus Word 32 2 Var d@3 Word 32 Var f@5 Word 32  
5 Call 6 COGENT.wordarray_length_0 2 Var e@4 Word 32 Var mem Mem  2 f@5 Word 32 mem Mem
4 Basic 5 1 e@4 Word 32 Var b@1.1 Word 32 
3 Basic 4 1 d@3 Word 32 Op WordCast Word 32 1 Var c@2 Word 8  
2 Basic 3 1 c@2 Word 8 Num 8 Word 8 
1 Basic 2 2 b@1.0 Word 64 Var a@0.0 Word 64 b@1.1 Word 32 Var a@0.1 Word 32 
EntryPoint 1

Function COGENT.set_node 7 a@0.0 Word 32 a@0.1 Word 64 a@0.2.0 Word 32 a@0.2.1 Word 32 a@0.2.2 Word 32 a@0.2.3 Word 64 mem Mem 2 ret Word 32 mem Mem
8 Basic Ret 1 ret Word 32 Var k@7 Word 32 
7 Call 8 COGENT.rbtnode_put_val_0 6 Var j@6.0 Word 32 Var j@6.1.0 Word 32 Var j@6.1.1 Word 32 Var j@6.1.2 Word 32 Var j@6.1.3 Word 64 Var mem Mem  2 k@7 Word 32 mem Mem
6 Basic 7 5 j@6.0 Word 32 Var i@5 Word 32 j@6.1.0 Word 32 Var a_fld2@3.0 Word 32 j@6.1.1 Word 32 Var a_fld2@3.1 Word 32 j@6.1.2 Word 32 Var a_fld2@3.2 Word 32 j@6.1.3 Word 64 Var a_fld2@3.3 Word 64 
5 Call 6 COGENT.rbtnode_put_key_1 3 Var h@4.0 Word 32 Var h@4.1 Word 64 Var mem Mem  2 i@5 Word 32 mem Mem
4 Basic 5 2 h@4.0 Word 32 Var a_fld0@1 Word 32 h@4.1 Word 64 Var a_fld1@2 Word 64 
3 Basic 4 4 a_fld2@3.0 Word 32 Var a@3.2.0 Word 32 a_fld2@3.1 Word 32 Var a@3.2.1 Word 32 a_fld2@3.2 Word 32 Var a@3.2.2 Word 32 a_fld2@3.3 Word 64 Var a@3.2.3 Word 64 
2 Basic 3 1 a_fld1@2 Word 64 Var a@2.1 Word 64 
1 Basic 2 1 a_fld0@1 Word 32 Var a@1.0 Word 32 
EntryPoint 1

Function COGENT.u64_to_TimeSpec 2 a@0 Word 64 mem Mem 3 ret.0 Word 32 ret.1 Word 32 mem Mem
7 Basic Ret 2 ret.0 Word 32 Var f@5 Word 32 ret.1 Word 32 Var g@6 Word 32 
6 Call 7 COGENT.u64_to_u32 2 Var b@1 Word 64 Var mem Mem  2 g@6 Word 32 mem Mem
5 Call 6 COGENT.u64_to_u32 2 Var e@4 Word 64 Var mem Mem  2 f@5 Word 32 mem Mem
4 Basic 5 1 e@4 Word 64 Op ShiftRight Word 64 2 Var b@1 Word 64 Var d@3 Word 64  
3 Basic 4 1 d@3 Word 64 Op WordCast Word 64 1 Var c@2 Word 8  
2 Basic 3 1 c@2 Word 8 Num 32 Word 8 
1 Basic 2 1 b@1 Word 64 Var a@0 Word 64 
EntryPoint 1

Function COGENT.is_0xff 4 a@0.0 Word 8 a@0.1 Word 32 a@0.2 Word 32 mem Mem 4 ret.0 Word 32 ret.1 Word 32 ret.2 Word 32 mem Mem
8 Cond 9 12 Var k@7 Bool
14 Basic Ret 3 ret.0 Word 32 Var m@13.0 Word 32 ret.1 Word 32 Var m@13.1 Word 32 ret.2 Word 32 Num 0 Word 32 
13 Basic 14 2 m@13.0 Word 32 Num 0 Word 32 m@13.1 Word 32 Var l@12 Word 32 
12 Basic 13 1 l@12 Word 32 Num 0 Word 32 
11 Basic Ret 3 ret.0 Word 32 Var m@10.0 Word 32 ret.1 Word 32 Num 0 Word 32 ret.2 Word 32 Var m@10.1 Word 32 
10 Basic 11 2 m@10.0 Word 32 Num 0 Word 32 m@10.1 Word 32 Var l@9 Word 32 
9 Basic 10 1 l@9 Word 32 Num 0 Word 32 
7 Basic 8 1 k@7 Bool Op Equals Bool 2 Var a_fld0@1 Word 8 Var j@6 Word 8  
6 Basic 7 1 j@6 Word 8 Num 255 Word 8 
5 Basic 6 1 i@5 Word 32 Var a_fld2@4 Word 32 
4 Basic 5 1 a_fld2@4 Word 32 Var a@4.2 Word 32 
3 Basic 4 1 f@3 Word 32 Var a_fld1@2 Word 32 
2 Basic 3 1 a_fld1@2 Word 32 Var a@2.1 Word 32 
1 Basic 2 1 a_fld0@1 Word 8 Var a@1.0 Word 8 
EntryPoint 1

Function COGENT.obj_id_hash_map 4 a@0.0 Word 8 a@0.1 Word 32 a@0.2 Word 32 mem Mem 4 ret.0 Word 32 ret.1 Word 32 ret.2 Word 32 mem Mem
17 Basic Ret 3 ret.0 Word 32 Var t@16.0 Word 32 ret.1 Word 32 Num 0 Word 32 ret.2 Word 32 Var t@16.1 Word 32 
16 Basic 17 2 t@16.0 Word 32 Num 0 Word 32 t@16.1 Word 32 Var s@15 Word 32 
15 Basic 16 1 s@15 Word 32 Op Times Word 32 2 Var p@12 Word 32 Var r@14 Word 32  
14 Basic 15 1 r@14 Word 32 Op WordCast Word 32 1 Var q@13 Word 8  
13 Basic 14 1 q@13 Word 8 Num 11 Word 8 
12 Basic 13 1 p@12 Word 32 Op ShiftRight Word 32 2 Var m@9 Word 32 Var o@11 Word 32  
11 Basic 12 1 o@11 Word 32 Op WordCast Word 32 1 Var n@10 Word 8  
10 Basic 11 1 n@10 Word 8 Num 4 Word 8 
9 Basic 10 1 m@9 Word 32 Op Plus Word 32 2 Var l@8 Word 32 Var h@4 Word 32  
8 Basic 9 1 l@8 Word 32 Op ShiftLeft Word 32 2 Var i@5 Word 32 Var k@7 Word 32  
7 Basic 8 1 k@7 Word 32 Op WordCast Word 32 1 Var j@6 Word 8  
6 Basic 7 1 j@6 Word 8 Num 4 Word 8 
5 Basic 6 1 i@5 Word 32 Op Plus Word 32 2 Var a_fld1@2 Word 32 Var h@4 Word 32  
4 Call 5 COGENT.u8_to_u32 2 Var a_fld0@1 Word 8 Var mem Mem  2 h@4 Word 32 mem Mem
3 Basic 4 1 a_fld2@3 Word 32 Var a@3.2 Word 32 
2 Basic 3 1 a_fld1@2 Word 32 Var a@2.1 Word 32 
1 Basic 2 1 a_fld0@1 Word 8 Var a@1.0 Word 8 
EntryPoint 1

Function COGENT.set_gim_node 5 a@0.0 Word 32 a@0.1 Word 64 a@0.2 Word 32 a@0.3 Word 64 mem Mem 2 ret Word 32 mem Mem
10 Basic Ret 1 ret Word 32 Var n@9 Word 32 
9 Call 10 COGENT.rbtnode_put_val_1 4 Var m@8.0 Word 32 Var m@8.1.0 Word 32 Var m@8.1.1 Word 64 Var mem Mem  2 n@9 Word 32 mem Mem
8 Basic 9 3 m@8.0 Word 32 Var k@6 Word 32 m@8.1.0 Word 32 Var l@7.0 Word 32 m@8.1.1 Word 64 Var l@7.1 Word 64 
7 Basic 8 2 l@7.0 Word 32 Var a_fld2@3 Word 32 l@7.1 Word 64 Var a_fld3@4 Word 64 
6 Call 7 COGENT.rbtnode_put_key_0 3 Var j@5.0 Word 32 Var j@5.1 Word 64 Var mem Mem  2 k@6 Word 32 mem Mem
5 Basic 6 2 j@5.0 Word 32 Var a_fld0@1 Word 32 j@5.1 Word 64 Var a_fld1@2 Word 64 
4 Basic 5 1 a_fld3@4 Word 64 Var a@4.3 Word 64 
3 Basic 4 1 a_fld2@3 Word 32 Var a@3.2 Word 32 
2 Basic 3 1 a_fld1@2 Word 64 Var a@2.1 Word 64 
1 Basic 2 1 a_fld0@1 Word 32 Var a@1.0 Word 32 
EntryPoint 1

Function COGENT.gim_modifier 8 a@0.0 Word 32 a@0.1 Word 32 a@0.2.0 Word 64 a@0.2.1.0 Word 32 a@0.2.1.1 Word 32 a@0.2.1.2 Word 32 a@0.2.1.3 Word 64 mem Mem 3 ret.0 Word 32 ret.1 Word 32 mem Mem
13 Basic Ret 2 ret.0 Word 32 Var q@11 Word 32 ret.1 Word 32 Var r@12 Word 32 
12 Basic 13 1 r@12 Word 32 Num 0 Word 32 
11 Call 12 COGENT.set_gim_node 5 Var p@10.0 Word 32 Var p@10.1 Word 64 Var p@10.2 Word 32 Var p@10.3 Word 64 Var mem Mem  2 q@11 Word 32 mem Mem
10 Basic 11 4 p@10.0 Word 32 Var a_fld0@1 Word 32 p@10.1 Word 64 Var a_fld2_fld0@5 Word 64 p@10.2 Word 32 Var n@8 Word 32 p@10.3 Word 64 Var o@9 Word 64 
9 Basic 10 1 o@9 Word 64 Var a_fld2_fld1@6.3 Word 64 
8 Basic 9 1 n@8 Word 32 Op WordCast Word 32 1 Var m@7 Word 8  
7 Basic 8 1 m@7 Word 8 Num 1 Word 8 
6 Basic 7 4 a_fld2_fld1@6.0 Word 32 Var a_fld2@6.1.0 Word 32 a_fld2_fld1@6.1 Word 32 Var a_fld2@6.1.1 Word 32 a_fld2_fld1@6.2 Word 32 Var a_fld2@6.1.2 Word 32 a_fld2_fld1@6.3 Word 64 Var a_fld2@6.1.3 Word 64 
5 Basic 6 1 a_fld2_fld0@5 Word 64 Var a_fld2@5.0 Word 64 
4 Basic 5 5 a_fld2@4.0 Word 64 Var a@4.2.0 Word 64 a_fld2@4.1.0 Word 32 Var a@4.2.1.0 Word 32 a_fld2@4.1.1 Word 32 Var a@4.2.1.1 Word 32 a_fld2@4.1.2 Word 32 Var a@4.2.1.2 Word 32 a_fld2@4.1.3 Word 64 Var a@4.2.1.3 Word 64 
3 Basic 4 1 f@3 Word 32 Var a_fld1@2 Word 32 
2 Basic 3 1 a_fld1@2 Word 32 Var a@2.1 Word 32 
1 Basic 2 1 a_fld0@1 Word 32 Var a@1.0 Word 32 
EntryPoint 1

Function COGENT.set_read_only_mode 2 a@0 Word 32 mem Mem 2 ret Word 32 mem Mem
4 Basic Ret 1 ret Word 32 Var e@3 Word 32 
3 Basic 4 2 e@3 Word 32 Var a@1 Word 32 mem Mem Op MemUpdate Mem 3 Var mem Mem Op Plus Word 32 2 Var a@1 Word 32 Num 0 Word 32  Var d@2 Bool  
2 Basic 3 1 d@2 Bool Num 1 Bool 
1 Basic 2 1 a_fld0@1 Bool Op MemAcc Bool 2 Var mem Mem Op Plus Word 32 2 Var a@1 Word 32 Num 0 Word 32   
EntryPoint 1

Function COGENT.fsm_alloc_eb_loop_body 4 a@0.0 Word 8 a@0.1 Word 32 a@0.2 Word 32 mem Mem 4 ret.0 Word 32 ret.1 Word 32 ret.2 Word 32 mem Mem
7 Cond 8 13 Var j@6 Bool
14 Basic Ret 3 ret.0 Word 32 Var k@13.0 Word 32 ret.1 Word 32 Var k@13.1 Word 32 ret.2 Word 32 Num 0 Word 32 
13 Basic 14 2 k@13.0 Word 32 Num 0 Word 32 k@13.1 Word 32 Var a_fld1@2 Word 32 
12 Basic Ret 3 ret.0 Word 32 Var n@11.0 Word 32 ret.1 Word 32 Num 0 Word 32 ret.2 Word 32 Var n@11.1 Word 32 
11 Basic 12 2 n@11.0 Word 32 Num 0 Word 32 n@11.1 Word 32 Var m@10 Word 32 
10 Basic 11 1 m@10 Word 32 Op Plus Word 32 2 Var a_fld1@2 Word 32 Var l@9 Word 32  
9 Basic 10 1 l@9 Word 32 Op WordCast Word 32 1 Var k@8 Word 8  
8 Basic 9 1 k@8 Word 8 Num 1 Word 8 
6 Basic 7 1 j@6 Bool Op Not Bool 1 Op Equals Bool 2 Var a_fld0@1 Word 8 Var i@5 Word 8   
5 Basic 6 1 i@5 Word 8 Num 0 Word 8 
4 Basic 5 1 h@4 Word 32 Num 0 Word 32 
3 Basic 4 1 a_fld2@3 Word 32 Var a@3.2 Word 32 
2 Basic 3 1 a_fld1@2 Word 32 Var a@2.1 Word 32 
1 Basic 2 1 a_fld0@1 Word 8 Var a@1.0 Word 8 
EntryPoint 1

Function COGENT.freeObjData 4 a@0.0 Word 32 a@0.1.0 Word 64 a@0.1.1 Word 32 mem Mem 2 ret Word 32 mem Mem
3 Basic Ret 1 ret Word 32 Var a_fld0@1 Word 32 
2 Basic 3 2 a_fld1@2.0 Word 64 Var a@2.1.0 Word 64 a_fld1@2.1 Word 32 Var a@2.1.1 Word 32 
1 Basic 2 1 a_fld0@1 Word 32 Var a@1.0 Word 32 
EntryPoint 1

Function COGENT.deep_freeObjSuper 3 a@0.0 Word 32 a@0.1 Word 32 mem Mem 2 ret Word 32 mem Mem
14 Basic Ret 1 ret Word 32 Var y@13 Word 32 
13 Call 14 COGENT.freeObjSuper 3 Var x@12.0 Word 32 Var x@12.1 Word 32 Var mem Mem  2 y@13 Word 32 mem Mem
12 Basic 13 2 x@12.0 Word 32 Var a_fld0@1 Word 32 x@12.1 Word 32 Var a_fld1@11 Word 32 
11 Basic 12 1 a_fld1_fld8@11 Word 64 Op MemAcc Word 64 2 Var mem Mem Op Plus Word 32 2 Var a_fld1@11 Word 32 Num 32 Word 32   
10 Basic 11 1 a_fld1_fld7@10 Word 32 Op MemAcc Word 32 2 Var mem Mem Op Plus Word 32 2 Var a_fld1@10 Word 32 Num 28 Word 32   
9 Basic 10 1 a_fld1_fld6@9 Word 32 Op MemAcc Word 32 2 Var mem Mem Op Plus Word 32 2 Var a_fld1@9 Word 32 Num 24 Word 32   
8 Basic 9 1 a_fld1_fld5@8 Word 32 Op MemAcc Word 32 2 Var mem Mem Op Plus Word 32 2 Var a_fld1@8 Word 32 Num 20 Word 32   
7 Basic 8 1 a_fld1_fld4@7 Word 32 Op MemAcc Word 32 2 Var mem Mem Op Plus Word 32 2 Var a_fld1@7 Word 32 Num 16 Word 32   
6 Basic 7 1 a_fld1_fld3@6 Word 32 Op MemAcc Word 32 2 Var mem Mem Op Plus Word 32 2 Var a_fld1@6 Word 32 Num 12 Word 32   
5 Basic 6 1 a_fld1_fld2@5 Word 32 Op MemAcc Word 32 2 Var mem Mem Op Plus Word 32 2 Var a_fld1@5 Word 32 Num 8 Word 32   
4 Basic 5 1 a_fld1_fld1@4 Word 32 Op MemAcc Word 32 2 Var mem Mem Op Plus Word 32 2 Var a_fld1@4 Word 32 Num 4 Word 32   
3 Basic 4 1 a_fld1_fld0@3 Word 32 Op MemAcc Word 32 2 Var mem Mem Op Plus Word 32 2 Var a_fld1@3 Word 32 Num 0 Word 32   
2 Basic 3 1 a_fld1@2 Word 32 Var a@2.1 Word 32 
1 Basic 2 1 a_fld0@1 Word 32 Var a@1.0 Word 32 
EntryPoint 1

Function COGENT.freeOptRbtNode_0 5 a@0.0 Word 32 a@0.1.0 Word 32 a@0.1.1 Word 32 a@0.1.2 Word 32 mem Mem 2 ret Word 32 mem Mem
11 Basic Ret 1 ret Word 32 Var i@10 Word 32 
10 Call 11 COGENT.freeRbtNode_0 3 Var h@9.0 Word 32 Var h@9.1 Word 32 Var mem Mem  2 i@10 Word 32 mem Mem
9 Basic 10 2 h@9.0 Word 32 Var a_fld0@1 Word 32 h@9.1 Word 32 Var g@8 Word 32 
8 Basic 9 1 g@8 Word 32 Var None_missed@5.1 Word 32 
5 Basic 8 2 None_missed@5.0 Word 32 Var a_fld1@2.0 Word 32 None_missed@5.1 Word 32 Var a_fld1@2.2 Word 32 
7 Basic Ret 1 ret Word 32 Var a_fld0@1 Word 32 
6 Basic 7 1 g@6 Word 32 Var None@4 Word 32 
4 Basic 6 1 None@4 Word 32 Var a_fld1@2.1 Word 32 
3 Cond 4 5 Op Equals Bool 2 Var a_fld1@2.0 Word 32 Num 0 Word 32 
2 Basic 3 3 a_fld1@2.0 Word 32 Var a@2.1.0 Word 32 a_fld1@2.1 Word 32 Var a@2.1.1 Word 32 a_fld1@2.2 Word 32 Var a@2.1.2 Word 32 
1 Basic 2 1 a_fld0@1 Word 32 Var a@1.0 Word 32 
EntryPoint 1

Function COGENT.freeOptRbtNode_1 5 a@0.0 Word 32 a@0.1.0 Word 32 a@0.1.1 Word 32 a@0.1.2 Word 32 mem Mem 2 ret Word 32 mem Mem
11 Basic Ret 1 ret Word 32 Var i@10 Word 32 
10 Call 11 COGENT.freeRbtNode_1 3 Var h@9.0 Word 32 Var h@9.1 Word 32 Var mem Mem  2 i@10 Word 32 mem Mem
9 Basic 10 2 h@9.0 Word 32 Var a_fld0@1 Word 32 h@9.1 Word 32 Var g@8 Word 32 
8 Basic 9 1 g@8 Word 32 Var None_missed@5.1 Word 32 
5 Basic 8 2 None_missed@5.0 Word 32 Var a_fld1@2.0 Word 32 None_missed@5.1 Word 32 Var a_fld1@2.2 Word 32 
7 Basic Ret 1 ret Word 32 Var a_fld0@1 Word 32 
6 Basic 7 1 g@6 Word 32 Var None@4 Word 32 
4 Basic 6 1 None@4 Word 32 Var a_fld1@2.1 Word 32 
3 Cond 4 5 Op Equals Bool 2 Var a_fld1@2.0 Word 32 Num 0 Word 32 
2 Basic 3 3 a_fld1@2.0 Word 32 Var a@2.1.0 Word 32 a_fld1@2.1 Word 32 Var a@2.1.1 Word 32 a_fld1@2.2 Word 32 Var a@2.1.2 Word 32 
1 Basic 2 1 a_fld0@1 Word 32 Var a@1.0 Word 32 
EntryPoint 1

Function COGENT.deep_freeObjData 4 a@0.0 Word 32 a@0.1.0 Word 64 a@0.1.1 Word 32 mem Mem 2 ret Word 32 mem Mem
9 Basic Ret 1 ret Word 32 Var m@8 Word 32 
8 Call 9 COGENT.freeObjData 4 Var l@7.0 Word 32 Var l@7.1.0 Word 64 Var l@7.1.1 Word 32 Var mem Mem  2 m@8 Word 32 mem Mem
7 Basic 8 3 l@7.0 Word 32 Var k@6 Word 32 l@7.1.0 Word 64 Var a_fld1@4.0 Word 64 l@7.1.1 Word 32 Var a_fld1@4.1 Word 32 
6 Call 7 COGENT.wordarray_free_0 3 Var j@5.0 Word 32 Var j@5.1 Word 32 Var mem Mem  2 k@6 Word 32 mem Mem
5 Basic 6 2 j@5.0 Word 32 Var a_fld0@1 Word 32 j@5.1 Word 32 Var a_fld1_fld1@3 Word 32 
4 Basic 5 1 a_fld1_fld0@4 Word 64 Var a_fld1@4.0 Word 64 
3 Basic 4 1 a_fld1_fld1@3 Word 32 Var a_fld1@3.1 Word 32 
2 Basic 3 2 a_fld1@2.0 Word 64 Var a@2.1.0 Word 64 a_fld1@2.1 Word 32 Var a@2.1.1 Word 32 
1 Basic 2 1 a_fld0@1 Word 32 Var a@1.0 Word 32 
EntryPoint 1

Function COGENT.deep_freeOptionObjDentry 5 a@0.0 Word 32 a@0.1.0 Word 32 a@0.1.1 Word 32 a@0.1.2 Word 32 mem Mem 2 ret Word 32 mem Mem
11 Basic Ret 1 ret Word 32 Var i@10 Word 32 
10 Call 11 COGENT.deep_freeObjDentry 3 Var h@9.0 Word 32 Var h@9.1 Word 32 Var mem Mem  2 i@10 Word 32 mem Mem
9 Basic 10 2 h@9.0 Word 32 Var a_fld0@1 Word 32 h@9.1 Word 32 Var g@8 Word 32 
8 Basic 9 1 g@8 Word 32 Var None_missed@5.1 Word 32 
5 Basic 8 2 None_missed@5.0 Word 32 Var a_fld1@2.0 Word 32 None_missed@5.1 Word 32 Var a_fld1@2.2 Word 32 
7 Basic Ret 1 ret Word 32 Var a_fld0@1 Word 32 
6 Basic 7 1 g@6 Word 32 Var None@4 Word 32 
4 Basic 6 1 None@4 Word 32 Var a_fld1@2.1 Word 32 
3 Cond 4 5 Op Equals Bool 2 Var a_fld1@2.0 Word 32 Num 0 Word 32 
2 Basic 3 3 a_fld1@2.0 Word 32 Var a@2.1.0 Word 32 a_fld1@2.1 Word 32 Var a@2.1.1 Word 32 a_fld1@2.2 Word 32 Var a@2.1.2 Word 32 
1 Basic 2 1 a_fld0@1 Word 32 Var a@1.0 Word 32 
EntryPoint 1

Function COGENT.free_opt_ObjDentry 5 a@0.0 Word 32 a@0.1.0 Word 32 a@0.1.1 Word 32 a@0.1.2 Word 32 mem Mem 2 ret Word 32 mem Mem
11 Basic Ret 1 ret Word 32 Var a_fld0@1 Word 32 
10 Basic 11 1 h@10 Word 32 Var g@9 Word 32 
9 Basic 10 1 g@9 Word 32 Var Some_missed@5.1 Word 32 
5 Basic 9 2 Some_missed@5.0 Word 32 Var a_fld1@2.0 Word 32 Some_missed@5.1 Word 32 Var a_fld1@2.1 Word 32 
8 Basic Ret 1 ret Word 32 Var h@7 Word 32 
7 Call 8 COGENT.deep_freeObjDentry 3 Var g@6.0 Word 32 Var g@6.1 Word 32 Var mem Mem  2 h@7 Word 32 mem Mem
6 Basic 7 2 g@6.0 Word 32 Var a_fld0@1 Word 32 g@6.1 Word 32 Var Some@4 Word 32 
4 Basic 6 1 Some@4 Word 32 Var a_fld1@2.2 Word 32 
3 Cond 4 5 Op Equals Bool 2 Var a_fld1@2.0 Word 32 Num 0 Word 32 
2 Basic 3 3 a_fld1@2.0 Word 32 Var a@2.1.0 Word 32 a_fld1@2.1 Word 32 Var a@2.1.1 Word 32 a_fld1@2.2 Word 32 Var a@2.1.2 Word 32 
1 Basic 2 1 a_fld0@1 Word 32 Var a@1.0 Word 32 
EntryPoint 1

Function COGENT.add_dentry_modifier 8 a@0.0.0 Word 32 a@0.0.1 Word 32 a@0.0.2 Word 32 a@0.1.0 Word 32 a@0.1.1.0 Word 32 a@0.1.1.1 Word 32 a@0.1.1.2 Word 32 mem Mem 8 ret.0.0 Word 32 ret.0.1 Word 32 ret.0.2 Word 32 ret.1.0 Word 32 ret.1.1.0 Word 32 ret.1.1.1 Word 32 ret.1.1.2 Word 32 mem Mem
23 Basic Ret 7 ret.0.0 Word 32 Var a_fld0@1.0 Word 32 ret.0.1 Word 32 Var a_fld0@1.1 Word 32 ret.0.2 Word 32 Var a_fld0@1.2 Word 32 ret.1.0 Word 32 Var p@22.0 Word 32 ret.1.1.0 Word 32 Var p@22.1.0 Word 32 ret.1.1.1 Word 32 Var p@22.1.1 Word 32 ret.1.1.2 Word 32 Var p@22.1.2 Word 32 
22 Basic 23 4 p@22.0 Word 32 Var a_fld1_fld0@3 Word 32 p@22.1.0 Word 32 Var o@21.0 Word 32 p@22.1.1 Word 32 Var o@21.1 Word 32 p@22.1.2 Word 32 Var o@21.2 Word 32 
21 Basic 22 3 o@21.0 Word 32 Var n@20.0 Word 32 o@21.1 Word 32 Var n@20.1 Word 32 o@21.2 Word 32 Num 0 Word 32 
20 Basic 21 2 n@20.0 Word 32 Num 0 Word 32 n@20.1 Word 32 Var m@19 Word 32 
19 Basic 20 1 m@19 Word 32 Num 0 Word 32 
18 Basic 19 1 l@18 Word 32 Var k@17 Word 32 
17 Basic 18 1 k@17 Word 32 Var Some_missed@7.1 Word 32 
7 Basic 17 2 Some_missed@7.0 Word 32 Var a_fld1_fld1@4.0 Word 32 Some_missed@7.1 Word 32 Var a_fld1_fld1@4.1 Word 32 
16 Basic Ret 7 ret.0.0 Word 32 Var n@11.0 Word 32 ret.0.1 Word 32 Var n@11.1 Word 32 ret.0.2 Word 32 Var n@11.2 Word 32 ret.1.0 Word 32 Var r@15.0 Word 32 ret.1.1.0 Word 32 Var r@15.1.0 Word 32 ret.1.1.1 Word 32 Var r@15.1.1 Word 32 ret.1.1.2 Word 32 Var r@15.1.2 Word 32 
15 Basic 16 4 r@15.0 Word 32 Var l@9 Word 32 r@15.1.0 Word 32 Var q@14.0 Word 32 r@15.1.1 Word 32 Var q@14.1 Word 32 r@15.1.2 Word 32 Var q@14.2 Word 32 
14 Basic 15 3 q@14.0 Word 32 Var p@13.0 Word 32 q@14.1 Word 32 Var p@13.1 Word 32 q@14.2 Word 32 Num 0 Word 32 
13 Basic 14 2 p@13.0 Word 32 Num 0 Word 32 p@13.1 Word 32 Var o@12 Word 32 
12 Basic 13 1 o@12 Word 32 Num 0 Word 32 
11 Basic 12 3 n@11.0 Word 32 Var m@10.0 Word 32 n@11.1 Word 32 Num 0 Word 32 n@11.2 Word 32 Var m@10.1 Word 32 
10 Basic 11 2 m@10.0 Word 32 Num 0 Word 32 m@10.1 Word 32 Var Some@6 Word 32 
9 Call 10 COGENT.free_opt_ObjDentry 5 Var k@8.0 Word 32 Var k@8.1.0 Word 32 Var k@8.1.1 Word 32 Var k@8.1.2 Word 32 Var mem Mem  2 l@9 Word 32 mem Mem
8 Basic 9 4 k@8.0 Word 32 Var a_fld1_fld0@3 Word 32 k@8.1.0 Word 32 Var a_fld0@1.0 Word 32 k@8.1.1 Word 32 Var a_fld0@1.1 Word 32 k@8.1.2 Word 32 Var a_fld0@1.2 Word 32 
6 Basic 8 1 Some@6 Word 32 Var a_fld1_fld1@4.2 Word 32 
5 Cond 6 7 Op Equals Bool 2 Var a_fld1_fld1@4.0 Word 32 Num 0 Word 32 
4 Basic 5 3 a_fld1_fld1@4.0 Word 32 Var a_fld1@4.1.0 Word 32 a_fld1_fld1@4.1 Word 32 Var a_fld1@4.1.1 Word 32 a_fld1_fld1@4.2 Word 32 Var a_fld1@4.1.2 Word 32 
3 Basic 4 1 a_fld1_fld0@3 Word 32 Var a_fld1@3.0 Word 32 
2 Basic 3 4 a_fld1@2.0 Word 32 Var a@2.1.0 Word 32 a_fld1@2.1.0 Word 32 Var a@2.1.1.0 Word 32 a_fld1@2.1.1 Word 32 Var a@2.1.1.1 Word 32 a_fld1@2.1.2 Word 32 Var a@2.1.1.2 Word 32 
1 Basic 2 3 a_fld0@1.0 Word 32 Var a@1.0.0 Word 32 a_fld0@1.1 Word 32 Var a@1.0.1 Word 32 a_fld0@1.2 Word 32 Var a@1.0.2 Word 32 
EntryPoint 1

Function COGENT.fsm_clean 3 a@0.0 Word 32 a@0.1 Word 32 mem Mem 2 ret Word 32 mem Mem
15 Basic Ret 1 ret Word 32 Var u@14 Word 32 
14 Call 15 COGENT.freeFsmState 3 Var t@13.0 Word 32 Var t@13.1 Word 32 Var mem Mem  2 u@14 Word 32 mem Mem
13 Basic 14 2 t@13.0 Word 32 Var s@12 Word 32 t@13.1 Word 32 Var a_fld1@6 Word 32 
12 Call 13 COGENT.rbt_free_1 3 Var r@11.0 Word 32 Var r@11.1 Word 32 Var mem Mem  2 s@12 Word 32 mem Mem
11 Basic 12 2 r@11.0 Word 32 Var q@10 Word 32 r@11.1 Word 32 Var a_fld1_fld3@3 Word 32 
10 Call 11 COGENT.wordarray_free_1 3 Var p@9.0 Word 32 Var p@9.1 Word 32 Var mem Mem  2 q@10 Word 32 mem Mem
9 Basic 10 2 p@9.0 Word 32 Var o@8 Word 32 p@9.1 Word 32 Var a_fld1_fld2@4 Word 32 
8 Call 9 COGENT.wordarray_free_0 3 Var n@7.0 Word 32 Var n@7.1 Word 32 Var mem Mem  2 o@8 Word 32 mem Mem
7 Basic 8 2 n@7.0 Word 32 Var a_fld0@1 Word 32 n@7.1 Word 32 Var a_fld1_fld1@5 Word 32 
6 Basic 7 1 a_fld1_fld0@6 Word 32 Op MemAcc Word 32 2 Var mem Mem Op Plus Word 32 2 Var a_fld1@6 Word 32 Num 0 Word 32   
5 Basic 6 1 a_fld1_fld1@5 Word 32 Op MemAcc Word 32 2 Var mem Mem Op Plus Word 32 2 Var a_fld1@5 Word 32 Num 4 Word 32   
4 Basic 5 1 a_fld1_fld2@4 Word 32 Op MemAcc Word 32 2 Var mem Mem Op Plus Word 32 2 Var a_fld1@4 Word 32 Num 8 Word 32   
3 Basic 4 1 a_fld1_fld3@3 Word 32 Op MemAcc Word 32 2 Var mem Mem Op Plus Word 32 2 Var a_fld1@3 Word 32 Num 12 Word 32   
2 Basic 3 1 a_fld1@2 Word 32 Var a@2.1 Word 32 
1 Basic 2 1 a_fld0@1 Word 32 Var a@1.0 Word 32 
EntryPoint 1

Function COGENT.index_get_addr 3 a@0.0.0 Word 32 a@0.1 Word 64 mem Mem 7 ret.0 Word 32 ret.1 Word 32 ret.2.0 Word 32 ret.2.1 Word 32 ret.2.2 Word 32 ret.2.3 Word 64 mem Mem
16 Basic Ret 6 ret.0 Word 32 Var k@15.0 Word 32 ret.1 Word 32 Num 0 Word 32 ret.2.0 Word 32 Var k@15.1.0 Word 32 ret.2.1 Word 32 Var k@15.1.1 Word 32 ret.2.2 Word 32 Var k@15.1.2 Word 32 ret.2.3 Word 64 Var k@15.1.3 Word 64 
15 Basic 16 5 k@15.0 Word 32 Num 0 Word 32 k@15.1.0 Word 32 Var j@14.0 Word 32 k@15.1.1 Word 32 Var j@14.1 Word 32 k@15.1.2 Word 32 Var j@14.2 Word 32 k@15.1.3 Word 64 Var j@14.3 Word 64 
14 Basic 15 4 j@14.0 Word 32 Var Error_missed@8.1.0 Word 32 j@14.1 Word 32 Var Error_missed@8.1.1 Word 32 j@14.2 Word 32 Var Error_missed@8.1.2 Word 32 j@14.3 Word 64 Var Error_missed@8.1.3 Word 64 
8 Basic 14 5 Error_missed@8.0 Word 32 Var h@5.0 Word 32 Error_missed@8.1.0 Word 32 Var h@5.2.0 Word 32 Error_missed@8.1.1 Word 32 Var h@5.2.1 Word 32 Error_missed@8.1.2 Word 32 Var h@5.2.2 Word 32 Error_missed@8.1.3 Word 64 Var h@5.2.3 Word 64 
13 Basic Ret 6 ret.0 Word 32 Var m@12.0 Word 32 ret.1 Word 32 Var m@12.1 Word 32 ret.2.0 Word 32 Num 0 Word 32 ret.2.1 Word 32 Num 0 Word 32 ret.2.2 Word 32 Num 0 Word 32 ret.2.3 Word 64 Num 0 Word 64 
12 Basic 13 2 m@12.0 Word 32 Num 0 Word 32 m@12.1 Word 32 Var l@11 Word 32 
11 Basic 12 1 l@11 Word 32 Op WordCast Word 32 1 Var k@10 Word 8  
10 Basic 11 1 k@10 Word 8 Num 2 Word 8 
9 Basic 10 1 j@9 Word 32 Var Error@7 Word 32 
7 Basic 9 1 Error@7 Word 32 Var h@5.1 Word 32 
6 Cond 7 8 Op Equals Bool 2 Var h@5.0 Word 32 Num 0 Word 32 
5 Call 6 COGENT.rbt_get_value_0 3 Var g@4.0 Word 32 Var g@4.1 Word 64 Var mem Mem  7 h@5.0 Word 32 h@5.1 Word 32 h@5.2.0 Word 32 h@5.2.1 Word 32 h@5.2.2 Word 32 h@5.2.3 Word 64 mem Mem
4 Basic 5 2 g@4.0 Word 32 Var f@3 Word 32 g@4.1 Word 64 Var a_fld1@2 Word 64 
3 Basic 4 1 f@3 Word 32 Var a_fld0@1.0 Word 32 
2 Basic 3 1 a_fld1@2 Word 64 Var a@2.1 Word 64 
1 Basic 2 1 a_fld0@1.0 Word 32 Var a@1.0.0 Word 32 
EntryPoint 1

Function COGENT.rbtFTrue_0 4 a@0.0 Word 32 a@0.1 Word 32 a@0.2 Word 32 mem Mem 2 ret Bool mem Mem
2 Basic Ret 1 ret Bool Num 1 Bool 
1 Basic 2 3 b@1.0 Word 32 Var a@0.0 Word 32 b@1.1 Word 32 Var a@0.1 Word 32 b@1.2 Word 32 Var a@0.2 Word 32 
EntryPoint 1

Function COGENT.index_del_destroyer 4 a@0.0 Word 32 a@0.1 Word 32 a@0.2 Word 32 mem Mem 2 ret Word 32 mem Mem
6 Basic Ret 1 ret Word 32 Var i@5 Word 32 
5 Call 6 COGENT.freeRbtNode_0 3 Var h@4.0 Word 32 Var h@4.1 Word 32 Var mem Mem  2 i@5 Word 32 mem Mem
4 Basic 5 2 h@4.0 Word 32 Var a_fld1@2 Word 32 h@4.1 Word 32 Var a_fld0@1 Word 32 
3 Basic 4 1 a_fld2@3 Word 32 Var a@3.2 Word 32 
2 Basic 3 1 a_fld1@2 Word 32 Var a@2.1 Word 32 
1 Basic 2 1 a_fld0@1 Word 32 Var a@1.0 Word 32 
EntryPoint 1

Function COGENT.obj_id_dentarr_mk 3 a@0.0 Word 32 a@0.1 Word 32 mem Mem 2 ret Word 64 mem Mem
15 Basic Ret 1 ret Word 64 Op BWOr Word 64 2 Var q@14 Word 64 Var k@8 Word 64  
14 Basic 15 1 q@14 Word 64 Op BWOr Word 64 2 Var i@6 Word 64 Var p@13 Word 64  
13 Basic 14 1 p@13 Word 64 Op ShiftLeft Word 64 2 Var m@10 Word 64 Var o@12 Word 64  
12 Basic 13 1 o@12 Word 64 Op WordCast Word 64 1 Var n@11 Word 8  
11 Basic 12 1 n@11 Word 8 Num 29 Word 8 
10 Call 11 COGENT.u8_to_u64 2 Var l@9 Word 8 Var mem Mem  2 m@10 Word 64 mem Mem
9 Basic 10 1 l@9 Word 8 Num 2 Word 8 
8 Call 9 COGENT.u32_to_u64 2 Var j@7 Word 32 Var mem Mem  2 k@8 Word 64 mem Mem
7 Call 8 COGENT.obj_id_hash_name 2 Var a_fld1@2 Word 32 Var mem Mem  2 j@7 Word 32 mem Mem
6 Basic 7 1 i@6 Word 64 Op ShiftLeft Word 64 2 Var f@3 Word 64 Var h@5 Word 64  
5 Basic 6 1 h@5 Word 64 Op WordCast Word 64 1 Var g@4 Word 8  
4 Basic 5 1 g@4 Word 8 Num 32 Word 8 
3 Call 4 COGENT.u32_to_u64 2 Var a_fld0@1 Word 32 Var mem Mem  2 f@3 Word 64 mem Mem
2 Basic 3 1 a_fld1@2 Word 32 Var a@2.1 Word 32 
1 Basic 2 1 a_fld0@1 Word 32 Var a@1.0 Word 32 
EntryPoint 1

Function COGENT.copy_n_0 4 a@0.0 Word 8 a@0.1 Word 32 a@0.2 Word 32 mem Mem 3 ret.0 Word 8 ret.1 Word 32 mem Mem
9 Basic Ret 2 ret.0 Word 8 Var i@5 Word 8 ret.1 Word 32 Var l@8 Word 32 
8 Basic 9 1 l@8 Word 32 Op Plus Word 32 2 Var a_fld1@2 Word 32 Var k@7 Word 32  
7 Basic 8 1 k@7 Word 32 Op WordCast Word 32 1 Var j@6 Word 8  
6 Basic 7 1 j@6 Word 8 Num 1 Word 8 
5 Call 6 COGENT.wordarray_get_0 3 Var h@4.0 Word 32 Var h@4.1 Word 32 Var mem Mem  2 i@5 Word 8 mem Mem
4 Basic 5 2 h@4.0 Word 32 Var a_fld2@3 Word 32 h@4.1 Word 32 Var a_fld1@2 Word 32 
3 Basic 4 1 a_fld2@3 Word 32 Var a@3.2 Word 32 
2 Basic 3 1 a_fld1@2 Word 32 Var a@2.1 Word 32 
1 Basic 2 1 a_fld0@1 Word 8 Var a@1.0 Word 8 
EntryPoint 1

Function COGENT.check_flash_empty_loop 5 a@0.0.0 Word 32 a@0.0.1 Word 32 a@0.1 Word 32 a@0.2 Word 32 mem Mem 6 ret.0.0 Word 32 ret.0.1 Word 32 ret.1.0 Word 32 ret.1.1 Word 32 ret.1.2 Word 32 mem Mem
21 Cond 22 28 Var x@20 Bool
32 Basic Ret 5 ret.0.0 Word 32 Var y@28.0 Word 32 ret.0.1 Word 32 Var y@28.1 Word 32 ret.1.0 Word 32 Var v2@31.0 Word 32 ret.1.1 Word 32 Var v2@31.1 Word 32 ret.1.2 Word 32 Var v2@31.2 Word 32 
31 Basic 32 3 v2@31.0 Word 32 Var v1@30.0 Word 32 v2@31.1 Word 32 Num 0 Word 32 v2@31.2 Word 32 Var v1@30.1 Word 32 
30 Basic 31 2 v1@30.0 Word 32 Num 0 Word 32 v1@30.1 Word 32 Var z@29 Word 32 
29 Basic 30 1 z@29 Word 32 Num 0 Word 32 
28 Basic 29 2 y@28.0 Word 32 Var n_fld0_fld0@11 Word 32 y@28.1 Word 32 Var n_fld0_fld1@12 Word 32 
27 Basic Ret 5 ret.0.0 Word 32 Var y@22.0 Word 32 ret.0.1 Word 32 Var y@22.1 Word 32 ret.1.0 Word 32 Var v3@26.0 Word 32 ret.1.1 Word 32 Var v3@26.1 Word 32 ret.1.2 Word 32 Var v3@26.2 Word 32 
26 Basic 27 3 v3@26.0 Word 32 Var v2@25.0 Word 32 v3@26.1 Word 32 Var v2@25.1 Word 32 v3@26.2 Word 32 Num 0 Word 32 
25 Basic 26 2 v2@25.0 Word 32 Num 0 Word 32 v2@25.1 Word 32 Var v1@24 Word 32 
24 Basic 25 1 v1@24 Word 32 Op WordCast Word 32 1 Var z@23 Word 8  
23 Basic 24 1 z@23 Word 8 Num 39 Word 8 
22 Basic 23 2 y@22.0 Word 32 Var n_fld0_fld0@11 Word 32 y@22.1 Word 32 Var n_fld0_fld1@12 Word 32 
20 Basic 21 1 x@20 Bool Var Error_missed@15.1 Bool 
15 Basic 20 2 Error_missed@15.0 Word 32 Var n_fld1@10.0 Word 32 Error_missed@15.1 Bool Var n_fld1@10.2 Bool 
19 Basic Ret 5 ret.0.0 Word 32 Var x@16.0 Word 32 ret.0.1 Word 32 Var x@16.1 Word 32 ret.1.0 Word 32 Var z@18.0 Word 32 ret.1.1 Word 32 Var z@18.1 Word 32 ret.1.2 Word 32 Var z@18.2 Word 32 
18 Basic 19 3 z@18.0 Word 32 Var y@17.0 Word 32 z@18.1 Word 32 Var y@17.1 Word 32 z@18.2 Word 32 Num 0 Word 32 
17 Basic 18 2 y@17.0 Word 32 Num 0 Word 32 y@17.1 Word 32 Var Error@14 Word 32 
16 Basic 17 2 x@16.0 Word 32 Var n_fld0_fld0@11 Word 32 x@16.1 Word 32 Var n_fld0_fld1@12 Word 32 
14 Basic 16 1 Error@14 Word 32 Var n_fld1@10.1 Word 32 
13 Cond 14 15 Op Equals Bool 2 Var n_fld1@10.0 Word 32 Num 0 Word 32 
12 Basic 13 1 n_fld0_fld1@12 Word 32 Var n_fld0@12.1 Word 32 
11 Basic 12 1 n_fld0_fld0@11 Word 32 Var n_fld0@11.0 Word 32 
10 Basic 11 3 n_fld1@10.0 Word 32 Var n@10.1.0 Word 32 n_fld1@10.1 Word 32 Var n@10.1.1 Word 32 n_fld1@10.2 Bool Var n@10.1.2 Bool 
9 Basic 10 2 n_fld0@9.0 Word 32 Var n@9.0.0 Word 32 n_fld0@9.1 Word 32 Var n@9.0.1 Word 32 
8 Call 9 COGENT.wubi_is_mapped 4 Var m@7.0 Word 32 Var m@7.1 Word 32 Var m@7.2 Word 32 Var mem Mem  6 n@8.0.0 Word 32 n@8.0.1 Word 32 n@8.1.0 Word 32 n@8.1.1 Word 32 n@8.1.2 Bool mem Mem
7 Basic 8 3 m@7.0 Word 32 Var a_fld0_fld0@2 Word 32 m@7.1 Word 32 Var a_fld0_fld1@3 Word 32 m@7.2 Word 32 Var a_fld2@6 Word 32 
6 Basic 7 1 a_fld2@6 Word 32 Var a@6.2 Word 32 
5 Basic 6 1 j@5 Word 32 Var a_fld1@4 Word 32 
4 Basic 5 1 a_fld1@4 Word 32 Var a@4.1 Word 32 
3 Basic 4 1 a_fld0_fld1@3 Word 32 Var a_fld0@3.1 Word 32 
2 Basic 3 1 a_fld0_fld0@2 Word 32 Var a_fld0@2.0 Word 32 
1 Basic 2 2 a_fld0@1.0 Word 32 Var a@1.0.0 Word 32 a_fld0@1.1 Word 32 Var a@1.0.1 Word 32 
EntryPoint 1

Function COGENT.buf_length 2 a@0 Word 32 mem Mem 2 ret Word 32 mem Mem
4 Basic Ret 1 ret Word 32 Var d@3 Word 32 
3 Call 4 COGENT.wordarray_length_0 2 Var c@2 Word 32 Var mem Mem  2 d@3 Word 32 mem Mem
2 Basic 3 1 c@2 Word 32 Op MemAcc Word 32 2 Var mem Mem Op Plus Word 32 2 Var b@1 Word 32 Num 0 Word 32   
1 Basic 2 1 b@1 Word 32 Var a@0 Word 32 
EntryPoint 1

Function COGENT.buf_free 3 a@0.0 Word 32 a@0.1 Word 32 mem Mem 2 ret Word 32 mem Mem
9 Basic Ret 1 ret Word 32 Var m@8 Word 32 
8 Call 9 COGENT.freeBuffer 3 Var l@7.0 Word 32 Var l@7.1 Word 32 Var mem Mem  2 m@8 Word 32 mem Mem
7 Basic 8 2 l@7.0 Word 32 Var k@6 Word 32 l@7.1 Word 32 Var a_fld1@4 Word 32 
6 Call 7 COGENT.wordarray_free_0 3 Var j@5.0 Word 32 Var j@5.1 Word 32 Var mem Mem  2 k@6 Word 32 mem Mem
5 Basic 6 2 j@5.0 Word 32 Var a_fld0@1 Word 32 j@5.1 Word 32 Var a_fld1_fld0@3 Word 32 
4 Basic 5 1 a_fld1_fld1@4 Word 32 Op MemAcc Word 32 2 Var mem Mem Op Plus Word 32 2 Var a_fld1@4 Word 32 Num 4 Word 32   
3 Basic 4 1 a_fld1_fld0@3 Word 32 Op MemAcc Word 32 2 Var mem Mem Op Plus Word 32 2 Var a_fld1@3 Word 32 Num 0 Word 32   
2 Basic 3 1 a_fld1@2 Word 32 Var a@2.1 Word 32 
1 Basic 2 1 a_fld0@1 Word 32 Var a@1.0 Word 32 
EntryPoint 1

Function COGENT.buf_create 3 a@0.0 Word 32 a@0.1 Word 32 mem Mem 5 ret.0 Word 32 ret.1 Word 32 ret.2.0 Word 32 ret.2.1 Word 32 mem Mem
28 Basic Ret 4 ret.0 Word 32 Var s@27.0 Word 32 ret.1 Word 32 Var s@27.1 Word 32 ret.2.0 Word 32 Num 0 Word 32 ret.2.1 Word 32 Num 0 Word 32 
27 Basic 28 2 s@27.0 Word 32 Num 0 Word 32 s@27.1 Word 32 Var r@26 Word 32 
26 Call 27 COGENT.wordarray_free_0 3 Var q@25.0 Word 32 Var q@25.1 Word 32 Var mem Mem  2 r@26 Word 32 mem Mem
25 Basic 26 2 q@25.0 Word 32 Var p@24 Word 32 q@25.1 Word 32 Var i_fld1@12 Word 32 
24 Basic 25 1 p@24 Word 32 Var Success_missed@16.1 Word 32 
16 Basic 24 2 Success_missed@16.0 Word 32 Var n@13.0 Word 32 Success_missed@16.1 Word 32 Var n@13.1 Word 32 
23 Basic Ret 4 ret.0 Word 32 Var w@22.0 Word 32 ret.1 Word 32 Num 0 Word 32 ret.2.0 Word 32 Var w@22.1.0 Word 32 ret.2.1 Word 32 Var w@22.1.1 Word 32 
22 Basic 23 3 w@22.0 Word 32 Num 0 Word 32 w@22.1.0 Word 32 Var v@21.0 Word 32 w@22.1.1 Word 32 Var v@21.1 Word 32 
21 Basic 22 2 v@21.0 Word 32 Var Success_fld0@17 Word 32 v@21.1 Word 32 Var u@20 Word 32 
20 Basic 21 2 u@20 Word 32 Var t@19 Word 32 mem Mem Op MemUpdate Mem 3 Var mem Mem Op Plus Word 32 2 Var t@19 Word 32 Num 4 Word 32  Var a_fld1@2 Word 32  
19 Basic 20 2 t@19 Word 32 Var Success_fld1@18 Word 32 mem Mem Op MemUpdate Mem 3 Var mem Mem Op Plus Word 32 2 Var Success_fld1@18 Word 32 Num 0 Word 32  Var i_fld1@12 Word 32  
18 Basic 19 1 Success_fld1@18 Word 32 Var Success@18.1 Word 32 
17 Basic 18 1 Success_fld0@17 Word 32 Var Success@17.0 Word 32 
15 Basic 17 2 Success@15.0 Word 32 Var n@13.2.0 Word 32 Success@15.1 Word 32 Var n@13.2.1 Word 32 
14 Cond 15 16 Op Equals Bool 2 Var n@13.0 Word 32 Num 0 Word 32 
13 Call 14 COGENT.newBuffer 2 Var i_fld0@11 Word 32 Var mem Mem  5 n@13.0 Word 32 n@13.1 Word 32 n@13.2.0 Word 32 n@13.2.1 Word 32 mem Mem
12 Basic 13 1 i_fld1@12 Word 32 Var i@12.1 Word 32 
11 Basic 12 1 i_fld0@11 Word 32 Var i@11.0 Word 32 
10 Basic 11 2 i@10.0 Word 32 Var Error_missed@7.1.0 Word 32 i@10.1 Word 32 Var Error_missed@7.1.1 Word 32 
7 Basic 10 3 Error_missed@7.0 Word 32 Var g@4.0 Word 32 Error_missed@7.1.0 Word 32 Var g@4.2.0 Word 32 Error_missed@7.1.1 Word 32 Var g@4.2.1 Word 32 
9 Basic Ret 4 ret.0 Word 32 Var i@8.0 Word 32 ret.1 Word 32 Var i@8.1 Word 32 ret.2.0 Word 32 Num 0 Word 32 ret.2.1 Word 32 Num 0 Word 32 
8 Basic 9 2 i@8.0 Word 32 Num 0 Word 32 i@8.1 Word 32 Var Error@6 Word 32 
6 Basic 8 1 Error@6 Word 32 Var g@4.1 Word 32 
5 Cond 6 7 Op Equals Bool 2 Var g@4.0 Word 32 Num 0 Word 32 
4 Call 5 COGENT.wordarray_create_0 3 Var f@3.0 Word 32 Var f@3.1 Word 32 Var mem Mem  5 g@4.0 Word 32 g@4.1 Word 32 g@4.2.0 Word 32 g@4.2.1 Word 32 mem Mem
3 Basic 4 2 f@3.0 Word 32 Var a_fld0@1 Word 32 f@3.1 Word 32 Var a_fld1@2 Word 32 
2 Basic 3 1 a_fld1@2 Word 32 Var a@2.1 Word 32 
1 Basic 2 1 a_fld0@1 Word 32 Var a@1.0 Word 32 
EntryPoint 1

Function COGENT.loop_body_wbuf_read_leb 7 a@0.0.0 Word 32 a@0.0.1 Word 32 a@0.0.2 Word 32 a@0.1.0 Word 32 a@0.1.1 Word 32 a@0.2 Word 32 mem Mem 7 ret.0.0 Word 32 ret.0.1 Word 32 ret.0.2 Word 32 ret.1.0 Word 32 ret.1.1 Word 32 ret.1.2 Word 32 mem Mem
30 Basic Ret 6 ret.0.0 Word 32 Var v7@27.0 Word 32 ret.0.1 Word 32 Var v7@27.1 Word 32 ret.0.2 Word 32 Var v7@27.2 Word 32 ret.1.0 Word 32 Var v9@29.0 Word 32 ret.1.1 Word 32 Var v9@29.1 Word 32 ret.1.2 Word 32 Var v9@29.2 Word 32 
29 Basic 30 3 v9@29.0 Word 32 Var v8@28.0 Word 32 v9@29.1 Word 32 Var v8@28.1 Word 32 v9@29.2 Word 32 Num 0 Word 32 
28 Basic 29 2 v8@28.0 Word 32 Num 0 Word 32 v8@28.1 Word 32 Var v6@26 Word 32 
27 Basic 28 3 v7@27.0 Word 32 Var t_fld0_fld0@14 Word 32 v7@27.1 Word 32 Var t_fld0_fld1@15 Word 32 v7@27.2 Word 32 Var t_fld0_fld2@16 Word 32 
26 Basic 27 1 v6@26 Word 32 Var Success_missed@19.1 Word 32 
19 Basic 26 2 Success_missed@19.0 Word 32 Var t_fld1@13.0 Word 32 Success_missed@19.1 Word 32 Var t_fld1@13.1 Word 32 
25 Basic Ret 6 ret.0.0 Word 32 Var v7@21.0 Word 32 ret.0.1 Word 32 Var v7@21.1 Word 32 ret.0.2 Word 32 Var v7@21.2 Word 32 ret.1.0 Word 32 Var v10@24.0 Word 32 ret.1.1 Word 32 Var v10@24.1 Word 32 ret.1.2 Word 32 Var v10@24.2 Word 32 
24 Basic 25 3 v10@24.0 Word 32 Var v9@23.0 Word 32 v10@24.1 Word 32 Num 0 Word 32 v10@24.2 Word 32 Var v9@23.1 Word 32 
23 Basic 24 2 v9@23.0 Word 32 Num 0 Word 32 v9@23.1 Word 32 Var v8@22 Word 32 
22 Basic 23 1 v8@22 Word 32 Num 0 Word 32 
21 Basic 22 3 v7@21.0 Word 32 Var t_fld0_fld0@14 Word 32 v7@21.1 Word 32 Var t_fld0_fld1@15 Word 32 v7@21.2 Word 32 Var t_fld0_fld2@16 Word 32 
20 Basic 21 1 v6@20 Word 32 Var Success@18 Word 32 
18 Basic 20 1 Success@18 Word 32 Var t_fld1@13.2 Word 32 
17 Cond 18 19 Op Equals Bool 2 Var t_fld1@13.0 Word 32 Num 0 Word 32 
16 Basic 17 1 t_fld0_fld2@16 Word 32 Var t_fld0@16.2 Word 32 
15 Basic 16 1 t_fld0_fld1@15 Word 32 Var t_fld0@15.1 Word 32 
14 Basic 15 1 t_fld0_fld0@14 Word 32 Var t_fld0@14.0 Word 32 
13 Basic 14 3 t_fld1@13.0 Word 32 Var t@13.1.0 Word 32 t_fld1@13.1 Word 32 Var t@13.1.1 Word 32 t_fld1@13.2 Word 32 Var t@13.1.2 Word 32 
12 Basic 13 3 t_fld0@12.0 Word 32 Var t@12.0.0 Word 32 t_fld0@12.1 Word 32 Var t@12.0.1 Word 32 t_fld0@12.2 Word 32 Var t@12.0.2 Word 32 
11 Call 12 COGENT.wubi_leb_read 8 Var s@10.0 Word 32 Var s@10.1 Word 32 Var s@10.2 Word 32 Var s@10.3 Word 32 Var s@10.4 Word 32 Var s@10.5 Word 32 Var s@10.6 Word 32 Var mem Mem  7 t@11.0.0 Word 32 t@11.0.1 Word 32 t@11.0.2 Word 32 t@11.1.0 Word 32 t@11.1.1 Word 32 t@11.1.2 Word 32 mem Mem
10 Basic 11 7 s@10.0 Word 32 Var a_fld0_fld0@2 Word 32 s@10.1 Word 32 Var a_fld0_fld1@3 Word 32 s@10.2 Word 32 Var a_fld1_fld0@6 Word 32 s@10.3 Word 32 Var a_fld0_fld2@4 Word 32 s@10.4 Word 32 Var r@9 Word 32 s@10.5 Word 32 Var r@9 Word 32 s@10.6 Word 32 Var a_fld1_fld1@7 Word 32 
9 Basic 10 1 r@9 Word 32 Op Times Word 32 2 Var a_fld2@8 Word 32 Var a_fld1_fld1@7 Word 32  
8 Basic 9 1 a_fld2@8 Word 32 Var a@8.2 Word 32 
7 Basic 8 1 a_fld1_fld1@7 Word 32 Var a_fld1@7.1 Word 32 
6 Basic 7 1 a_fld1_fld0@6 Word 32 Var a_fld1@6.0 Word 32 
5 Basic 6 2 a_fld1@5.0 Word 32 Var a@5.1.0 Word 32 a_fld1@5.1 Word 32 Var a@5.1.1 Word 32 
4 Basic 5 1 a_fld0_fld2@4 Word 32 Var a_fld0@4.2 Word 32 
3 Basic 4 1 a_fld0_fld1@3 Word 32 Var a_fld0@3.1 Word 32 
2 Basic 3 1 a_fld0_fld0@2 Word 32 Var a_fld0@2.0 Word 32 
1 Basic 2 3 a_fld0@1.0 Word 32 Var a@1.0.0 Word 32 a_fld0@1.1 Word 32 Var a@1.0.1 Word 32 a_fld0@1.2 Word 32 Var a@1.0.2 Word 32 
EntryPoint 1

Function COGENT.loop_body_wbuf_write_buf 8 a@0.0.0 Word 32 a@0.0.1 Word 32 a@0.1.0 Word 32 a@0.1.1.0 Word 32 a@0.1.1.1 Word 32 a@0.1.2 Word 32 a@0.2 Word 32 mem Mem 6 ret.0.0 Word 32 ret.0.1 Word 32 ret.1.0 Word 32 ret.1.1 Word 32 ret.1.2 Word 32 mem Mem
32 Basic Ret 5 ret.0.0 Word 32 Var v8@29.0 Word 32 ret.0.1 Word 32 Var v8@29.1 Word 32 ret.1.0 Word 32 Var v10@31.0 Word 32 ret.1.1 Word 32 Var v10@31.1 Word 32 ret.1.2 Word 32 Var v10@31.2 Word 32 
31 Basic 32 3 v10@31.0 Word 32 Var v9@30.0 Word 32 v10@31.1 Word 32 Var v9@30.1 Word 32 v10@31.2 Word 32 Num 0 Word 32 
30 Basic 31 2 v9@30.0 Word 32 Num 0 Word 32 v9@30.1 Word 32 Var v7@28 Word 32 
29 Basic 30 2 v8@29.0 Word 32 Var w_fld0_fld0@17 Word 32 v8@29.1 Word 32 Var w_fld0_fld1@18 Word 32 
28 Basic 29 1 v7@28 Word 32 Var Success_missed@21.1 Word 32 
21 Basic 28 2 Success_missed@21.0 Word 32 Var w_fld1@16.0 Word 32 Success_missed@21.1 Word 32 Var w_fld1@16.1 Word 32 
27 Basic Ret 5 ret.0.0 Word 32 Var v8@23.0 Word 32 ret.0.1 Word 32 Var v8@23.1 Word 32 ret.1.0 Word 32 Var v11@26.0 Word 32 ret.1.1 Word 32 Var v11@26.1 Word 32 ret.1.2 Word 32 Var v11@26.2 Word 32 
26 Basic 27 3 v11@26.0 Word 32 Var v10@25.0 Word 32 v11@26.1 Word 32 Num 0 Word 32 v11@26.2 Word 32 Var v10@25.1 Word 32 
25 Basic 26 2 v10@25.0 Word 32 Num 0 Word 32 v10@25.1 Word 32 Var v9@24 Word 32 
24 Basic 25 1 v9@24 Word 32 Num 0 Word 32 
23 Basic 24 2 v8@23.0 Word 32 Var w_fld0_fld0@17 Word 32 v8@23.1 Word 32 Var w_fld0_fld1@18 Word 32 
22 Basic 23 1 v7@22 Word 32 Var Success@20 Word 32 
20 Basic 22 1 Success@20 Word 32 Var w_fld1@16.2 Word 32 
19 Cond 20 21 Op Equals Bool 2 Var w_fld1@16.0 Word 32 Num 0 Word 32 
18 Basic 19 1 w_fld0_fld1@18 Word 32 Var w_fld0@18.1 Word 32 
17 Basic 18 1 w_fld0_fld0@17 Word 32 Var w_fld0@17.0 Word 32 
16 Basic 17 3 w_fld1@16.0 Word 32 Var w@16.1.0 Word 32 w_fld1@16.1 Word 32 Var w@16.1.1 Word 32 w_fld1@16.2 Word 32 Var w@16.1.2 Word 32 
15 Basic 16 2 w_fld0@15.0 Word 32 Var w@15.0.0 Word 32 w_fld0@15.1 Word 32 Var w@15.0.1 Word 32 
14 Call 15 COGENT.wubi_leb_write 8 Var v@13.0 Word 32 Var v@13.1 Word 32 Var v@13.2 Word 32 Var v@13.3 Word 32 Var v@13.4 Word 32 Var v@13.5 Word 32 Var v@13.6 Word 32 Var mem Mem  6 w@14.0.0 Word 32 w@14.0.1 Word 32 w@14.1.0 Word 32 w@14.1.1 Word 32 w@14.1.2 Word 32 mem Mem
13 Basic 14 7 v@13.0 Word 32 Var a_fld0_fld0@2 Word 32 v@13.1 Word 32 Var a_fld0_fld1@3 Word 32 v@13.2 Word 32 Var u@12 Word 32 v@13.3 Word 32 Var a_fld1_fld0@5 Word 32 v@13.4 Word 32 Var t@11 Word 32 v@13.5 Word 32 Var t@11 Word 32 v@13.6 Word 32 Var a_fld1_fld2@7 Word 32 
12 Basic 13 1 u@12 Word 32 Var a_fld1_fld1@6.0 Word 32 
11 Basic 12 1 t@11 Word 32 Op Plus Word 32 2 Var r@9 Word 32 Var s@10 Word 32  
10 Basic 11 1 s@10 Word 32 Op Times Word 32 2 Var a_fld2@8 Word 32 Var a_fld1_fld2@7 Word 32  
9 Basic 10 1 r@9 Word 32 Var a_fld1_fld1@6.1 Word 32 
8 Basic 9 1 a_fld2@8 Word 32 Var a@8.2 Word 32 
7 Basic 8 1 a_fld1_fld2@7 Word 32 Var a_fld1@7.2 Word 32 
6 Basic 7 2 a_fld1_fld1@6.0 Word 32 Var a_fld1@6.1.0 Word 32 a_fld1_fld1@6.1 Word 32 Var a_fld1@6.1.1 Word 32 
5 Basic 6 1 a_fld1_fld0@5 Word 32 Var a_fld1@5.0 Word 32 
4 Basic 5 4 a_fld1@4.0 Word 32 Var a@4.1.0 Word 32 a_fld1@4.1.0 Word 32 Var a@4.1.1.0 Word 32 a_fld1@4.1.1 Word 32 Var a@4.1.1.1 Word 32 a_fld1@4.2 Word 32 Var a@4.1.2 Word 32 
3 Basic 4 1 a_fld0_fld1@3 Word 32 Var a_fld0@3.1 Word 32 
2 Basic 3 1 a_fld0_fld0@2 Word 32 Var a_fld0@2.0 Word 32 
1 Basic 2 2 a_fld0@1.0 Word 32 Var a@1.0.0 Word 32 a_fld0@1.1 Word 32 Var a@1.0.1 Word 32 
EntryPoint 1

Function COGENT.buf_bound 2 a@0 Word 32 mem Mem 2 ret Word 32 mem Mem
2 Basic Ret 1 ret Word 32 Op MemAcc Word 32 2 Var mem Mem Op Plus Word 32 2 Var b@1 Word 32 Num 4 Word 32   
1 Basic 2 1 b@1 Word 32 Var a@0 Word 32 
EntryPoint 1

Function COGENT.buf_set_bound 3 a@0.0 Word 32 a@0.1 Word 32 mem Mem 4 ret.0 Word 32 ret.1 Word 32 ret.2 Word 32 mem Mem
8 Cond 9 11 Var g@7 Bool
14 Basic Ret 3 ret.0 Word 32 Var k@13.0 Word 32 ret.1 Word 32 Num 0 Word 32 ret.2 Word 32 Var k@13.1 Word 32 
13 Basic 14 2 k@13.0 Word 32 Num 0 Word 32 k@13.1 Word 32 Var j@12 Word 32 
12 Basic 13 2 j@12 Word 32 Var a_fld0@11 Word 32 mem Mem Op MemUpdate Mem 3 Var mem Mem Op Plus Word 32 2 Var a_fld0@11 Word 32 Num 4 Word 32  Var a_fld1@2 Word 32  
11 Basic 12 1 a_fld0_fld1@11 Word 32 Op MemAcc Word 32 2 Var mem Mem Op Plus Word 32 2 Var a_fld0@11 Word 32 Num 4 Word 32   
10 Basic Ret 3 ret.0 Word 32 Var h@9.0 Word 32 ret.1 Word 32 Var h@9.1 Word 32 ret.2 Word 32 Num 0 Word 32 
9 Basic 10 2 h@9.0 Word 32 Num 0 Word 32 h@9.1 Word 32 Var a_fld0@1 Word 32 
7 Basic 8 1 g@7 Bool Op Not Bool 1 Op SignedLessEquals Bool 2 Var a_fld1@2 Word 32 Var f@4 Word 32   
4 Basic 7 1 f@4 Word 32 Var ret Word 32 
6 Basic 4 1 ret Word 32 Var f@5 Word 32 
5 Call 6 COGENT.buf_length 2 Var a_fld0@1 Word 32 Var mem Mem  2 f@5 Word 32 mem Mem
3 Basic 5 0 
2 Basic 3 1 a_fld1@2 Word 32 Var a@2.1 Word 32 
1 Basic 2 1 a_fld0@1 Word 32 Var a@1.0 Word 32 
EntryPoint 1

Function COGENT.deserialise_ObjPad 5 a@0.0 Word 32 a@0.1 Word 32 a@0.2 Word 32 a@0.3 Word 32 mem Mem 7 ret.0 Word 32 ret.1.0 Word 32 ret.1.1 Word 32 ret.2.0 Word 32 ret.2.1 Word 32 ret.2.2 Word 32 mem Mem
9 Cond 10 15 Var m@8 Bool
19 Basic Ret 6 ret.0 Word 32 Var q@18.0 Word 32 ret.1.0 Word 32 Num 0 Word 32 ret.1.1 Word 32 Num 0 Word 32 ret.2.0 Word 32 Var q@18.1.0 Word 32 ret.2.1 Word 32 Var q@18.1.1 Word 32 ret.2.2 Word 32 Var q@18.1.2 Word 32 
18 Basic 19 4 q@18.0 Word 32 Num 0 Word 32 q@18.1.0 Word 32 Var p@17.0 Word 32 q@18.1.1 Word 32 Var p@17.1 Word 32 q@18.1.2 Word 32 Var p@17.2 Word 32 
17 Basic 18 3 p@17.0 Word 32 Var a_fld0@1 Word 32 p@17.1 Word 32 Var n@15 Word 32 p@17.2 Word 32 Var o@16 Word 32 
16 Basic 17 1 o@16 Word 32 Op Plus Word 32 2 Var a_fld2@3 Word 32 Var l@7 Word 32  
15 Basic 16 1 n@15 Word 32 Num 0 Word 32 
14 Basic Ret 6 ret.0 Word 32 Var q@13.0 Word 32 ret.1.0 Word 32 Var q@13.1.0 Word 32 ret.1.1 Word 32 Var q@13.1.1 Word 32 ret.2.0 Word 32 Num 0 Word 32 ret.2.1 Word 32 Num 0 Word 32 ret.2.2 Word 32 Num 0 Word 32 
13 Basic 14 3 q@13.0 Word 32 Num 0 Word 32 q@13.1.0 Word 32 Var p@12.0 Word 32 q@13.1.1 Word 32 Var p@12.1 Word 32 
12 Basic 13 2 p@12.0 Word 32 Var o@11 Word 32 p@12.1 Word 32 Var a_fld0@1 Word 32 
11 Basic 12 1 o@11 Word 32 Op WordCast Word 32 1 Var n@10 Word 8  
10 Basic 11 1 n@10 Word 8 Num 22 Word 8 
8 Basic 9 1 m@8 Bool Op Not Bool 1 Op SignedLessEquals Bool 2 Var l@7 Word 32 Var a_fld3@4 Word 32   
7 Basic 8 1 l@7 Word 32 Op Minus Word 32 2 Var a_fld3@4 Word 32 Var k@6 Word 32  
6 Basic 7 1 k@6 Word 32 Op WordCast Word 32 1 Var j@5 Word 8  
5 Basic 6 1 j@5 Word 8 Num 24 Word 8 
4 Basic 5 1 a_fld3@4 Word 32 Var a@4.3 Word 32 
3 Basic 4 1 a_fld2@3 Word 32 Var a@3.2 Word 32 
2 Basic 3 1 a_fld1@2 Word 32 Var a@2.1 Word 32 
1 Basic 2 1 a_fld0@1 Word 32 Var a@1.0 Word 32 
EntryPoint 1

Function COGENT.deserialise_le16 3 a@0.0 Word 32 a@0.1 Word 32 mem Mem 2 ret Word 16 mem Mem
17 Basic Ret 1 ret Word 16 Op BWOr Word 16 2 Var r@15 Word 16 Var s@16 Word 16  
16 Call 17 COGENT.u8_to_u16 2 Var h@5 Word 8 Var mem Mem  2 s@16 Word 16 mem Mem
15 Basic 16 1 r@15 Word 16 Op ShiftLeft Word 16 2 Var o@12 Word 16 Var q@14 Word 16  
14 Basic 15 1 q@14 Word 16 Op WordCast Word 16 1 Var p@13 Word 8  
13 Basic 14 1 p@13 Word 8 Num 8 Word 8 
12 Call 13 COGENT.u8_to_u16 2 Var n@11 Word 8 Var mem Mem  2 o@12 Word 16 mem Mem
11 Call 12 COGENT.wordarray_get_0 3 Var m@10.0 Word 32 Var m@10.1 Word 32 Var mem Mem  2 n@11 Word 8 mem Mem
10 Basic 11 2 m@10.0 Word 32 Var i@6 Word 32 m@10.1 Word 32 Var l@9 Word 32 
9 Basic 10 1 l@9 Word 32 Op Plus Word 32 2 Var a_fld1@2 Word 32 Var k@8 Word 32  
8 Basic 9 1 k@8 Word 32 Op WordCast Word 32 1 Var j@7 Word 8  
7 Basic 8 1 j@7 Word 8 Num 1 Word 8 
6 Basic 7 1 i@6 Word 32 Op MemAcc Word 32 2 Var mem Mem Op Plus Word 32 2 Var a_fld0@1 Word 32 Num 0 Word 32   
5 Call 6 COGENT.wordarray_get_0 3 Var g@4.0 Word 32 Var g@4.1 Word 32 Var mem Mem  2 h@5 Word 8 mem Mem
4 Basic 5 2 g@4.0 Word 32 Var f@3 Word 32 g@4.1 Word 32 Var a_fld1@2 Word 32 
3 Basic 4 1 f@3 Word 32 Op MemAcc Word 32 2 Var mem Mem Op Plus Word 32 2 Var a_fld0@1 Word 32 Num 0 Word 32   
2 Basic 3 1 a_fld1@2 Word 32 Var a@2.1 Word 32 
1 Basic 2 1 a_fld0@1 Word 32 Var a@1.0 Word 32 
EntryPoint 1

Function COGENT.deserialise_le32 3 a@0.0 Word 32 a@0.1 Word 32 mem Mem 2 ret Word 32 mem Mem
39 Basic Ret 1 ret Word 32 Op BWOr Word 32 2 Var v14@37 Word 32 Var v15@38 Word 32  
38 Call 39 COGENT.u8_to_u32 2 Var h@5 Word 8 Var mem Mem  2 v15@38 Word 32 mem Mem
37 Basic 38 1 v14@37 Word 32 Op BWOr Word 32 2 Var v9@32 Word 32 Var v13@36 Word 32  
36 Basic 37 1 v13@36 Word 32 Op ShiftLeft Word 32 2 Var v10@33 Word 32 Var v12@35 Word 32  
35 Basic 36 1 v12@35 Word 32 Op WordCast Word 32 1 Var v11@34 Word 8  
34 Basic 35 1 v11@34 Word 8 Num 8 Word 8 
33 Call 34 COGENT.u8_to_u32 2 Var n@11 Word 8 Var mem Mem  2 v10@33 Word 32 mem Mem
32 Basic 33 1 v9@32 Word 32 Op BWOr Word 32 2 Var v4@27 Word 32 Var v8@31 Word 32  
31 Basic 32 1 v8@31 Word 32 Op ShiftLeft Word 32 2 Var v5@28 Word 32 Var v7@30 Word 32  
30 Basic 31 1 v7@30 Word 32 Op WordCast Word 32 1 Var v6@29 Word 8  
29 Basic 30 1 v6@29 Word 8 Num 16 Word 8 
28 Call 29 COGENT.u8_to_u32 2 Var t@17 Word 8 Var mem Mem  2 v5@28 Word 32 mem Mem
27 Basic 28 1 v4@27 Word 32 Op ShiftLeft Word 32 2 Var v1@24 Word 32 Var v3@26 Word 32  
26 Basic 27 1 v3@26 Word 32 Op WordCast Word 32 1 Var v2@25 Word 8  
25 Basic 26 1 v2@25 Word 8 Num 24 Word 8 
24 Call 25 COGENT.u8_to_u32 2 Var z@23 Word 8 Var mem Mem  2 v1@24 Word 32 mem Mem
23 Call 24 COGENT.wordarray_get_0 3 Var y@22.0 Word 32 Var y@22.1 Word 32 Var mem Mem  2 z@23 Word 8 mem Mem
22 Basic 23 2 y@22.0 Word 32 Var u@18 Word 32 y@22.1 Word 32 Var x@21 Word 32 
21 Basic 22 1 x@21 Word 32 Op Plus Word 32 2 Var a_fld1@2 Word 32 Var w@20 Word 32  
20 Basic 21 1 w@20 Word 32 Op WordCast Word 32 1 Var v@19 Word 8  
19 Basic 20 1 v@19 Word 8 Num 3 Word 8 
18 Basic 19 1 u@18 Word 32 Op MemAcc Word 32 2 Var mem Mem Op Plus Word 32 2 Var a_fld0@1 Word 32 Num 0 Word 32   
17 Call 18 COGENT.wordarray_get_0 3 Var s@16.0 Word 32 Var s@16.1 Word 32 Var mem Mem  2 t@17 Word 8 mem Mem
16 Basic 17 2 s@16.0 Word 32 Var o@12 Word 32 s@16.1 Word 32 Var r@15 Word 32 
15 Basic 16 1 r@15 Word 32 Op Plus Word 32 2 Var a_fld1@2 Word 32 Var q@14 Word 32  
14 Basic 15 1 q@14 Word 32 Op WordCast Word 32 1 Var p@13 Word 8  
13 Basic 14 1 p@13 Word 8 Num 2 Word 8 
12 Basic 13 1 o@12 Word 32 Op MemAcc Word 32 2 Var mem Mem Op Plus Word 32 2 Var a_fld0@1 Word 32 Num 0 Word 32   
11 Call 12 COGENT.wordarray_get_0 3 Var m@10.0 Word 32 Var m@10.1 Word 32 Var mem Mem  2 n@11 Word 8 mem Mem
10 Basic 11 2 m@10.0 Word 32 Var i@6 Word 32 m@10.1 Word 32 Var l@9 Word 32 
9 Basic 10 1 l@9 Word 32 Op Plus Word 32 2 Var a_fld1@2 Word 32 Var k@8 Word 32  
8 Basic 9 1 k@8 Word 32 Op WordCast Word 32 1 Var j@7 Word 8  
7 Basic 8 1 j@7 Word 8 Num 1 Word 8 
6 Basic 7 1 i@6 Word 32 Op MemAcc Word 32 2 Var mem Mem Op Plus Word 32 2 Var a_fld0@1 Word 32 Num 0 Word 32   
5 Call 6 COGENT.wordarray_get_0 3 Var g@4.0 Word 32 Var g@4.1 Word 32 Var mem Mem  2 h@5 Word 8 mem Mem
4 Basic 5 2 g@4.0 Word 32 Var f@3 Word 32 g@4.1 Word 32 Var a_fld1@2 Word 32 
3 Basic 4 1 f@3 Word 32 Op MemAcc Word 32 2 Var mem Mem Op Plus Word 32 2 Var a_fld0@1 Word 32 Num 0 Word 32   
2 Basic 3 1 a_fld1@2 Word 32 Var a@2.1 Word 32 
1 Basic 2 1 a_fld0@1 Word 32 Var a@1.0 Word 32 
EntryPoint 1

Function COGENT.deserialise_le64 3 a@0.0 Word 32 a@0.1 Word 32 mem Mem 2 ret Word 64 mem Mem
83 Basic Ret 1 ret Word 64 Op BWOr Word 64 2 Var v58@81 Word 64 Var v59@82 Word 64  
82 Call 83 COGENT.u8_to_u64 2 Var h@5 Word 8 Var mem Mem  2 v59@82 Word 64 mem Mem
81 Basic 82 1 v58@81 Word 64 Op BWOr Word 64 2 Var v53@76 Word 64 Var v57@80 Word 64  
80 Basic 81 1 v57@80 Word 64 Op ShiftLeft Word 64 2 Var v54@77 Word 64 Var v56@79 Word 64  
79 Basic 80 1 v56@79 Word 64 Op WordCast Word 64 1 Var v55@78 Word 8  
78 Basic 79 1 v55@78 Word 8 Num 8 Word 8 
77 Call 78 COGENT.u8_to_u64 2 Var n@11 Word 8 Var mem Mem  2 v54@77 Word 64 mem Mem
76 Basic 77 1 v53@76 Word 64 Op BWOr Word 64 2 Var v48@71 Word 64 Var v52@75 Word 64  
75 Basic 76 1 v52@75 Word 64 Op ShiftLeft Word 64 2 Var v49@72 Word 64 Var v51@74 Word 64  
74 Basic 75 1 v51@74 Word 64 Op WordCast Word 64 1 Var v50@73 Word 8  
73 Basic 74 1 v50@73 Word 8 Num 16 Word 8 
72 Call 73 COGENT.u8_to_u64 2 Var t@17 Word 8 Var mem Mem  2 v49@72 Word 64 mem Mem
71 Basic 72 1 v48@71 Word 64 Op BWOr Word 64 2 Var v43@66 Word 64 Var v47@70 Word 64  
70 Basic 71 1 v47@70 Word 64 Op ShiftLeft Word 64 2 Var v44@67 Word 64 Var v46@69 Word 64  
69 Basic 70 1 v46@69 Word 64 Op WordCast Word 64 1 Var v45@68 Word 8  
68 Basic 69 1 v45@68 Word 8 Num 24 Word 8 
67 Call 68 COGENT.u8_to_u64 2 Var z@23 Word 8 Var mem Mem  2 v44@67 Word 64 mem Mem
66 Basic 67 1 v43@66 Word 64 Op BWOr Word 64 2 Var v38@61 Word 64 Var v42@65 Word 64  
65 Basic 66 1 v42@65 Word 64 Op ShiftLeft Word 64 2 Var v39@62 Word 64 Var v41@64 Word 64  
64 Basic 65 1 v41@64 Word 64 Op WordCast Word 64 1 Var v40@63 Word 8  
63 Basic 64 1 v40@63 Word 8 Num 32 Word 8 
62 Call 63 COGENT.u8_to_u64 2 Var v6@29 Word 8 Var mem Mem  2 v39@62 Word 64 mem Mem
61 Basic 62 1 v38@61 Word 64 Op BWOr Word 64 2 Var v33@56 Word 64 Var v37@60 Word 64  
60 Basic 61 1 v37@60 Word 64 Op ShiftLeft Word 64 2 Var v34@57 Word 64 Var v36@59 Word 64  
59 Basic 60 1 v36@59 Word 64 Op WordCast Word 64 1 Var v35@58 Word 8  
58 Basic 59 1 v35@58 Word 8 Num 40 Word 8 
57 Call 58 COGENT.u8_to_u64 2 Var v12@35 Word 8 Var mem Mem  2 v34@57 Word 64 mem Mem
56 Basic 57 1 v33@56 Word 64 Op BWOr Word 64 2 Var v28@51 Word 64 Var v32@55 Word 64  
55 Basic 56 1 v32@55 Word 64 Op ShiftLeft Word 64 2 Var v29@52 Word 64 Var v31@54 Word 64  
54 Basic 55 1 v31@54 Word 64 Op WordCast Word 64 1 Var v30@53 Word 8  
53 Basic 54 1 v30@53 Word 8 Num 48 Word 8 
52 Call 53 COGENT.u8_to_u64 2 Var v18@41 Word 8 Var mem Mem  2 v29@52 Word 64 mem Mem
51 Basic 52 1 v28@51 Word 64 Op ShiftLeft Word 64 2 Var v25@48 Word 64 Var v27@50 Word 64  
50 Basic 51 1 v27@50 Word 64 Op WordCast Word 64 1 Var v26@49 Word 8  
49 Basic 50 1 v26@49 Word 8 Num 56 Word 8 
48 Call 49 COGENT.u8_to_u64 2 Var v24@47 Word 8 Var mem Mem  2 v25@48 Word 64 mem Mem
47 Call 48 COGENT.wordarray_get_0 3 Var v23@46.0 Word 32 Var v23@46.1 Word 32 Var mem Mem  2 v24@47 Word 8 mem Mem
46 Basic 47 2 v23@46.0 Word 32 Var v19@42 Word 32 v23@46.1 Word 32 Var v22@45 Word 32 
45 Basic 46 1 v22@45 Word 32 Op Plus Word 32 2 Var a_fld1@2 Word 32 Var v21@44 Word 32  
44 Basic 45 1 v21@44 Word 32 Op WordCast Word 32 1 Var v20@43 Word 8  
43 Basic 44 1 v20@43 Word 8 Num 7 Word 8 
42 Basic 43 1 v19@42 Word 32 Op MemAcc Word 32 2 Var mem Mem Op Plus Word 32 2 Var a_fld0@1 Word 32 Num 0 Word 32   
41 Call 42 COGENT.wordarray_get_0 3 Var v17@40.0 Word 32 Var v17@40.1 Word 32 Var mem Mem  2 v18@41 Word 8 mem Mem
40 Basic 41 2 v17@40.0 Word 32 Var v13@36 Word 32 v17@40.1 Word 32 Var v16@39 Word 32 
39 Basic 40 1 v16@39 Word 32 Op Plus Word 32 2 Var a_fld1@2 Word 32 Var v15@38 Word 32  
38 Basic 39 1 v15@38 Word 32 Op WordCast Word 32 1 Var v14@37 Word 8  
37 Basic 38 1 v14@37 Word 8 Num 6 Word 8 
36 Basic 37 1 v13@36 Word 32 Op MemAcc Word 32 2 Var mem Mem Op Plus Word 32 2 Var a_fld0@1 Word 32 Num 0 Word 32   
35 Call 36 COGENT.wordarray_get_0 3 Var v11@34.0 Word 32 Var v11@34.1 Word 32 Var mem Mem  2 v12@35 Word 8 mem Mem
34 Basic 35 2 v11@34.0 Word 32 Var v7@30 Word 32 v11@34.1 Word 32 Var v10@33 Word 32 
33 Basic 34 1 v10@33 Word 32 Op Plus Word 32 2 Var a_fld1@2 Word 32 Var v9@32 Word 32  
32 Basic 33 1 v9@32 Word 32 Op WordCast Word 32 1 Var v8@31 Word 8  
31 Basic 32 1 v8@31 Word 8 Num 5 Word 8 
30 Basic 31 1 v7@30 Word 32 Op MemAcc Word 32 2 Var mem Mem Op Plus Word 32 2 Var a_fld0@1 Word 32 Num 0 Word 32   
29 Call 30 COGENT.wordarray_get_0 3 Var v5@28.0 Word 32 Var v5@28.1 Word 32 Var mem Mem  2 v6@29 Word 8 mem Mem
28 Basic 29 2 v5@28.0 Word 32 Var v1@24 Word 32 v5@28.1 Word 32 Var v4@27 Word 32 
27 Basic 28 1 v4@27 Word 32 Op Plus Word 32 2 Var a_fld1@2 Word 32 Var v3@26 Word 32  
26 Basic 27 1 v3@26 Word 32 Op WordCast Word 32 1 Var v2@25 Word 8  
25 Basic 26 1 v2@25 Word 8 Num 4 Word 8 
24 Basic 25 1 v1@24 Word 32 Op MemAcc Word 32 2 Var mem Mem Op Plus Word 32 2 Var a_fld0@1 Word 32 Num 0 Word 32   
23 Call 24 COGENT.wordarray_get_0 3 Var y@22.0 Word 32 Var y@22.1 Word 32 Var mem Mem  2 z@23 Word 8 mem Mem
22 Basic 23 2 y@22.0 Word 32 Var u@18 Word 32 y@22.1 Word 32 Var x@21 Word 32 
21 Basic 22 1 x@21 Word 32 Op Plus Word 32 2 Var a_fld1@2 Word 32 Var w@20 Word 32  
20 Basic 21 1 w@20 Word 32 Op WordCast Word 32 1 Var v@19 Word 8  
19 Basic 20 1 v@19 Word 8 Num 3 Word 8 
18 Basic 19 1 u@18 Word 32 Op MemAcc Word 32 2 Var mem Mem Op Plus Word 32 2 Var a_fld0@1 Word 32 Num 0 Word 32   
17 Call 18 COGENT.wordarray_get_0 3 Var s@16.0 Word 32 Var s@16.1 Word 32 Var mem Mem  2 t@17 Word 8 mem Mem
16 Basic 17 2 s@16.0 Word 32 Var o@12 Word 32 s@16.1 Word 32 Var r@15 Word 32 
15 Basic 16 1 r@15 Word 32 Op Plus Word 32 2 Var a_fld1@2 Word 32 Var q@14 Word 32  
14 Basic 15 1 q@14 Word 32 Op WordCast Word 32 1 Var p@13 Word 8  
13 Basic 14 1 p@13 Word 8 Num 2 Word 8 
12 Basic 13 1 o@12 Word 32 Op MemAcc Word 32 2 Var mem Mem Op Plus Word 32 2 Var a_fld0@1 Word 32 Num 0 Word 32   
11 Call 12 COGENT.wordarray_get_0 3 Var m@10.0 Word 32 Var m@10.1 Word 32 Var mem Mem  2 n@11 Word 8 mem Mem
10 Basic 11 2 m@10.0 Word 32 Var i@6 Word 32 m@10.1 Word 32 Var l@9 Word 32 
9 Basic 10 1 l@9 Word 32 Op Plus Word 32 2 Var a_fld1@2 Word 32 Var k@8 Word 32  
8 Basic 9 1 k@8 Word 32 Op WordCast Word 32 1 Var j@7 Word 8  
7 Basic 8 1 j@7 Word 8 Num 1 Word 8 
6 Basic 7 1 i@6 Word 32 Op MemAcc Word 32 2 Var mem Mem Op Plus Word 32 2 Var a_fld0@1 Word 32 Num 0 Word 32   
5 Call 6 COGENT.wordarray_get_0 3 Var g@4.0 Word 32 Var g@4.1 Word 32 Var mem Mem  2 h@5 Word 8 mem Mem
4 Basic 5 2 g@4.0 Word 32 Var f@3 Word 32 g@4.1 Word 32 Var a_fld1@2 Word 32 
3 Basic 4 1 f@3 Word 32 Op MemAcc Word 32 2 Var mem Mem Op Plus Word 32 2 Var a_fld0@1 Word 32 Num 0 Word 32   
2 Basic 3 1 a_fld1@2 Word 32 Var a@2.1 Word 32 
1 Basic 2 1 a_fld0@1 Word 32 Var a@1.0 Word 32 
EntryPoint 1

Function COGENT.deserialise_ObjDel 4 a@0.0 Word 32 a@0.1 Word 32 a@0.2 Word 32 mem Mem 7 ret.0 Word 32 ret.1.0 Word 32 ret.1.1 Word 32 ret.2.0 Word 32 ret.2.1.0 Word 64 ret.2.2 Word 32 mem Mem
33 Cond 34 39 Var v10@32 Bool
45 Basic Ret 6 ret.0 Word 32 Var v16@44.0 Word 32 ret.1.0 Word 32 Num 0 Word 32 ret.1.1 Word 32 Num 0 Word 32 ret.2.0 Word 32 Var v16@44.1.0 Word 32 ret.2.1.0 Word 64 Var v16@44.1.1.0 Word 64 ret.2.2 Word 32 Var v16@44.1.2 Word 32 
44 Basic 45 4 v16@44.0 Word 32 Num 0 Word 32 v16@44.1.0 Word 32 Var v15@43.0 Word 32 v16@44.1.1.0 Word 64 Var v15@43.1.0 Word 64 v16@44.1.2 Word 32 Var v15@43.2 Word 32 
43 Basic 44 3 v15@43.0 Word 32 Var a_fld0@1 Word 32 v15@43.1.0 Word 64 Var v11@39.0 Word 64 v15@43.2 Word 32 Var v14@42 Word 32 
42 Basic 43 1 v14@42 Word 32 Op Plus Word 32 2 Var a_fld2@3 Word 32 Var v13@41 Word 32  
41 Basic 42 1 v13@41 Word 32 Op WordCast Word 32 1 Var v12@40 Word 8  
40 Basic 41 1 v12@40 Word 8 Num 8 Word 8 
39 Basic 40 1 v11@39.0 Word 64 Var i@5 Word 64 
38 Basic Ret 6 ret.0 Word 32 Var v14@37.0 Word 32 ret.1.0 Word 32 Var v14@37.1.0 Word 32 ret.1.1 Word 32 Var v14@37.1.1 Word 32 ret.2.0 Word 32 Num 0 Word 32 ret.2.1.0 Word 64 Num 0 Word 64 ret.2.2 Word 32 Num 0 Word 32 
37 Basic 38 3 v14@37.0 Word 32 Num 0 Word 32 v14@37.1.0 Word 32 Var v13@36.0 Word 32 v14@37.1.1 Word 32 Var v13@36.1 Word 32 
36 Basic 37 2 v13@36.0 Word 32 Var v12@35 Word 32 v13@36.1 Word 32 Var a_fld0@1 Word 32 
35 Basic 36 1 v12@35 Word 32 Op WordCast Word 32 1 Var v11@34 Word 8  
34 Basic 35 1 v11@34 Word 8 Num 22 Word 8 
32 Basic 33 1 v10@32 Bool Op And Bool 2 Var v@18 Bool Var v9@31 Bool  
31 Basic 32 1 v9@31 Bool Op And Bool 2 Var v2@24 Bool Var v8@30 Bool  
30 Basic 31 1 v8@30 Bool Op Not Bool 1 Op Equals Bool 2 Var p@12 Word 64 Var v7@29 Word 64   
29 Basic 30 1 v7@29 Word 64 Op ShiftLeft Word 64 2 Var v4@26 Word 64 Var v6@28 Word 64  
28 Basic 29 1 v6@28 Word 64 Op WordCast Word 64 1 Var v5@27 Word 8  
27 Basic 28 1 v5@27 Word 8 Num 29 Word 8 
26 Call 27 COGENT.u8_to_u64 2 Var v3@25 Word 8 Var mem Mem  2 v4@26 Word 64 mem Mem
25 Basic 26 1 v3@25 Word 8 Num 2 Word 8 
24 Basic 25 1 v2@24 Bool Op Not Bool 1 Op Equals Bool 2 Var p@12 Word 64 Var v1@23 Word 64   
23 Basic 24 1 v1@23 Word 64 Op ShiftLeft Word 64 2 Var x@20 Word 64 Var z@22 Word 64  
22 Basic 23 1 z@22 Word 64 Op WordCast Word 64 1 Var y@21 Word 8  
21 Basic 22 1 y@21 Word 8 Num 29 Word 8 
20 Call 21 COGENT.u8_to_u64 2 Var w@19 Word 8 Var mem Mem  2 x@20 Word 64 mem Mem
19 Basic 20 1 w@19 Word 8 Num 0 Word 8 
18 Basic 19 1 v@18 Bool Op Not Bool 1 Op Equals Bool 2 Var p@12 Word 64 Var u@17 Word 64   
17 Basic 18 1 u@17 Word 64 Op ShiftLeft Word 64 2 Var r@14 Word 64 Var t@16 Word 64  
16 Basic 17 1 t@16 Word 64 Op WordCast Word 64 1 Var s@15 Word 8  
15 Basic 16 1 s@15 Word 8 Num 29 Word 8 
14 Call 15 COGENT.u8_to_u64 2 Var q@13 Word 8 Var mem Mem  2 r@14 Word 64 mem Mem
13 Basic 14 1 q@13 Word 8 Num 1 Word 8 
12 Basic 13 1 p@12 Word 64 Op BWAnd Word 64 2 Var i@5 Word 64 Var o@11 Word 64  
11 Call 12 COGENT.binNot 2 Var n@10 Word 64 Var mem Mem  2 o@11 Word 64 mem Mem
10 Basic 11 1 n@10 Word 64 Op ShiftLeft Word 64 2 Var k@7 Word 64 Var m@9 Word 64  
9 Basic 10 1 m@9 Word 64 Op WordCast Word 64 1 Var l@8 Word 8  
8 Basic 9 1 l@8 Word 8 Num 29 Word 8 
7 Basic 8 1 k@7 Word 64 Op WordCast Word 64 1 Var j@6 Word 8  
6 Basic 7 1 j@6 Word 8 Num 7 Word 8 
5 Call 6 COGENT.deserialise_le64 3 Var h@4.0 Word 32 Var h@4.1 Word 32 Var mem Mem  2 i@5 Word 64 mem Mem
4 Basic 5 2 h@4.0 Word 32 Var a_fld1@2 Word 32 h@4.1 Word 32 Var a_fld2@3 Word 32 
3 Basic 4 1 a_fld2@3 Word 32 Var a@3.2 Word 32 
2 Basic 3 1 a_fld1@2 Word 32 Var a@2.1 Word 32 
1 Basic 2 1 a_fld0@1 Word 32 Var a@1.0 Word 32 
EntryPoint 1

Function COGENT.deserialise_ObjSumEntry 3 a@0.0 Word 32 a@0.1 Word 32 mem Mem 7 ret.0.0 Word 64 ret.0.1 Word 64 ret.0.2 Word 32 ret.0.3 Word 32 ret.0.4 Word 16 ret.1 Word 32 mem Mem
29 Basic Ret 6 ret.0.0 Word 64 Var v2@25.0 Word 64 ret.0.1 Word 64 Var v2@25.1 Word 64 ret.0.2 Word 32 Var v2@25.2 Word 32 ret.0.3 Word 32 Var v2@25.3 Word 32 ret.0.4 Word 16 Var v2@25.4 Word 16 ret.1 Word 32 Var v5@28 Word 32 
28 Basic 29 1 v5@28 Word 32 Op Plus Word 32 2 Var a_fld1@2 Word 32 Var v4@27 Word 32  
27 Basic 28 1 v4@27 Word 32 Op WordCast Word 32 1 Var v3@26 Word 8  
26 Basic 27 1 v3@26 Word 8 Num 26 Word 8 
25 Basic 26 5 v2@25.0 Word 64 Var g@4 Word 64 v2@25.1 Word 64 Var l@9 Word 64 v2@25.2 Word 32 Var q@14 Word 32 v2@25.3 Word 32 Var v@19 Word 32 v2@25.4 Word 16 Var v1@24 Word 16 
24 Call 25 COGENT.deserialise_le16 3 Var z@23.0 Word 32 Var z@23.1 Word 32 Var mem Mem  2 v1@24 Word 16 mem Mem
23 Basic 24 2 z@23.0 Word 32 Var a_fld0@1 Word 32 z@23.1 Word 32 Var y@22 Word 32 
22 Basic 23 1 y@22 Word 32 Op Plus Word 32 2 Var a_fld1@2 Word 32 Var x@21 Word 32  
21 Basic 22 1 x@21 Word 32 Op WordCast Word 32 1 Var w@20 Word 8  
20 Basic 21 1 w@20 Word 8 Num 24 Word 8 
19 Call 20 COGENT.deserialise_le32 3 Var u@18.0 Word 32 Var u@18.1 Word 32 Var mem Mem  2 v@19 Word 32 mem Mem
18 Basic 19 2 u@18.0 Word 32 Var a_fld0@1 Word 32 u@18.1 Word 32 Var t@17 Word 32 
17 Basic 18 1 t@17 Word 32 Op Plus Word 32 2 Var a_fld1@2 Word 32 Var s@16 Word 32  
16 Basic 17 1 s@16 Word 32 Op WordCast Word 32 1 Var r@15 Word 8  
15 Basic 16 1 r@15 Word 8 Num 20 Word 8 
14 Call 15 COGENT.deserialise_le32 3 Var p@13.0 Word 32 Var p@13.1 Word 32 Var mem Mem  2 q@14 Word 32 mem Mem
13 Basic 14 2 p@13.0 Word 32 Var a_fld0@1 Word 32 p@13.1 Word 32 Var o@12 Word 32 
12 Basic 13 1 o@12 Word 32 Op Plus Word 32 2 Var a_fld1@2 Word 32 Var n@11 Word 32  
11 Basic 12 1 n@11 Word 32 Op WordCast Word 32 1 Var m@10 Word 8  
10 Basic 11 1 m@10 Word 8 Num 16 Word 8 
9 Call 10 COGENT.deserialise_le64 3 Var k@8.0 Word 32 Var k@8.1 Word 32 Var mem Mem  2 l@9 Word 64 mem Mem
8 Basic 9 2 k@8.0 Word 32 Var a_fld0@1 Word 32 k@8.1 Word 32 Var j@7 Word 32 
7 Basic 8 1 j@7 Word 32 Op Plus Word 32 2 Var a_fld1@2 Word 32 Var i@6 Word 32  
6 Basic 7 1 i@6 Word 32 Op WordCast Word 32 1 Var h@5 Word 8  
5 Basic 6 1 h@5 Word 8 Num 8 Word 8 
4 Call 5 COGENT.deserialise_le64 3 Var f@3.0 Word 32 Var f@3.1 Word 32 Var mem Mem  2 g@4 Word 64 mem Mem
3 Basic 4 2 f@3.0 Word 32 Var a_fld0@1 Word 32 f@3.1 Word 32 Var a_fld1@2 Word 32 
2 Basic 3 1 a_fld1@2 Word 32 Var a@2.1 Word 32 
1 Basic 2 1 a_fld0@1 Word 32 Var a@1.0 Word 32 
EntryPoint 1

Function COGENT.deserialise_ObjSumEntry_map 8 a@0.0.0 Word 64 a@0.0.1 Word 64 a@0.0.2 Word 32 a@0.0.3 Word 32 a@0.0.4 Word 16 a@0.1 Word 32 a@0.2 Word 32 mem Mem 7 ret.0.0 Word 64 ret.0.1 Word 64 ret.0.2 Word 32 ret.0.3 Word 32 ret.0.4 Word 16 ret.1 Word 32 mem Mem
8 Basic Ret 6 ret.0.0 Word 64 Var i_fld0@6.0 Word 64 ret.0.1 Word 64 Var i_fld0@6.1 Word 64 ret.0.2 Word 32 Var i_fld0@6.2 Word 32 ret.0.3 Word 32 Var i_fld0@6.3 Word 32 ret.0.4 Word 16 Var i_fld0@6.4 Word 16 ret.1 Word 32 Var i_fld1@7 Word 32 
7 Basic 8 1 i_fld1@7 Word 32 Var i@7.1 Word 32 
6 Basic 7 5 i_fld0@6.0 Word 64 Var i@6.0.0 Word 64 i_fld0@6.1 Word 64 Var i@6.0.1 Word 64 i_fld0@6.2 Word 32 Var i@6.0.2 Word 32 i_fld0@6.3 Word 32 Var i@6.0.3 Word 32 i_fld0@6.4 Word 16 Var i@6.0.4 Word 16 
5 Call 6 COGENT.deserialise_ObjSumEntry 3 Var h@4.0 Word 32 Var h@4.1 Word 32 Var mem Mem  7 i@5.0.0 Word 64 i@5.0.1 Word 64 i@5.0.2 Word 32 i@5.0.3 Word 32 i@5.0.4 Word 16 i@5.1 Word 32 mem Mem
4 Basic 5 2 h@4.0 Word 32 Var a_fld2@3 Word 32 h@4.1 Word 32 Var a_fld1@2 Word 32 
3 Basic 4 1 a_fld2@3 Word 32 Var a@3.2 Word 32 
2 Basic 3 1 a_fld1@2 Word 32 Var a@2.1 Word 32 
1 Basic 2 5 a_fld0@1.0 Word 64 Var a@1.0.0 Word 64 a_fld0@1.1 Word 64 Var a@1.0.1 Word 64 a_fld0@1.2 Word 32 Var a@1.0.2 Word 32 a_fld0@1.3 Word 32 Var a@1.0.3 Word 32 a_fld0@1.4 Word 16 Var a@1.0.4 Word 16 
EntryPoint 1

Function COGENT.deserialise_ObjSuper 4 a@0.0 Word 32 a@0.1 Word 32 a@0.2 Word 32 mem Mem 7 ret.0 Word 32 ret.1.0 Word 32 ret.1.1 Word 32 ret.2.0 Word 32 ret.2.1 Word 32 ret.2.2 Word 32 mem Mem
72 Basic Ret 6 ret.0 Word 32 Var v44@71.0 Word 32 ret.1.0 Word 32 Num 0 Word 32 ret.1.1 Word 32 Num 0 Word 32 ret.2.0 Word 32 Var v44@71.1.0 Word 32 ret.2.1 Word 32 Var v44@71.1.1 Word 32 ret.2.2 Word 32 Var v44@71.1.2 Word 32 
71 Basic 72 4 v44@71.0 Word 32 Num 0 Word 32 v44@71.1.0 Word 32 Var v43@70.0 Word 32 v44@71.1.1 Word 32 Var v43@70.1 Word 32 v44@71.1.2 Word 32 Var v43@70.2 Word 32 
70 Basic 71 3 v43@70.0 Word 32 Var j_fld0@14 Word 32 v43@70.1 Word 32 Var v39@66 Word 32 v43@70.2 Word 32 Var v42@69 Word 32 
69 Basic 70 1 v42@69 Word 32 Op Plus Word 32 2 Var a_fld2@3 Word 32 Var v41@68 Word 32  
68 Basic 69 1 v41@68 Word 32 Op WordCast Word 32 1 Var v40@67 Word 8  
67 Basic 68 1 v40@67 Word 8 Num 40 Word 8 
66 Basic 67 2 v39@66 Word 32 Var v38@65 Word 32 mem Mem Op MemUpdate Mem 3 Var mem Mem Op Plus Word 32 2 Var v38@65 Word 32 Num 32 Word 32  Var v30@57 Word 64  
65 Basic 66 2 v38@65 Word 32 Var v37@64 Word 32 mem Mem Op MemUpdate Mem 3 Var mem Mem Op Plus Word 32 2 Var v37@64 Word 32 Num 28 Word 32  Var v25@52 Word 32  
64 Basic 65 2 v37@64 Word 32 Var v36@63 Word 32 mem Mem Op MemUpdate Mem 3 Var mem Mem Op Plus Word 32 2 Var v36@63 Word 32 Num 24 Word 32  Var v20@47 Word 32  
63 Basic 64 2 v36@63 Word 32 Var v35@62 Word 32 mem Mem Op MemUpdate Mem 3 Var mem Mem Op Plus Word 32 2 Var v35@62 Word 32 Num 20 Word 32  Var v15@42 Word 32  
62 Basic 63 2 v35@62 Word 32 Var v34@61 Word 32 mem Mem Op MemUpdate Mem 3 Var mem Mem Op Plus Word 32 2 Var v34@61 Word 32 Num 16 Word 32  Var v10@37 Word 32  
61 Basic 62 2 v34@61 Word 32 Var v33@60 Word 32 mem Mem Op MemUpdate Mem 3 Var mem Mem Op Plus Word 32 2 Var v33@60 Word 32 Num 12 Word 32  Var v5@32 Word 32  
60 Basic 61 2 v33@60 Word 32 Var v32@59 Word 32 mem Mem Op MemUpdate Mem 3 Var mem Mem Op Plus Word 32 2 Var v32@59 Word 32 Num 8 Word 32  Var z@27 Word 32  
59 Basic 60 2 v32@59 Word 32 Var v31@58 Word 32 mem Mem Op MemUpdate Mem 3 Var mem Mem Op Plus Word 32 2 Var v31@58 Word 32 Num 4 Word 32  Var u@22 Word 32  
58 Basic 59 2 v31@58 Word 32 Var j_fld1@15 Word 32 mem Mem Op MemUpdate Mem 3 Var mem Mem Op Plus Word 32 2 Var j_fld1@15 Word 32 Num 0 Word 32  Var p@17 Word 32  
57 Call 58 COGENT.deserialise_le64 3 Var v29@56.0 Word 32 Var v29@56.1 Word 32 Var mem Mem  2 v30@57 Word 64 mem Mem
56 Basic 57 2 v29@56.0 Word 32 Var a_fld1@2 Word 32 v29@56.1 Word 32 Var v28@55 Word 32 
55 Basic 56 1 v28@55 Word 32 Op Plus Word 32 2 Var a_fld2@3 Word 32 Var v27@54 Word 32  
54 Basic 55 1 v27@54 Word 32 Op WordCast Word 32 1 Var v26@53 Word 8  
53 Basic 54 1 v26@53 Word 8 Num 32 Word 8 
52 Call 53 COGENT.deserialise_le32 3 Var v24@51.0 Word 32 Var v24@51.1 Word 32 Var mem Mem  2 v25@52 Word 32 mem Mem
51 Basic 52 2 v24@51.0 Word 32 Var a_fld1@2 Word 32 v24@51.1 Word 32 Var v23@50 Word 32 
50 Basic 51 1 v23@50 Word 32 Op Plus Word 32 2 Var a_fld2@3 Word 32 Var v22@49 Word 32  
49 Basic 50 1 v22@49 Word 32 Op WordCast Word 32 1 Var v21@48 Word 8  
48 Basic 49 1 v21@48 Word 8 Num 28 Word 8 
47 Call 48 COGENT.deserialise_le32 3 Var v19@46.0 Word 32 Var v19@46.1 Word 32 Var mem Mem  2 v20@47 Word 32 mem Mem
46 Basic 47 2 v19@46.0 Word 32 Var a_fld1@2 Word 32 v19@46.1 Word 32 Var v18@45 Word 32 
45 Basic 46 1 v18@45 Word 32 Op Plus Word 32 2 Var a_fld2@3 Word 32 Var v17@44 Word 32  
44 Basic 45 1 v17@44 Word 32 Op WordCast Word 32 1 Var v16@43 Word 8  
43 Basic 44 1 v16@43 Word 8 Num 24 Word 8 
42 Call 43 COGENT.deserialise_le32 3 Var v14@41.0 Word 32 Var v14@41.1 Word 32 Var mem Mem  2 v15@42 Word 32 mem Mem
41 Basic 42 2 v14@41.0 Word 32 Var a_fld1@2 Word 32 v14@41.1 Word 32 Var v13@40 Word 32 
40 Basic 41 1 v13@40 Word 32 Op Plus Word 32 2 Var a_fld2@3 Word 32 Var v12@39 Word 32  
39 Basic 40 1 v12@39 Word 32 Op WordCast Word 32 1 Var v11@38 Word 8  
38 Basic 39 1 v11@38 Word 8 Num 20 Word 8 
37 Call 38 COGENT.deserialise_le32 3 Var v9@36.0 Word 32 Var v9@36.1 Word 32 Var mem Mem  2 v10@37 Word 32 mem Mem
36 Basic 37 2 v9@36.0 Word 32 Var a_fld1@2 Word 32 v9@36.1 Word 32 Var v8@35 Word 32 
35 Basic 36 1 v8@35 Word 32 Op Plus Word 32 2 Var a_fld2@3 Word 32 Var v7@34 Word 32  
34 Basic 35 1 v7@34 Word 32 Op WordCast Word 32 1 Var v6@33 Word 8  
33 Basic 34 1 v6@33 Word 8 Num 16 Word 8 
32 Call 33 COGENT.deserialise_le32 3 Var v4@31.0 Word 32 Var v4@31.1 Word 32 Var mem Mem  2 v5@32 Word 32 mem Mem
31 Basic 32 2 v4@31.0 Word 32 Var a_fld1@2 Word 32 v4@31.1 Word 32 Var v3@30 Word 32 
30 Basic 31 1 v3@30 Word 32 Op Plus Word 32 2 Var a_fld2@3 Word 32 Var v2@29 Word 32  
29 Basic 30 1 v2@29 Word 32 Op WordCast Word 32 1 Var v1@28 Word 8  
28 Basic 29 1 v1@28 Word 8 Num 12 Word 8 
27 Call 28 COGENT.deserialise_le32 3 Var y@26.0 Word 32 Var y@26.1 Word 32 Var mem Mem  2 z@27 Word 32 mem Mem
26 Basic 27 2 y@26.0 Word 32 Var a_fld1@2 Word 32 y@26.1 Word 32 Var x@25 Word 32 
25 Basic 26 1 x@25 Word 32 Op Plus Word 32 2 Var a_fld2@3 Word 32 Var w@24 Word 32  
24 Basic 25 1 w@24 Word 32 Op WordCast Word 32 1 Var v@23 Word 8  
23 Basic 24 1 v@23 Word 8 Num 8 Word 8 
22 Call 23 COGENT.deserialise_le32 3 Var t@21.0 Word 32 Var t@21.1 Word 32 Var mem Mem  2 u@22 Word 32 mem Mem
21 Basic 22 2 t@21.0 Word 32 Var a_fld1@2 Word 32 t@21.1 Word 32 Var s@20 Word 32 
20 Basic 21 1 s@20 Word 32 Op Plus Word 32 2 Var a_fld2@3 Word 32 Var r@19 Word 32  
19 Basic 20 1 r@19 Word 32 Op WordCast Word 32 1 Var q@18 Word 8  
18 Basic 19 1 q@18 Word 8 Num 4 Word 8 
17 Call 18 COGENT.deserialise_le32 3 Var o@16.0 Word 32 Var o@16.1 Word 32 Var mem Mem  2 p@17 Word 32 mem Mem
16 Basic 17 2 o@16.0 Word 32 Var a_fld1@2 Word 32 o@16.1 Word 32 Var a_fld2@3 Word 32 
15 Basic 16 1 j_fld1@15 Word 32 Var j@15.1 Word 32 
14 Basic 15 1 j_fld0@14 Word 32 Var j@14.0 Word 32 
13 Basic 14 2 j@13.0 Word 32 Var Error_missed@7.1.0 Word 32 j@13.1 Word 32 Var Error_missed@7.1.1 Word 32 
7 Basic 13 3 Error_missed@7.0 Word 32 Var h@4.0 Word 32 Error_missed@7.1.0 Word 32 Var h@4.2.0 Word 32 Error_missed@7.1.1 Word 32 Var h@4.2.1 Word 32 
12 Basic Ret 6 ret.0 Word 32 Var m@11.0 Word 32 ret.1.0 Word 32 Var m@11.1.0 Word 32 ret.1.1 Word 32 Var m@11.1.1 Word 32 ret.2.0 Word 32 Num 0 Word 32 ret.2.1 Word 32 Num 0 Word 32 ret.2.2 Word 32 Num 0 Word 32 
11 Basic 12 3 m@11.0 Word 32 Num 0 Word 32 m@11.1.0 Word 32 Var l@10.0 Word 32 m@11.1.1 Word 32 Var l@10.1 Word 32 
10 Basic 11 2 l@10.0 Word 32 Var k@9 Word 32 l@10.1 Word 32 Var Error@6 Word 32 
9 Basic 10 1 k@9 Word 32 Op WordCast Word 32 1 Var j@8 Word 8  
8 Basic 9 1 j@8 Word 8 Num 12 Word 8 
6 Basic 8 1 Error@6 Word 32 Var h@4.1 Word 32 
5 Cond 6 7 Op Equals Bool 2 Var h@4.0 Word 32 Num 0 Word 32 
4 Call 5 COGENT.newObjSuper 2 Var a_fld0@1 Word 32 Var mem Mem  5 h@4.0 Word 32 h@4.1 Word 32 h@4.2.0 Word 32 h@4.2.1 Word 32 mem Mem
3 Basic 4 1 a_fld2@3 Word 32 Var a@3.2 Word 32 
2 Basic 3 1 a_fld1@2 Word 32 Var a@2.1 Word 32 
1 Basic 2 1 a_fld0@1 Word 32 Var a@1.0 Word 32 
EntryPoint 1

Function COGENT.deserialise_u8 3 a@0.0 Word 32 a@0.1 Word 32 mem Mem 2 ret Word 8 mem Mem
6 Basic Ret 1 ret Word 8 Var h@5 Word 8 
5 Call 6 COGENT.wordarray_get_0 3 Var g@4.0 Word 32 Var g@4.1 Word 32 Var mem Mem  2 h@5 Word 8 mem Mem
4 Basic 5 2 g@4.0 Word 32 Var f@3 Word 32 g@4.1 Word 32 Var a_fld1@2 Word 32 
3 Basic 4 1 f@3 Word 32 Op MemAcc Word 32 2 Var mem Mem Op Plus Word 32 2 Var a_fld0@1 Word 32 Num 0 Word 32   
2 Basic 3 1 a_fld1@2 Word 32 Var a@2.1 Word 32 
1 Basic 2 1 a_fld0@1 Word 32 Var a@1.0 Word 32 
EntryPoint 1

Function COGENT.deserialise_waU8_map 4 a@0.0 Word 8 a@0.1 Word 32 a@0.2 Word 32 mem Mem 3 ret.0 Word 8 ret.1 Word 32 mem Mem
10 Basic Ret 2 ret.0 Word 8 Var j@6 Word 8 ret.1 Word 32 Var m@9 Word 32 
9 Basic 10 1 m@9 Word 32 Op Plus Word 32 2 Var a_fld1@3 Word 32 Var l@8 Word 32  
8 Basic 9 1 l@8 Word 32 Op WordCast Word 32 1 Var k@7 Word 8  
7 Basic 8 1 k@7 Word 8 Num 1 Word 8 
6 Call 7 COGENT.wordarray_get_0 3 Var i@5.0 Word 32 Var i@5.1 Word 32 Var mem Mem  2 j@6 Word 8 mem Mem
5 Basic 6 2 i@5.0 Word 32 Var a_fld2@4 Word 32 i@5.1 Word 32 Var a_fld1@3 Word 32 
4 Basic 5 1 a_fld2@4 Word 32 Var a@4.2 Word 32 
3 Basic 4 1 a_fld1@3 Word 32 Var a@3.1 Word 32 
2 Basic 3 1 d@2 Word 8 Var a_fld0@1 Word 8 
1 Basic 2 1 a_fld0@1 Word 8 Var a@1.0 Word 8 
EntryPoint 1

Function COGENT.deserialise_ObjSummary 4 a@0.0 Word 32 a@0.1 Word 32 a@0.2 Word 32 mem Mem 5 ret.0 Word 32 ret.1.0 Word 32 ret.1.1 Word 32 ret.1.2 Word 32 mem Mem
30 Basic Ret 4 ret.0 Word 32 Var v1@27 Word 32 ret.1.0 Word 32 Var v3@29.0 Word 32 ret.1.1 Word 32 Var v3@29.1 Word 32 ret.1.2 Word 32 Var v3@29.2 Word 32 
29 Basic 30 3 v3@29.0 Word 32 Var v2@28.0 Word 32 v3@29.1 Word 32 Num 0 Word 32 v3@29.2 Word 32 Var v2@28.1 Word 32 
28 Basic 29 2 v2@28.0 Word 32 Num 0 Word 32 v2@28.1 Word 32 Var v@22 Word 32 
27 Basic 28 2 v1@27 Word 32 Var z@26 Word 32 mem Mem Op MemUpdate Mem 3 Var mem Mem Op Plus Word 32 2 Var z@26 Word 32 Num 8 Word 32  Var x@24 Word 32  
26 Basic 27 2 z@26 Word 32 Var y@25 Word 32 mem Mem Op MemUpdate Mem 3 Var mem Mem Op Plus Word 32 2 Var y@25 Word 32 Num 4 Word 32  Var p_fld0@12 Word 32  
25 Basic 26 2 y@25 Word 32 Var a_fld2@4 Word 32 mem Mem Op MemUpdate Mem 3 Var mem Mem Op Plus Word 32 2 Var a_fld2@4 Word 32 Num 0 Word 32  Var k@6 Word 32  
24 Call 25 COGENT.deserialise_le32 3 Var w@23.0 Word 32 Var w@23.1 Word 32 Var mem Mem  2 x@24 Word 32 mem Mem
23 Basic 24 2 w@23.0 Word 32 Var a_fld0@1 Word 32 w@23.1 Word 32 Var v@22 Word 32 
22 Basic 23 1 v@22 Word 32 Var Error_missed@16.1 Word 32 
16 Basic 22 2 Error_missed@16.0 Word 32 Var p_fld1@13.0 Word 32 Error_missed@16.1 Word 32 Var p_fld1@13.2 Word 32 
21 Basic Ret 4 ret.0 Word 32 Var w@18 Word 32 ret.1.0 Word 32 Var y@20.0 Word 32 ret.1.1 Word 32 Var y@20.1 Word 32 ret.1.2 Word 32 Var y@20.2 Word 32 
20 Basic 21 3 y@20.0 Word 32 Var x@19.0 Word 32 y@20.1 Word 32 Var x@19.1 Word 32 y@20.2 Word 32 Num 0 Word 32 
19 Basic 20 2 x@19.0 Word 32 Num 0 Word 32 x@19.1 Word 32 Var Error@15 Word 32 
18 Basic 19 2 w@18 Word 32 Var v@17 Word 32 mem Mem Op MemUpdate Mem 3 Var mem Mem Op Plus Word 32 2 Var v@17 Word 32 Num 4 Word 32  Var p_fld0@12 Word 32  
17 Basic 18 2 v@17 Word 32 Var a_fld2@4 Word 32 mem Mem Op MemUpdate Mem 3 Var mem Mem Op Plus Word 32 2 Var a_fld2@4 Word 32 Num 0 Word 32  Var k@6 Word 32  
15 Basic 17 1 Error@15 Word 32 Var p_fld1@13.1 Word 32 
14 Cond 15 16 Op Equals Bool 2 Var p_fld1@13.0 Word 32 Num 0 Word 32 
13 Basic 14 3 p_fld1@13.0 Word 32 Var p@13.1.0 Word 32 p_fld1@13.1 Word 32 Var p@13.1.1 Word 32 p_fld1@13.2 Word 32 Var p@13.1.2 Word 32 
12 Basic 13 1 p_fld0@12 Word 32 Var p@12.0 Word 32 
11 Call 12 COGENT.deserialise_wordarray_ObjSumEntry 5 Var o@10.0 Word 32 Var o@10.1 Word 32 Var o@10.2 Word 32 Var o@10.3 Word 32 Var mem Mem  5 p@11.0 Word 32 p@11.1.0 Word 32 p@11.1.1 Word 32 p@11.1.2 Word 32 mem Mem
10 Basic 11 4 o@10.0 Word 32 Var a_fld2_fld1@4 Word 32 o@10.1 Word 32 Var a_fld0@1 Word 32 o@10.2 Word 32 Var n@9 Word 32 o@10.3 Word 32 Var k@6 Word 32 
9 Basic 10 1 n@9 Word 32 Op Plus Word 32 2 Var a_fld1@2 Word 32 Var m@8 Word 32  
8 Basic 9 1 m@8 Word 32 Op WordCast Word 32 1 Var l@7 Word 8  
7 Basic 8 1 l@7 Word 8 Num 4 Word 8 
6 Call 7 COGENT.deserialise_le32 3 Var j@5.0 Word 32 Var j@5.1 Word 32 Var mem Mem  2 k@6 Word 32 mem Mem
5 Basic 6 2 j@5.0 Word 32 Var a_fld0@1 Word 32 j@5.1 Word 32 Var a_fld1@2 Word 32 
4 Basic 5 1 a_fld2_fld1@4 Word 32 Op MemAcc Word 32 2 Var mem Mem Op Plus Word 32 2 Var a_fld2@4 Word 32 Num 4 Word 32   
3 Basic 4 1 a_fld2@3 Word 32 Var a@3.2 Word 32 
2 Basic 3 1 a_fld1@2 Word 32 Var a@2.1 Word 32 
1 Basic 2 1 a_fld0@1 Word 32 Var a@1.0 Word 32 
EntryPoint 1

Function COGENT.deserialise_ObjData 5 a@0.0 Word 32 a@0.1 Word 32 a@0.2 Word 32 a@0.3 Word 32 mem Mem 8 ret.0 Word 32 ret.1.0 Word 32 ret.1.1 Word 32 ret.2.0 Word 32 ret.2.1.0 Word 64 ret.2.1.1 Word 32 ret.2.2 Word 32 mem Mem
12 Cond 13 18 Var p@11 Bool
34 Cond 35 40 Var v6@33 Bool
63 Basic Ret 7 ret.0 Word 32 Var v24@62.0 Word 32 ret.1.0 Word 32 Num 0 Word 32 ret.1.1 Word 32 Num 0 Word 32 ret.2.0 Word 32 Var v24@62.1.0 Word 32 ret.2.1.0 Word 64 Var v24@62.1.1.0 Word 64 ret.2.1.1 Word 32 Var v24@62.1.1.1 Word 32 ret.2.2 Word 32 Var v24@62.1.2 Word 32 
62 Basic 63 5 v24@62.0 Word 32 Num 0 Word 32 v24@62.1.0 Word 32 Var v23@61.0 Word 32 v24@62.1.1.0 Word 64 Var v23@61.1.0 Word 64 v24@62.1.1.1 Word 32 Var v23@61.1.1 Word 32 v24@62.1.2 Word 32 Var v23@61.2 Word 32 
61 Basic 62 4 v23@61.0 Word 32 Var v13_fld0@54 Word 32 v23@61.1.0 Word 64 Var v18@56.0 Word 64 v23@61.1.1 Word 32 Var v18@56.1 Word 32 v23@61.2 Word 32 Var v22@60 Word 32 
60 Basic 61 1 v22@60 Word 32 Op Plus Word 32 2 Var v21@59 Word 32 Var o@10 Word 32  
59 Basic 60 1 v21@59 Word 32 Op Plus Word 32 2 Var a_fld2@3 Word 32 Var v20@58 Word 32  
58 Basic 59 1 v20@58 Word 32 Op WordCast Word 32 1 Var v19@57 Word 8  
57 Basic 58 1 v19@57 Word 8 Num 8 Word 8 
56 Basic 57 2 v18@56.0 Word 64 Var r@19 Word 64 v18@56.1 Word 32 Var v13_fld1@55 Word 32 
55 Basic 56 1 v13_fld1@55 Word 32 Var v13@55.1 Word 32 
54 Basic 55 1 v13_fld0@54 Word 32 Var v13@54.0 Word 32 
53 Basic 54 2 v13@53.0 Word 32 Var Error_missed@47.1.0 Word 32 v13@53.1 Word 32 Var Error_missed@47.1.1 Word 32 
47 Basic 53 3 Error_missed@47.0 Word 32 Var v11@44.0 Word 32 Error_missed@47.1.0 Word 32 Var v11@44.2.0 Word 32 Error_missed@47.1.1 Word 32 Var v11@44.2.1 Word 32 
52 Basic Ret 7 ret.0 Word 32 Var v18@51.0 Word 32 ret.1.0 Word 32 Var v18@51.1.0 Word 32 ret.1.1 Word 32 Var v18@51.1.1 Word 32 ret.2.0 Word 32 Num 0 Word 32 ret.2.1.0 Word 64 Num 0 Word 64 ret.2.1.1 Word 32 Num 0 Word 32 ret.2.2 Word 32 Num 0 Word 32 
51 Basic 52 3 v18@51.0 Word 32 Num 0 Word 32 v18@51.1.0 Word 32 Var v17@50.0 Word 32 v18@51.1.1 Word 32 Var v17@50.1 Word 32 
50 Basic 51 2 v17@50.0 Word 32 Var Error_fld0@48 Word 32 v17@50.1 Word 32 Var Error_fld1@49 Word 32 
49 Basic 50 1 Error_fld1@49 Word 32 Var Error@49.1 Word 32 
48 Basic 49 1 Error_fld0@48 Word 32 Var Error@48.0 Word 32 
46 Basic 48 2 Error@46.0 Word 32 Var v11@44.1.0 Word 32 Error@46.1 Word 32 Var v11@44.1.1 Word 32 
45 Cond 46 47 Op Equals Bool 2 Var v11@44.0 Word 32 Num 0 Word 32 
44 Call 45 COGENT.deserialise_wordarray_U8 5 Var v10@43.0 Word 32 Var v10@43.1 Word 32 Var v10@43.2 Word 32 Var v10@43.3 Word 32 Var mem Mem  6 v11@44.0 Word 32 v11@44.1.0 Word 32 v11@44.1.1 Word 32 v11@44.2.0 Word 32 v11@44.2.1 Word 32 mem Mem
43 Basic 44 4 v10@43.0 Word 32 Var a_fld0@1 Word 32 v10@43.1 Word 32 Var a_fld1@2 Word 32 v10@43.2 Word 32 Var v9@42 Word 32 v10@43.3 Word 32 Var o@10 Word 32 
42 Basic 43 1 v9@42 Word 32 Op Plus Word 32 2 Var a_fld2@3 Word 32 Var v8@41 Word 32  
41 Basic 42 1 v8@41 Word 32 Op WordCast Word 32 1 Var v7@40 Word 8  
40 Basic 41 1 v7@40 Word 8 Num 8 Word 8 
39 Basic Ret 7 ret.0 Word 32 Var v10@38.0 Word 32 ret.1.0 Word 32 Var v10@38.1.0 Word 32 ret.1.1 Word 32 Var v10@38.1.1 Word 32 ret.2.0 Word 32 Num 0 Word 32 ret.2.1.0 Word 64 Num 0 Word 64 ret.2.1.1 Word 32 Num 0 Word 32 ret.2.2 Word 32 Num 0 Word 32 
38 Basic 39 3 v10@38.0 Word 32 Num 0 Word 32 v10@38.1.0 Word 32 Var v9@37.0 Word 32 v10@38.1.1 Word 32 Var v9@37.1 Word 32 
37 Basic 38 2 v9@37.0 Word 32 Var v8@36 Word 32 v9@37.1 Word 32 Var a_fld0@1 Word 32 
36 Basic 37 1 v8@36 Word 32 Op WordCast Word 32 1 Var v7@35 Word 8  
35 Basic 36 1 v7@35 Word 8 Num 22 Word 8 
33 Basic 34 1 v6@33 Bool Op Not Bool 1 Op Equals Bool 2 Var v5@32 Word 64 Var r@19 Word 64   
32 Basic 33 1 v5@32 Word 64 Op BWOr Word 64 2 Var y@26 Word 64 Var v4@31 Word 64  
31 Basic 32 1 v4@31 Word 64 Op ShiftLeft Word 64 2 Var v1@28 Word 64 Var v3@30 Word 64  
30 Basic 31 1 v3@30 Word 64 Op WordCast Word 64 1 Var v2@29 Word 8  
29 Basic 30 1 v2@29 Word 8 Num 29 Word 8 
28 Call 29 COGENT.u8_to_u64 2 Var z@27 Word 8 Var mem Mem  2 v1@28 Word 64 mem Mem
27 Basic 28 1 z@27 Word 8 Num 1 Word 8 
26 Basic 27 1 y@26 Word 64 Op BWAnd Word 64 2 Var r@19 Word 64 Var x@25 Word 64  
25 Call 26 COGENT.binNot 2 Var w@24 Word 64 Var mem Mem  2 x@25 Word 64 mem Mem
24 Basic 25 1 w@24 Word 64 Op ShiftLeft Word 64 2 Var t@21 Word 64 Var v@23 Word 64  
23 Basic 24 1 v@23 Word 64 Op WordCast Word 64 1 Var u@22 Word 8  
22 Basic 23 1 u@22 Word 8 Num 29 Word 8 
21 Basic 22 1 t@21 Word 64 Op WordCast Word 64 1 Var s@20 Word 8  
20 Basic 21 1 s@20 Word 8 Num 7 Word 8 
19 Call 20 COGENT.deserialise_le64 3 Var q@18.0 Word 32 Var q@18.1 Word 32 Var mem Mem  2 r@19 Word 64 mem Mem
18 Basic 19 2 q@18.0 Word 32 Var a_fld1@2 Word 32 q@18.1 Word 32 Var a_fld2@3 Word 32 
17 Basic Ret 7 ret.0 Word 32 Var t@16.0 Word 32 ret.1.0 Word 32 Var t@16.1.0 Word 32 ret.1.1 Word 32 Var t@16.1.1 Word 32 ret.2.0 Word 32 Num 0 Word 32 ret.2.1.0 Word 64 Num 0 Word 64 ret.2.1.1 Word 32 Num 0 Word 32 ret.2.2 Word 32 Num 0 Word 32 
16 Basic 17 3 t@16.0 Word 32 Num 0 Word 32 t@16.1.0 Word 32 Var s@15.0 Word 32 t@16.1.1 Word 32 Var s@15.1 Word 32 
15 Basic 16 2 s@15.0 Word 32 Var r@14 Word 32 s@15.1 Word 32 Var a_fld0@1 Word 32 
14 Basic 15 1 r@14 Word 32 Op WordCast Word 32 1 Var q@13 Word 8  
13 Basic 14 1 q@13 Word 8 Num 22 Word 8 
11 Basic 12 1 p@11 Bool Op Not Bool 1 Op SignedLessEquals Bool 2 Var o@10 Word 32 Var a_fld3@4 Word 32   
10 Basic 11 1 o@10 Word 32 Op Minus Word 32 2 Var l@7 Word 32 Var n@9 Word 32  
9 Basic 10 1 n@9 Word 32 Op WordCast Word 32 1 Var m@8 Word 8  
8 Basic 9 1 m@8 Word 8 Num 8 Word 8 
7 Basic 8 1 l@7 Word 32 Op Minus Word 32 2 Var a_fld3@4 Word 32 Var k@6 Word 32  
6 Basic 7 1 k@6 Word 32 Op WordCast Word 32 1 Var j@5 Word 8  
5 Basic 6 1 j@5 Word 8 Num 24 Word 8 
4 Basic 5 1 a_fld3@4 Word 32 Var a@4.3 Word 32 
3 Basic 4 1 a_fld2@3 Word 32 Var a@3.2 Word 32 
2 Basic 3 1 a_fld1@2 Word 32 Var a@2.1 Word 32 
1 Basic 2 1 a_fld0@1 Word 32 Var a@1.0 Word 32 
EntryPoint 1

Function COGENT.loop_body_read_obj_pages_in_buf 7 a@0.0.0 Word 32 a@0.0.1 Word 32 a@0.0.2 Word 32 a@0.1.0 Word 32 a@0.1.1 Word 32 a@0.2 Word 32 mem Mem 7 ret.0.0 Word 32 ret.0.1 Word 32 ret.0.2 Word 32 ret.1.0 Word 32 ret.1.1 Word 32 ret.1.2 Word 32 mem Mem
29 Basic Ret 6 ret.0.0 Word 32 Var v7@25.0 Word 32 ret.0.1 Word 32 Var v7@25.1 Word 32 ret.0.2 Word 32 Var v7@25.2 Word 32 ret.1.0 Word 32 Var v10@28.0 Word 32 ret.1.1 Word 32 Var v10@28.1 Word 32 ret.1.2 Word 32 Var v10@28.2 Word 32 
28 Basic 29 3 v10@28.0 Word 32 Var v9@27.0 Word 32 v10@28.1 Word 32 Num 0 Word 32 v10@28.2 Word 32 Var v9@27.1 Word 32 
27 Basic 28 2 v9@27.0 Word 32 Num 0 Word 32 v9@27.1 Word 32 Var v8@26 Word 32 
26 Basic 27 1 v8@26 Word 32 Num 0 Word 32 
25 Basic 26 3 v7@25.0 Word 32 Var s_fld0_fld0@13 Word 32 v7@25.1 Word 32 Var s_fld0_fld1@14 Word 32 v7@25.2 Word 32 Var s_fld0_fld2@15 Word 32 
24 Basic 25 1 v6@24 Word 32 Var v5@23 Word 32 
23 Basic 24 1 v5@23 Word 32 Var Error_missed@18.1 Word 32 
18 Basic 23 2 Error_missed@18.0 Word 32 Var s_fld1@12.0 Word 32 Error_missed@18.1 Word 32 Var s_fld1@12.2 Word 32 
22 Basic Ret 6 ret.0.0 Word 32 Var v5@19.0 Word 32 ret.0.1 Word 32 Var v5@19.1 Word 32 ret.0.2 Word 32 Var v5@19.2 Word 32 ret.1.0 Word 32 Var v7@21.0 Word 32 ret.1.1 Word 32 Var v7@21.1 Word 32 ret.1.2 Word 32 Var v7@21.2 Word 32 
21 Basic 22 3 v7@21.0 Word 32 Var v6@20.0 Word 32 v7@21.1 Word 32 Var v6@20.1 Word 32 v7@21.2 Word 32 Num 0 Word 32 
20 Basic 21 2 v6@20.0 Word 32 Num 0 Word 32 v6@20.1 Word 32 Var Error@17 Word 32 
19 Basic 20 3 v5@19.0 Word 32 Var s_fld0_fld0@13 Word 32 v5@19.1 Word 32 Var s_fld0_fld1@14 Word 32 v5@19.2 Word 32 Var s_fld0_fld2@15 Word 32 
17 Basic 19 1 Error@17 Word 32 Var s_fld1@12.1 Word 32 
16 Cond 17 18 Op Equals Bool 2 Var s_fld1@12.0 Word 32 Num 0 Word 32 
15 Basic 16 1 s_fld0_fld2@15 Word 32 Var s_fld0@15.2 Word 32 
14 Basic 15 1 s_fld0_fld1@14 Word 32 Var s_fld0@14.1 Word 32 
13 Basic 14 1 s_fld0_fld0@13 Word 32 Var s_fld0@13.0 Word 32 
12 Basic 13 3 s_fld1@12.0 Word 32 Var s@12.1.0 Word 32 s_fld1@12.1 Word 32 Var s@12.1.1 Word 32 s_fld1@12.2 Word 32 Var s@12.1.2 Word 32 
11 Basic 12 3 s_fld0@11.0 Word 32 Var s@11.0.0 Word 32 s_fld0@11.1 Word 32 Var s@11.0.1 Word 32 s_fld0@11.2 Word 32 Var s@11.0.2 Word 32 
10 Call 11 COGENT.wubi_leb_read 8 Var r@9.0 Word 32 Var r@9.1 Word 32 Var r@9.2 Word 32 Var r@9.3 Word 32 Var r@9.4 Word 32 Var r@9.5 Word 32 Var r@9.6 Word 32 Var mem Mem  7 s@10.0.0 Word 32 s@10.0.1 Word 32 s@10.0.2 Word 32 s@10.1.0 Word 32 s@10.1.1 Word 32 s@10.1.2 Word 32 mem Mem
9 Basic 10 7 r@9.0 Word 32 Var a_fld0_fld0@2 Word 32 r@9.1 Word 32 Var a_fld0_fld1@3 Word 32 r@9.2 Word 32 Var a_fld1_fld0@6 Word 32 r@9.3 Word 32 Var a_fld0_fld2@4 Word 32 r@9.4 Word 32 Var a_fld2@8 Word 32 r@9.5 Word 32 Var a_fld2@8 Word 32 r@9.6 Word 32 Var a_fld1_fld1@7 Word 32 
8 Basic 9 1 a_fld2@8 Word 32 Var a@8.2 Word 32 
7 Basic 8 1 a_fld1_fld1@7 Word 32 Var a_fld1@7.1 Word 32 
6 Basic 7 1 a_fld1_fld0@6 Word 32 Var a_fld1@6.0 Word 32 
5 Basic 6 2 a_fld1@5.0 Word 32 Var a@5.1.0 Word 32 a_fld1@5.1 Word 32 Var a@5.1.1 Word 32 
4 Basic 5 1 a_fld0_fld2@4 Word 32 Var a_fld0@4.2 Word 32 
3 Basic 4 1 a_fld0_fld1@3 Word 32 Var a_fld0@3.1 Word 32 
2 Basic 3 1 a_fld0_fld0@2 Word 32 Var a_fld0@2.0 Word 32 
1 Basic 2 3 a_fld0@1.0 Word 32 Var a@1.0.0 Word 32 a_fld0@1.1 Word 32 Var a@1.0.1 Word 32 a_fld0@1.2 Word 32 Var a@1.0.2 Word 32 
EntryPoint 1

Function COGENT.serialise_ObjPad 4 a@0.0 Word 32 a@0.1 Word 32 a@0.2 Word 32 mem Mem 3 ret.0 Word 32 ret.1 Word 32 mem Mem
11 Basic Ret 2 ret.0 Word 32 Var m@9 Word 32 ret.1 Word 32 Var n@10 Word 32 
10 Basic 11 1 n@10 Word 32 Op Plus Word 32 2 Var a_fld1@2 Word 32 Var j@6 Word 32  
9 Call 10 COGENT.buf_memset 5 Var l@8.0 Word 32 Var l@8.1 Word 32 Var l@8.2 Word 32 Var l@8.3 Word 8 Var mem Mem  2 m@9 Word 32 mem Mem
8 Basic 9 4 l@8.0 Word 32 Var a_fld0@1 Word 32 l@8.1 Word 32 Var a_fld1@2 Word 32 l@8.2 Word 32 Var j@6 Word 32 l@8.3 Word 8 Var k@7 Word 8 
7 Basic 8 1 k@7 Word 8 Num 66 Word 8 
6 Basic 7 1 j@6 Word 32 Op Minus Word 32 2 Var a_fld2@3 Word 32 Var i@5 Word 32  
5 Basic 6 1 i@5 Word 32 Op WordCast Word 32 1 Var h@4 Word 8  
4 Basic 5 1 h@4 Word 8 Num 24 Word 8 
3 Basic 4 1 a_fld2@3 Word 32 Var a@3.2 Word 32 
2 Basic 3 1 a_fld1@2 Word 32 Var a@2.1 Word 32 
1 Basic 2 1 a_fld0@1 Word 32 Var a@1.0 Word 32 
EntryPoint 1

Function COGENT.loop_deserialise_ObjDentry 7 a@0.0.0 Word 32 a@0.0.1 Word 32 a@0.0.2 Word 32 a@0.1.0 Word 32 a@0.1.1 Word 32 a@0.2 Word 32 mem Mem 12 ret.0 Word 32 ret.1.0.0 Word 32 ret.1.0.1 Word 32 ret.1.0.2 Word 32 ret.1.1.0 Word 32 ret.1.1.1 Word 32 ret.2.0.0 Word 32 ret.2.0.1 Word 32 ret.2.0.2 Word 32 ret.2.1.0 Word 32 ret.2.1.1 Word 32 mem Mem
38 Basic Ret 11 ret.0 Word 32 Var v3@37.0 Word 32 ret.1.0.0 Word 32 Num 0 Word 32 ret.1.0.1 Word 32 Num 0 Word 32 ret.1.0.2 Word 32 Num 0 Word 32 ret.1.1.0 Word 32 Num 0 Word 32 ret.1.1.1 Word 32 Num 0 Word 32 ret.2.0.0 Word 32 Var v3@37.1.0.0 Word 32 ret.2.0.1 Word 32 Var v3@37.1.0.1 Word 32 ret.2.0.2 Word 32 Var v3@37.1.0.2 Word 32 ret.2.1.0 Word 32 Var v3@37.1.1.0 Word 32 ret.2.1.1 Word 32 Var v3@37.1.1.1 Word 32 
37 Basic 38 6 v3@37.0 Word 32 Var v2@36.0 Word 32 v3@37.1.0.0 Word 32 Var v2@36.1.0.0 Word 32 v3@37.1.0.1 Word 32 Var v2@36.1.0.1 Word 32 v3@37.1.0.2 Word 32 Var v2@36.1.0.2 Word 32 v3@37.1.1.0 Word 32 Var v2@36.1.1.0 Word 32 v3@37.1.1.1 Word 32 Var v2@36.1.1.1 Word 32 
36 Basic 37 6 v2@36.0 Word 32 Num 0 Word 32 v2@36.1.0.0 Word 32 Var v1@35.0.0 Word 32 v2@36.1.0.1 Word 32 Var v1@35.0.1 Word 32 v2@36.1.0.2 Word 32 Var v1@35.0.2 Word 32 v2@36.1.1.0 Word 32 Var v1@35.1.0 Word 32 v2@36.1.1.1 Word 32 Var v1@35.1.1 Word 32 
35 Basic 36 5 v1@35.0.0 Word 32 Var y@33.0 Word 32 v1@35.0.1 Word 32 Var y@33.1 Word 32 v1@35.0.2 Word 32 Var y@33.2 Word 32 v1@35.1.0 Word 32 Var z@34.0 Word 32 v1@35.1.1 Word 32 Var z@34.1 Word 32 
34 Basic 35 2 z@34.0 Word 32 Var q_fld0@29 Word 32 z@34.1 Word 32 Var q_fld2@31 Word 32 
33 Basic 34 3 y@33.0 Word 32 Var x@32.0 Word 32 y@33.1 Word 32 Num 0 Word 32 y@33.2 Word 32 Var x@32.1 Word 32 
32 Basic 33 2 x@32.0 Word 32 Num 0 Word 32 x@32.1 Word 32 Var q_fld1@30 Word 32 
31 Basic 32 1 q_fld2@31 Word 32 Var q@31.2 Word 32 
30 Basic 31 1 q_fld1@30 Word 32 Var q@30.1 Word 32 
29 Basic 30 1 q_fld0@29 Word 32 Var q@29.0 Word 32 
28 Basic 29 3 q@28.0 Word 32 Var Error_missed@12.1.0 Word 32 q@28.1 Word 32 Var Error_missed@12.1.1 Word 32 q@28.2 Word 32 Var Error_missed@12.1.2 Word 32 
12 Basic 28 4 Error_missed@12.0 Word 32 Var o@9.0 Word 32 Error_missed@12.1.0 Word 32 Var o@9.2.0 Word 32 Error_missed@12.1.1 Word 32 Var o@9.2.1 Word 32 Error_missed@12.1.2 Word 32 Var o@9.2.2 Word 32 
27 Basic Ret 11 ret.0 Word 32 Var v6@26.0 Word 32 ret.1.0.0 Word 32 Var v6@26.1.0.0 Word 32 ret.1.0.1 Word 32 Var v6@26.1.0.1 Word 32 ret.1.0.2 Word 32 Var v6@26.1.0.2 Word 32 ret.1.1.0 Word 32 Var v6@26.1.1.0 Word 32 ret.1.1.1 Word 32 Var v6@26.1.1.1 Word 32 ret.2.0.0 Word 32 Num 0 Word 32 ret.2.0.1 Word 32 Num 0 Word 32 ret.2.0.2 Word 32 Num 0 Word 32 ret.2.1.0 Word 32 Num 0 Word 32 ret.2.1.1 Word 32 Num 0 Word 32 
26 Basic 27 6 v6@26.0 Word 32 Var v5@25.0 Word 32 v6@26.1.0.0 Word 32 Var v5@25.1.0.0 Word 32 v6@26.1.0.1 Word 32 Var v5@25.1.0.1 Word 32 v6@26.1.0.2 Word 32 Var v5@25.1.0.2 Word 32 v6@26.1.1.0 Word 32 Var v5@25.1.1.0 Word 32 v6@26.1.1.1 Word 32 Var v5@25.1.1.1 Word 32 
25 Basic 26 6 v5@25.0 Word 32 Num 0 Word 32 v5@25.1.0.0 Word 32 Var v4@24.0.0 Word 32 v5@25.1.0.1 Word 32 Var v4@24.0.1 Word 32 v5@25.1.0.2 Word 32 Var v4@24.0.2 Word 32 v5@25.1.1.0 Word 32 Var v4@24.1.0 Word 32 v5@25.1.1.1 Word 32 Var v4@24.1.1 Word 32 
24 Basic 25 5 v4@24.0.0 Word 32 Var z@20.0 Word 32 v4@24.0.1 Word 32 Var z@20.1 Word 32 v4@24.0.2 Word 32 Var z@20.2 Word 32 v4@24.1.0 Word 32 Var v3@23.0 Word 32 v4@24.1.1 Word 32 Var v3@23.1 Word 32 
23 Basic 24 2 v3@23.0 Word 32 Var v2@22 Word 32 v3@23.1 Word 32 Var Error_fld1@14 Word 32 
22 Basic 23 1 v2@22 Word 32 Op WordCast Word 32 1 Var v1@21 Word 8  
21 Basic 22 1 v1@21 Word 8 Num 22 Word 8 
20 Basic 21 3 z@20.0 Word 32 Var y@19.0 Word 32 z@20.1 Word 32 Var y@19.1 Word 32 z@20.2 Word 32 Num 0 Word 32 
19 Basic 20 2 y@19.0 Word 32 Num 0 Word 32 y@19.1 Word 32 Var x@18 Word 32 
18 Basic 19 1 x@18 Word 32 Num 0 Word 32 
17 Basic 18 1 w@17 Word 32 Num 0 Word 32 
16 Basic 17 1 v@16 Word 32 Num 0 Word 32 
15 Basic 16 1 u@15 Word 32 Num 0 Word 32 
14 Basic 15 1 Error_fld1@14 Word 32 Var Error@14.1 Word 32 
13 Basic 14 1 Error_fld0@13 Word 32 Var Error@13.0 Word 32 
11 Basic 13 2 Error@11.0 Word 32 Var o@9.1.0 Word 32 Error@11.1 Word 32 Var o@9.1.1 Word 32 
10 Cond 11 12 Op Equals Bool 2 Var o@9.0 Word 32 Num 0 Word 32 
9 Call 10 COGENT.deserialise_ObjDentry 4 Var n@8.0 Word 32 Var n@8.1 Word 32 Var n@8.2 Word 32 Var mem Mem  7 o@9.0 Word 32 o@9.1.0 Word 32 o@9.1.1 Word 32 o@9.2.0 Word 32 o@9.2.1 Word 32 o@9.2.2 Word 32 mem Mem
8 Basic 9 3 n@8.0 Word 32 Var m@7 Word 32 n@8.1 Word 32 Var a_fld2@5 Word 32 n@8.2 Word 32 Var a_fld1_fld1@4 Word 32 
7 Call 8 COGENT.deep_freeOptionObjDentry 5 Var l@6.0 Word 32 Var l@6.1.0 Word 32 Var l@6.1.1 Word 32 Var l@6.1.2 Word 32 Var mem Mem  2 m@7 Word 32 mem Mem
6 Basic 7 4 l@6.0 Word 32 Var a_fld1_fld0@3 Word 32 l@6.1.0 Word 32 Var a_fld0@1.0 Word 32 l@6.1.1 Word 32 Var a_fld0@1.1 Word 32 l@6.1.2 Word 32 Var a_fld0@1.2 Word 32 
5 Basic 6 1 a_fld2@5 Word 32 Var a@5.2 Word 32 
4 Basic 5 1 a_fld1_fld1@4 Word 32 Var a_fld1@4.1 Word 32 
3 Basic 4 1 a_fld1_fld0@3 Word 32 Var a_fld1@3.0 Word 32 
2 Basic 3 2 a_fld1@2.0 Word 32 Var a@2.1.0 Word 32 a_fld1@2.1 Word 32 Var a@2.1.1 Word 32 
1 Basic 2 3 a_fld0@1.0 Word 32 Var a@1.0.0 Word 32 a_fld0@1.1 Word 32 Var a@1.0.1 Word 32 a_fld0@1.2 Word 32 Var a@1.0.2 Word 32 
EntryPoint 1

Function COGENT.fsm_check_free_space 4 a@0.0 Word 32 a@0.1 Word 32 a@0.2 Word 32 mem Mem 4 ret.0 Word 32 ret.1 Word 32 ret.2 Word 32 mem Mem
17 Cond 18 23 Var t@16 Bool
39 Cond 40 45 Var v10@38 Bool
47 Basic Ret 3 ret.0 Word 32 Var v12@46.0 Word 32 ret.1 Word 32 Num 0 Word 32 ret.2 Word 32 Var v12@46.1 Word 32 
46 Basic 47 2 v12@46.0 Word 32 Num 0 Word 32 v12@46.1 Word 32 Var v11@45 Word 32 
45 Basic 46 1 v11@45 Word 32 Num 0 Word 32 
44 Basic Ret 3 ret.0 Word 32 Var v14@43.0 Word 32 ret.1 Word 32 Var v14@43.1 Word 32 ret.2 Word 32 Num 0 Word 32 
43 Basic 44 2 v14@43.0 Word 32 Num 0 Word 32 v14@43.1 Word 32 Var v13@42 Word 32 
42 Basic 43 1 v13@42 Word 32 Op WordCast Word 32 1 Var v12@41 Word 8  
41 Basic 42 1 v12@41 Word 8 Num 28 Word 8 
40 Basic 41 1 v11@40 Word 32 Num 0 Word 32 
38 Basic 39 1 v10@38 Bool Op And Bool 2 Var v@24 Bool Var v9@37 Bool  
37 Basic 38 1 v9@37 Bool Op And Bool 2 Var v2@30 Bool Var v8@36 Bool  
36 Basic 37 1 v8@36 Bool Op Equals Bool 2 Var v5@33 Word 32 Var v7@35 Word 32  
35 Basic 36 1 v7@35 Word 32 Op WordCast Word 32 1 Var v6@34 Word 8  
34 Basic 35 1 v6@34 Word 8 Num 0 Word 8 
33 Basic 34 1 v5@33 Word 32 Op BWAnd Word 32 2 Var a_fld2@3 Word 32 Var v4@32 Word 32  
32 Basic 33 1 v4@32 Word 32 Op WordCast Word 32 1 Var v3@31 Word 8  
31 Basic 32 1 v3@31 Word 8 Num 1 Word 8 
30 Basic 31 1 v2@30 Bool Op Equals Bool 2 Var y@27 Word 32 Var v1@29 Word 32  
29 Basic 30 1 v1@29 Word 32 Op WordCast Word 32 1 Var z@28 Word 8  
28 Basic 29 1 z@28 Word 8 Num 0 Word 8 
27 Basic 28 1 y@27 Word 32 Op BWAnd Word 32 2 Var a_fld2@3 Word 32 Var x@26 Word 32  
26 Basic 27 1 x@26 Word 32 Op WordCast Word 32 1 Var w@25 Word 8  
25 Basic 26 1 w@25 Word 8 Num 2 Word 8 
24 Basic 25 1 v@24 Bool Op SignedLess Bool 2 Var l@8 Word 32 Var u@23 Word 32  
23 Basic 24 1 u@23 Word 32 Op Plus Word 32 2 Var k@7 Word 32 Var i@5 Word 32  
22 Basic Ret 3 ret.0 Word 32 Var x@21.0 Word 32 ret.1 Word 32 Var x@21.1 Word 32 ret.2 Word 32 Num 0 Word 32 
21 Basic 22 2 x@21.0 Word 32 Num 0 Word 32 x@21.1 Word 32 Var w@20 Word 32 
20 Basic 21 1 w@20 Word 32 Op WordCast Word 32 1 Var v@19 Word 8  
19 Basic 20 1 v@19 Word 8 Num 28 Word 8 
18 Basic 19 1 u@18 Word 32 Num 0 Word 32 
16 Basic 17 1 t@16 Bool Op And Bool 2 Var m@9 Bool Var s@15 Bool  
15 Basic 16 1 s@15 Bool Op Equals Bool 2 Var p@12 Word 32 Var r@14 Word 32  
14 Basic 15 1 r@14 Word 32 Op WordCast Word 32 1 Var q@13 Word 8  
13 Basic 14 1 q@13 Word 8 Num 0 Word 8 
12 Basic 13 1 p@12 Word 32 Op BWAnd Word 32 2 Var a_fld2@3 Word 32 Var o@11 Word 32  
11 Basic 12 1 o@11 Word 32 Op WordCast Word 32 1 Var n@10 Word 8  
10 Basic 11 1 n@10 Word 8 Num 1 Word 8 
9 Basic 10 1 m@9 Bool Op SignedLess Bool 2 Var l@8 Word 32 Var i@5 Word 32  
8 Basic 9 1 l@8 Word 32 Op MemAcc Word 32 2 Var mem Mem Op Plus Word 32 2 Var a_fld1@2 Word 32 Num 0 Word 32   
7 Basic 8 1 k@7 Word 32 Op MemAcc Word 32 2 Var mem Mem Op Plus Word 32 2 Var j@6 Word 32 Num 16 Word 32   
6 Basic 7 1 j@6 Word 32 Op MemAcc Word 32 2 Var mem Mem Op Plus Word 32 2 Var a_fld0@1 Word 32 Num 8 Word 32   
5 Basic 6 1 i@5 Word 32 Op MemAcc Word 32 2 Var mem Mem Op Plus Word 32 2 Var h@4 Word 32 Num 12 Word 32   
4 Basic 5 1 h@4 Word 32 Op MemAcc Word 32 2 Var mem Mem Op Plus Word 32 2 Var a_fld0@1 Word 32 Num 8 Word 32   
3 Basic 4 1 a_fld2@3 Word 32 Var a@3.2 Word 32 
2 Basic 3 1 a_fld1@2 Word 32 Var a@2.1 Word 32 
1 Basic 2 1 a_fld0@1 Word 32 Var a@1.0 Word 32 
EntryPoint 1

Function COGENT.fsm_init 4 a@0.0 Word 32 a@0.1 Word 32 a@0.2 Word 32 mem Mem 6 ret.0 Word 32 ret.1.0 Word 32 ret.1.1.0 Word 32 ret.1.1.1 Word 32 ret.1.2 Word 32 mem Mem
69 Basic Ret 5 ret.0 Word 32 Var v5_fld0@54 Word 32 ret.1.0 Word 32 Var v22@68.0 Word 32 ret.1.1.0 Word 32 Var v22@68.1.0 Word 32 ret.1.1.1 Word 32 Var v22@68.1.1 Word 32 ret.1.2 Word 32 Var v22@68.2 Word 32 
68 Basic 69 4 v22@68.0 Word 32 Var v21@67.0 Word 32 v22@68.1.0 Word 32 Num 0 Word 32 v22@68.1.1 Word 32 Num 0 Word 32 v22@68.2 Word 32 Var v21@67.1 Word 32 
67 Basic 68 2 v21@67.0 Word 32 Num 0 Word 32 v21@67.1 Word 32 Var v20@66 Word 32 
66 Basic 67 2 v20@66 Word 32 Var v19@65 Word 32 mem Mem Op MemUpdate Mem 3 Var mem Mem Op Plus Word 32 2 Var v19@65 Word 32 Num 0 Word 32  Var v16@62 Word 32  
65 Basic 66 2 v19@65 Word 32 Var v18@64 Word 32 mem Mem Op MemUpdate Mem 3 Var mem Mem Op Plus Word 32 2 Var v18@64 Word 32 Num 12 Word 32  Var v5_fld1@55 Word 32  
64 Basic 65 2 v18@64 Word 32 Var v17@63 Word 32 mem Mem Op MemUpdate Mem 3 Var mem Mem Op Plus Word 32 2 Var v17@63 Word 32 Num 8 Word 32  Var x_fld1@38 Word 32  
63 Basic 64 2 v17@63 Word 32 Var a_fld2@3 Word 32 mem Mem Op MemUpdate Mem 3 Var mem Mem Op Plus Word 32 2 Var a_fld2@3 Word 32 Num 4 Word 32  Var p_fld1@22 Word 32  
62 Basic 63 1 v16@62 Word 32 Op Minus Word 32 2 Var v13@59 Word 32 Var v15@61 Word 32  
61 Basic 62 1 v15@61 Word 32 Op WordCast Word 32 1 Var v14@60 Word 8  
60 Basic 61 1 v14@60 Word 8 Num 2 Word 8 
59 Basic 60 1 v13@59 Word 32 Op MemAcc Word 32 2 Var mem Mem Op Plus Word 32 2 Var v12@58 Word 32 Num 0 Word 32   
58 Basic 59 1 v12@58 Word 32 Op MemAcc Word 32 2 Var mem Mem Op Plus Word 32 2 Var a_fld1@2 Word 32 Num 8 Word 32   
57 Call 58 COGENT.print_obj_super 2 Var v10@56 Word 32 Var mem Mem  2 v11@57 Word 32 mem Mem
56 Basic 57 1 v10@56 Word 32 Op MemAcc Word 32 2 Var mem Mem Op Plus Word 32 2 Var a_fld1@2 Word 32 Num 8 Word 32   
55 Basic 56 1 v5_fld1@55 Word 32 Var v5@55.1 Word 32 
54 Basic 55 1 v5_fld0@54 Word 32 Var v5@54.0 Word 32 
53 Basic 54 2 v5@53.0 Word 32 Var Error_missed@42.1.0 Word 32 v5@53.1 Word 32 Var Error_missed@42.1.1 Word 32 
42 Basic 53 3 Error_missed@42.0 Word 32 Var v3@39.0 Word 32 Error_missed@42.1.0 Word 32 Var v3@39.2.0 Word 32 Error_missed@42.1.1 Word 32 Var v3@39.2.1 Word 32 
52 Basic Ret 5 ret.0 Word 32 Var v8@46 Word 32 ret.1.0 Word 32 Var v13@51.0 Word 32 ret.1.1.0 Word 32 Var v13@51.1.0 Word 32 ret.1.1.1 Word 32 Var v13@51.1.1 Word 32 ret.1.2 Word 32 Var v13@51.2 Word 32 
51 Basic 52 4 v13@51.0 Word 32 Var v12@50.0 Word 32 v13@51.1.0 Word 32 Var v12@50.1.0 Word 32 v13@51.1.1 Word 32 Var v12@50.1.1 Word 32 v13@51.2 Word 32 Num 0 Word 32 
50 Basic 51 3 v12@50.0 Word 32 Num 0 Word 32 v12@50.1.0 Word 32 Var v11@49.0 Word 32 v12@50.1.1 Word 32 Var v11@49.1 Word 32 
49 Basic 50 2 v11@49.0 Word 32 Var v10@48 Word 32 v11@49.1 Word 32 Var a_fld2@3 Word 32 
48 Basic 49 1 v10@48 Word 32 Op WordCast Word 32 1 Var v9@47 Word 8  
47 Basic 48 1 v9@47 Word 8 Num 12 Word 8 
46 Call 47 COGENT.wordarray_free_1 3 Var v7@45.0 Word 32 Var v7@45.1 Word 32 Var mem Mem  2 v8@46 Word 32 mem Mem
45 Basic 46 2 v7@45.0 Word 32 Var v6@44 Word 32 v7@45.1 Word 32 Var x_fld1@38 Word 32 
44 Call 45 COGENT.wordarray_free_0 3 Var v5@43.0 Word 32 Var v5@43.1 Word 32 Var mem Mem  2 v6@44 Word 32 mem Mem
43 Basic 44 2 v5@43.0 Word 32 Var Error@41 Word 32 v5@43.1 Word 32 Var p_fld1@22 Word 32 
41 Basic 43 1 Error@41 Word 32 Var v3@39.1 Word 32 
40 Cond 41 42 Op Equals Bool 2 Var v3@39.0 Word 32 Num 0 Word 32 
39 Call 40 COGENT.rbt_create_1 2 Var x_fld0@37 Word 32 Var mem Mem  5 v3@39.0 Word 32 v3@39.1 Word 32 v3@39.2.0 Word 32 v3@39.2.1 Word 32 mem Mem
38 Basic 39 1 x_fld1@38 Word 32 Var x@38.1 Word 32 
37 Basic 38 1 x_fld0@37 Word 32 Var x@37.0 Word 32 
36 Basic 37 2 x@36.0 Word 32 Var Error_missed@27.1.0 Word 32 x@36.1 Word 32 Var Error_missed@27.1.1 Word 32 
27 Basic 36 3 Error_missed@27.0 Word 32 Var v@24.0 Word 32 Error_missed@27.1.0 Word 32 Var v@24.2.0 Word 32 Error_missed@27.1.1 Word 32 Var v@24.2.1 Word 32 
35 Basic Ret 5 ret.0 Word 32 Var y@29 Word 32 ret.1.0 Word 32 Var v4@34.0 Word 32 ret.1.1.0 Word 32 Var v4@34.1.0 Word 32 ret.1.1.1 Word 32 Var v4@34.1.1 Word 32 ret.1.2 Word 32 Var v4@34.2 Word 32 
34 Basic 35 4 v4@34.0 Word 32 Var v3@33.0 Word 32 v4@34.1.0 Word 32 Var v3@33.1.0 Word 32 v4@34.1.1 Word 32 Var v3@33.1.1 Word 32 v4@34.2 Word 32 Num 0 Word 32 
33 Basic 34 3 v3@33.0 Word 32 Num 0 Word 32 v3@33.1.0 Word 32 Var v2@32.0 Word 32 v3@33.1.1 Word 32 Var v2@32.1 Word 32 
32 Basic 33 2 v2@32.0 Word 32 Var v1@31 Word 32 v2@32.1 Word 32 Var a_fld2@3 Word 32 
31 Basic 32 1 v1@31 Word 32 Op WordCast Word 32 1 Var z@30 Word 8  
30 Basic 31 1 z@30 Word 8 Num 12 Word 8 
29 Call 30 COGENT.wordarray_free_0 3 Var x@28.0 Word 32 Var x@28.1 Word 32 Var mem Mem  2 y@29 Word 32 mem Mem
28 Basic 29 2 x@28.0 Word 32 Var Error@26 Word 32 x@28.1 Word 32 Var p_fld1@22 Word 32 
26 Basic 28 1 Error@26 Word 32 Var v@24.1 Word 32 
25 Cond 26 27 Op Equals Bool 2 Var v@24.0 Word 32 Num 0 Word 32 
24 Call 25 COGENT.wordarray_create_1 3 Var u@23.0 Word 32 Var u@23.1 Word 32 Var mem Mem  5 v@24.0 Word 32 v@24.1 Word 32 v@24.2.0 Word 32 v@24.2.1 Word 32 mem Mem
23 Basic 24 2 u@23.0 Word 32 Var p_fld0@21 Word 32 u@23.1 Word 32 Var l@8 Word 32 
22 Basic 23 1 p_fld1@22 Word 32 Var p@22.1 Word 32 
21 Basic 22 1 p_fld0@21 Word 32 Var p@21.0 Word 32 
20 Basic 21 2 p@20.0 Word 32 Var Error_missed@13.1.0 Word 32 p@20.1 Word 32 Var Error_missed@13.1.1 Word 32 
13 Basic 20 3 Error_missed@13.0 Word 32 Var n@10.0 Word 32 Error_missed@13.1.0 Word 32 Var n@10.2.0 Word 32 Error_missed@13.1.1 Word 32 Var n@10.2.1 Word 32 
19 Basic Ret 5 ret.0 Word 32 Var Error@12 Word 32 ret.1.0 Word 32 Var t@18.0 Word 32 ret.1.1.0 Word 32 Var t@18.1.0 Word 32 ret.1.1.1 Word 32 Var t@18.1.1 Word 32 ret.1.2 Word 32 Var t@18.2 Word 32 
18 Basic 19 4 t@18.0 Word 32 Var s@17.0 Word 32 t@18.1.0 Word 32 Var s@17.1.0 Word 32 t@18.1.1 Word 32 Var s@17.1.1 Word 32 t@18.2 Word 32 Num 0 Word 32 
17 Basic 18 3 s@17.0 Word 32 Num 0 Word 32 s@17.1.0 Word 32 Var r@16.0 Word 32 s@17.1.1 Word 32 Var r@16.1 Word 32 
16 Basic 17 2 r@16.0 Word 32 Var q@15 Word 32 r@16.1 Word 32 Var a_fld2@3 Word 32 
15 Basic 16 1 q@15 Word 32 Op WordCast Word 32 1 Var p@14 Word 8  
14 Basic 15 1 p@14 Word 8 Num 12 Word 8 
12 Basic 14 1 Error@12 Word 32 Var n@10.1 Word 32 
11 Cond 12 13 Op Equals Bool 2 Var n@10.0 Word 32 Num 0 Word 32 
10 Call 11 COGENT.wordarray_create_0 3 Var m@9.0 Word 32 Var m@9.1 Word 32 Var mem Mem  5 n@10.0 Word 32 n@10.1 Word 32 n@10.2.0 Word 32 n@10.2.1 Word 32 mem Mem
9 Basic 10 2 m@9.0 Word 32 Var a_fld0@1 Word 32 m@9.1 Word 32 Var l@8 Word 32 
8 Basic 9 1 l@8 Word 32 Op MemAcc Word 32 2 Var mem Mem Op Plus Word 32 2 Var k@7 Word 32 Num 0 Word 32   
7 Basic 8 1 k@7 Word 32 Op MemAcc Word 32 2 Var mem Mem Op Plus Word 32 2 Var a_fld1@2 Word 32 Num 8 Word 32   
6 Call 7 COGENT.print_obj_super 2 Var i@5 Word 32 Var mem Mem  2 j@6 Word 32 mem Mem
5 Basic 6 1 i@5 Word 32 Op MemAcc Word 32 2 Var mem Mem Op Plus Word 32 2 Var a_fld1@2 Word 32 Num 8 Word 32   
4 Basic 5 1 h@4 Word 32 Num 0 Word 32 
3 Basic 4 1 a_fld2@3 Word 32 Var a@3.2 Word 32 
2 Basic 3 1 a_fld1@2 Word 32 Var a@2.1 Word 32 
1 Basic 2 1 a_fld0@1 Word 32 Var a@1.0 Word 32 
EntryPoint 1

Function COGENT.print_ObjHeader 2 a@0 Word 32 mem Mem 2 ret Word 32 mem Mem
20 Basic Ret 1 ret Word 32 Num 0 Word 32 
19 Basic 20 1 t@19 Word 32 Num 0 Word 32 
18 Basic 19 1 s@18 Word 32 Num 0 Word 32 
17 Basic 18 1 r@17 Word 32 Num 0 Word 32 
16 Basic 17 1 q@16 Word 32 Num 0 Word 32 
15 Basic 16 1 p@15 Word 32 Num 0 Word 32 
14 Basic 15 1 o@14 Word 32 Num 0 Word 32 
13 Basic 14 1 n@13 Word 32 Num 0 Word 32 
12 Basic 13 1 m@12 Word 32 Num 0 Word 32 
11 Basic 12 1 l@11 Word 32 Num 0 Word 32 
10 Basic 11 1 k@10 Word 32 Num 0 Word 32 
9 Basic 10 1 j@9 Word 32 Num 0 Word 32 
8 Basic 9 1 i@8 Word 32 Num 0 Word 32 
7 Basic 8 1 h@7 Word 32 Num 0 Word 32 
6 Basic 7 1 g@6 Word 32 Num 0 Word 32 
5 Basic 6 1 f@5 Word 32 Num 0 Word 32 
4 Basic 5 1 e@4 Word 32 Num 0 Word 32 
3 Basic 4 1 d@3 Word 32 Num 0 Word 32 
2 Basic 3 1 c@2 Word 32 Num 0 Word 32 
1 Basic 2 1 b@1 Word 32 Var a@0 Word 32 
EntryPoint 1

Function COGENT.extract_dentarr_from_union 10 a@0.0 Word 32 a@0.1.0 Word 32 a@0.1.1.0 Word 64 a@0.1.1.1 Word 32 a@0.1.2.0 Word 64 a@0.1.3 Word 32 a@0.1.4 Word 32 a@0.1.5 Word 32 a@0.1.6 Word 32 mem Mem 5 ret.0 Word 32 ret.1 Word 32 ret.2.0 Word 32 ret.2.1 Word 32 mem Mem
38 Basic Ret 4 ret.0 Word 32 Var m@37.0 Word 32 ret.1 Word 32 Num 0 Word 32 ret.2.0 Word 32 Var m@37.1.0 Word 32 ret.2.1 Word 32 Var m@37.1.1 Word 32 
37 Basic 38 3 m@37.0 Word 32 Num 0 Word 32 m@37.1.0 Word 32 Var l@36.0 Word 32 m@37.1.1 Word 32 Var l@36.1 Word 32 
36 Basic 37 2 l@36.0 Word 32 Var a_fld0@1 Word 32 l@36.1 Word 32 Var k@35 Word 32 
35 Basic 36 1 k@35 Word 32 Var TObjSuper_missed@30.1 Word 32 
30 Basic 35 2 TObjSuper_missed@30.0 Word 32 Var TObjDel_missed@25.0 Word 32 TObjSuper_missed@30.1 Word 32 Var TObjDel_missed@25.1 Word 32 
34 Basic Ret 4 ret.0 Word 32 Var m@33.0 Word 32 ret.1 Word 32 Var m@33.1 Word 32 ret.2.0 Word 32 Num 0 Word 32 ret.2.1 Word 32 Num 0 Word 32 
33 Basic 34 2 m@33.0 Word 32 Num 0 Word 32 m@33.1 Word 32 Var l@32 Word 32 
32 Call 33 COGENT.deep_freeObjSuper 3 Var k@31.0 Word 32 Var k@31.1 Word 32 Var mem Mem  2 l@32 Word 32 mem Mem
31 Basic 32 2 k@31.0 Word 32 Var a_fld0@1 Word 32 k@31.1 Word 32 Var TObjSuper@29 Word 32 
29 Basic 31 1 TObjSuper@29 Word 32 Var TObjDel_missed@25.2 Word 32 
28 Cond 29 30 Op Equals Bool 2 Var TObjDel_missed@25.0 Word 32 Num 0 Word 32 
25 Basic 28 3 TObjDel_missed@25.0 Word 32 Var TObjData_missed@18.0 Word 32 TObjDel_missed@25.1 Word 32 Var TObjData_missed@18.2 Word 32 TObjDel_missed@25.2 Word 32 Var TObjData_missed@18.3 Word 32 
27 Basic Ret 4 ret.0 Word 32 Var j@26.0 Word 32 ret.1 Word 32 Var j@26.1 Word 32 ret.2.0 Word 32 Num 0 Word 32 ret.2.1 Word 32 Num 0 Word 32 
26 Basic 27 2 j@26.0 Word 32 Num 0 Word 32 j@26.1 Word 32 Var a_fld0@1 Word 32 
24 Basic 26 1 TObjDel@24.0 Word 64 Var TObjData_missed@18.1.0 Word 64 
23 Cond 24 25 Op Equals Bool 2 Var TObjData_missed@18.0 Word 32 Num 0 Word 32 
18 Basic 23 4 TObjData_missed@18.0 Word 32 Var TObjInode_missed@11.0 Word 32 TObjData_missed@18.1.0 Word 64 Var TObjInode_missed@11.2.0 Word 64 TObjData_missed@18.2 Word 32 Var TObjInode_missed@11.3 Word 32 TObjData_missed@18.3 Word 32 Var TObjInode_missed@11.4 Word 32 
22 Basic Ret 4 ret.0 Word 32 Var k@21.0 Word 32 ret.1 Word 32 Var k@21.1 Word 32 ret.2.0 Word 32 Num 0 Word 32 ret.2.1 Word 32 Num 0 Word 32 
21 Basic 22 2 k@21.0 Word 32 Num 0 Word 32 k@21.1 Word 32 Var j@20 Word 32 
20 Call 21 COGENT.deep_freeObjData 4 Var i@19.0 Word 32 Var i@19.1.0 Word 64 Var i@19.1.1 Word 32 Var mem Mem  2 j@20 Word 32 mem Mem
19 Basic 20 3 i@19.0 Word 32 Var a_fld0@1 Word 32 i@19.1.0 Word 64 Var TObjData@17.0 Word 64 i@19.1.1 Word 32 Var TObjData@17.1 Word 32 
17 Basic 19 2 TObjData@17.0 Word 64 Var TObjInode_missed@11.1.0 Word 64 TObjData@17.1 Word 32 Var TObjInode_missed@11.1.1 Word 32 
16 Cond 17 18 Op Equals Bool 2 Var TObjInode_missed@11.0 Word 32 Num 0 Word 32 
11 Basic 16 6 TObjInode_missed@11.0 Word 32 Var TObjPad_missed@5.0 Word 32 TObjInode_missed@11.1.0 Word 64 Var TObjPad_missed@5.1.0 Word 64 TObjInode_missed@11.1.1 Word 32 Var TObjPad_missed@5.1.1 Word 32 TObjInode_missed@11.2.0 Word 64 Var TObjPad_missed@5.2.0 Word 64 TObjInode_missed@11.3 Word 32 Var TObjPad_missed@5.3 Word 32 TObjInode_missed@11.4 Word 32 Var TObjPad_missed@5.5 Word 32 
15 Basic Ret 4 ret.0 Word 32 Var j@14.0 Word 32 ret.1 Word 32 Var j@14.1 Word 32 ret.2.0 Word 32 Num 0 Word 32 ret.2.1 Word 32 Num 0 Word 32 
14 Basic 15 2 j@14.0 Word 32 Num 0 Word 32 j@14.1 Word 32 Var i@13 Word 32 
13 Call 14 COGENT.deep_freeObjInode 3 Var h@12.0 Word 32 Var h@12.1 Word 32 Var mem Mem  2 i@13 Word 32 mem Mem
12 Basic 13 2 h@12.0 Word 32 Var a_fld0@1 Word 32 h@12.1 Word 32 Var TObjInode@10 Word 32 
10 Basic 12 1 TObjInode@10 Word 32 Var TObjPad_missed@5.4 Word 32 
9 Cond 10 11 Op Equals Bool 2 Var TObjPad_missed@5.0 Word 32 Num 0 Word 32 
5 Basic 9 7 TObjPad_missed@5.0 Word 32 Var a_fld1@2.0 Word 32 TObjPad_missed@5.1.0 Word 64 Var a_fld1@2.1.0 Word 64 TObjPad_missed@5.1.1 Word 32 Var a_fld1@2.1.1 Word 32 TObjPad_missed@5.2.0 Word 64 Var a_fld1@2.2.0 Word 64 TObjPad_missed@5.3 Word 32 Var a_fld1@2.3 Word 32 TObjPad_missed@5.4 Word 32 Var a_fld1@2.4 Word 32 TObjPad_missed@5.5 Word 32 Var a_fld1@2.6 Word 32 
8 Basic Ret 4 ret.0 Word 32 Var h@7.0 Word 32 ret.1 Word 32 Var h@7.1 Word 32 ret.2.0 Word 32 Num 0 Word 32 ret.2.1 Word 32 Num 0 Word 32 
7 Basic 8 2 h@7.0 Word 32 Num 0 Word 32 h@7.1 Word 32 Var a_fld0@1 Word 32 
6 Basic 7 1 g@6 Word 32 Var TObjPad@4 Word 32 
4 Basic 6 1 TObjPad@4 Word 32 Var a_fld1@2.5 Word 32 
3 Cond 4 5 Op Equals Bool 2 Var a_fld1@2.0 Word 32 Num 0 Word 32 
2 Basic 3 8 a_fld1@2.0 Word 32 Var a@2.1.0 Word 32 a_fld1@2.1.0 Word 64 Var a@2.1.1.0 Word 64 a_fld1@2.1.1 Word 32 Var a@2.1.1.1 Word 32 a_fld1@2.2.0 Word 64 Var a@2.1.2.0 Word 64 a_fld1@2.3 Word 32 Var a@2.1.3 Word 32 a_fld1@2.4 Word 32 Var a@2.1.4 Word 32 a_fld1@2.5 Word 32 Var a@2.1.5 Word 32 a_fld1@2.6 Word 32 Var a@2.1.6 Word 32 
1 Basic 2 1 a_fld0@1 Word 32 Var a@1.0 Word 32 
EntryPoint 1

Function COGENT.deep_opt_freeObj 5 a@0.0 Word 32 a@0.1.0 Word 32 a@0.1.1 Word 32 a@0.1.2 Word 32 mem Mem 2 ret Word 32 mem Mem
12 Basic Ret 1 ret Word 32 Var j@11 Word 32 
11 Call 12 COGENT.deep_freeObj 3 Var i@10.0 Word 32 Var i@10.1 Word 32 Var mem Mem  2 j@11 Word 32 mem Mem
10 Basic 11 2 i@10.0 Word 32 Var a_fld0@1 Word 32 i@10.1 Word 32 Var g@8 Word 32 
9 Basic 10 1 h@9 Word 32 Num 0 Word 32 
8 Basic 9 1 g@8 Word 32 Var None_missed@5.1 Word 32 
5 Basic 8 2 None_missed@5.0 Word 32 Var a_fld1@2.0 Word 32 None_missed@5.1 Word 32 Var a_fld1@2.2 Word 32 
7 Basic Ret 1 ret Word 32 Var a_fld0@1 Word 32 
6 Basic 7 1 g@6 Word 32 Var None@4 Word 32 
4 Basic 6 1 None@4 Word 32 Var a_fld1@2.1 Word 32 
3 Cond 4 5 Op Equals Bool 2 Var a_fld1@2.0 Word 32 Num 0 Word 32 
2 Basic 3 3 a_fld1@2.0 Word 32 Var a@2.1.0 Word 32 a_fld1@2.1 Word 32 Var a@2.1.1 Word 32 a_fld1@2.2 Word 32 Var a@2.1.2 Word 32 
1 Basic 2 1 a_fld0@1 Word 32 Var a@1.0 Word 32 
EntryPoint 1

Function COGENT.free_opt_obj 5 a@0.0 Word 32 a@0.1.0 Word 32 a@0.1.1 Word 32 a@0.1.2 Word 32 mem Mem 2 ret Word 32 mem Mem
11 Basic Ret 1 ret Word 32 Var i@10 Word 32 
10 Call 11 COGENT.deep_freeObj 3 Var h@9.0 Word 32 Var h@9.1 Word 32 Var mem Mem  2 i@10 Word 32 mem Mem
9 Basic 10 2 h@9.0 Word 32 Var a_fld0@1 Word 32 h@9.1 Word 32 Var g@8 Word 32 
8 Basic 9 1 g@8 Word 32 Var None_missed@5.1 Word 32 
5 Basic 8 2 None_missed@5.0 Word 32 Var a_fld1@2.0 Word 32 None_missed@5.1 Word 32 Var a_fld1@2.2 Word 32 
7 Basic Ret 1 ret Word 32 Var a_fld0@1 Word 32 
6 Basic 7 1 g@6 Word 32 Var None@4 Word 32 
4 Basic 6 1 None@4 Word 32 Var a_fld1@2.1 Word 32 
3 Cond 4 5 Op Equals Bool 2 Var a_fld1@2.0 Word 32 Num 0 Word 32 
2 Basic 3 3 a_fld1@2.0 Word 32 Var a@2.1.0 Word 32 a_fld1@2.1 Word 32 Var a@2.1.1 Word 32 a_fld1@2.2 Word 32 Var a@2.1.2 Word 32 
1 Basic 2 1 a_fld0@1 Word 32 Var a@1.0 Word 32 
EntryPoint 1

Function COGENT.object_eraser 4 a@0.0 Word 32 a@0.1 Word 32 a@0.2 Word 32 mem Mem 5 ret.0 Word 32 ret.1.0 Word 32 ret.1.1 Word 32 ret.1.2 Word 32 mem Mem
10 Basic Ret 4 ret.0 Word 32 Var j@6 Word 32 ret.1.0 Word 32 Var m@9.0 Word 32 ret.1.1 Word 32 Var m@9.1 Word 32 ret.1.2 Word 32 Var m@9.2 Word 32 
9 Basic 10 3 m@9.0 Word 32 Var l@8.0 Word 32 m@9.1 Word 32 Num 0 Word 32 m@9.2 Word 32 Var l@8.1 Word 32 
8 Basic 9 2 l@8.0 Word 32 Num 0 Word 32 l@8.1 Word 32 Var k@7 Word 32 
7 Basic 8 1 k@7 Word 32 Num 0 Word 32 
6 Call 7 COGENT.deep_freeObj 3 Var i@5.0 Word 32 Var i@5.1 Word 32 Var mem Mem  2 j@6 Word 32 mem Mem
5 Basic 6 2 i@5.0 Word 32 Var a_fld1@2 Word 32 i@5.1 Word 32 Var a_fld0@1 Word 32 
4 Basic 5 1 h@4 Word 32 Var a_fld2@3 Word 32 
3 Basic 4 1 a_fld2@3 Word 32 Var a@3.2 Word 32 
2 Basic 3 1 a_fld1@2 Word 32 Var a@2.1 Word 32 
1 Basic 2 1 a_fld0@1 Word 32 Var a@1.0 Word 32 
EntryPoint 1

Function COGENT.set_obj 8 a@0.0.0 Word 32 a@0.0.1 Word 32 a@0.0.2 Word 32 a@0.1.0 Word 32 a@0.1.1.0 Word 32 a@0.1.1.1 Word 32 a@0.1.1.2 Word 32 mem Mem 8 ret.0.0 Word 32 ret.0.1 Word 32 ret.0.2 Word 32 ret.1.0 Word 32 ret.1.1.0 Word 32 ret.1.1.1 Word 32 ret.1.1.2 Word 32 mem Mem
35 Basic Ret 7 ret.0.0 Word 32 Var a_fld0@1.0 Word 32 ret.0.1 Word 32 Var a_fld0@1.1 Word 32 ret.0.2 Word 32 Var a_fld0@1.2 Word 32 ret.1.0 Word 32 Var p@34.0 Word 32 ret.1.1.0 Word 32 Var p@34.1.0 Word 32 ret.1.1.1 Word 32 Var p@34.1.1 Word 32 ret.1.1.2 Word 32 Var p@34.1.2 Word 32 
34 Basic 35 4 p@34.0 Word 32 Var a_fld1_fld0@3 Word 32 p@34.1.0 Word 32 Var o@33.0 Word 32 p@34.1.1 Word 32 Var o@33.1 Word 32 p@34.1.2 Word 32 Var o@33.2 Word 32 
33 Basic 34 3 o@33.0 Word 32 Var n@32.0 Word 32 o@33.1 Word 32 Var n@32.1 Word 32 o@33.2 Word 32 Num 0 Word 32 
32 Basic 33 2 n@32.0 Word 32 Num 0 Word 32 n@32.1 Word 32 Var m@31 Word 32 
31 Basic 32 1 m@31 Word 32 Num 0 Word 32 
30 Basic 31 1 l@30 Word 32 Var k@29 Word 32 
29 Basic 30 1 k@29 Word 32 Var Some_missed@7.1 Word 32 
7 Basic 29 2 Some_missed@7.0 Word 32 Var a_fld1_fld1@4.0 Word 32 Some_missed@7.1 Word 32 Var a_fld1_fld1@4.1 Word 32 
28 Basic Ret 7 ret.0.0 Word 32 Var o@23.0 Word 32 ret.0.1 Word 32 Var o@23.1 Word 32 ret.0.2 Word 32 Var o@23.2 Word 32 ret.1.0 Word 32 Var s@27.0 Word 32 ret.1.1.0 Word 32 Var s@27.1.0 Word 32 ret.1.1.1 Word 32 Var s@27.1.1 Word 32 ret.1.1.2 Word 32 Var s@27.1.2 Word 32 
27 Basic 28 4 s@27.0 Word 32 Var a_fld1_fld0@3 Word 32 s@27.1.0 Word 32 Var r@26.0 Word 32 s@27.1.1 Word 32 Var r@26.1 Word 32 s@27.1.2 Word 32 Var r@26.2 Word 32 
26 Basic 27 3 r@26.0 Word 32 Var q@25.0 Word 32 r@26.1 Word 32 Var q@25.1 Word 32 r@26.2 Word 32 Num 0 Word 32 
25 Basic 26 2 q@25.0 Word 32 Num 0 Word 32 q@25.1 Word 32 Var p@24 Word 32 
24 Basic 25 1 p@24 Word 32 Num 0 Word 32 
23 Basic 24 3 o@23.0 Word 32 Var n@22.0 Word 32 o@23.1 Word 32 Num 0 Word 32 o@23.2 Word 32 Var n@22.1 Word 32 
22 Basic 23 2 n@22.0 Word 32 Num 0 Word 32 n@22.1 Word 32 Var Some@6 Word 32 
21 Basic 22 1 m@21 Word 32 Var l@20 Word 32 
20 Basic 21 1 l@20 Word 32 Var Some_missed@10.1 Word 32 
10 Basic 20 2 Some_missed@10.0 Word 32 Var a_fld0@1.0 Word 32 Some_missed@10.1 Word 32 Var a_fld0@1.1 Word 32 
19 Basic Ret 7 ret.0.0 Word 32 Var o@14.0 Word 32 ret.0.1 Word 32 Var o@14.1 Word 32 ret.0.2 Word 32 Var o@14.2 Word 32 ret.1.0 Word 32 Var s@18.0 Word 32 ret.1.1.0 Word 32 Var s@18.1.0 Word 32 ret.1.1.1 Word 32 Var s@18.1.1 Word 32 ret.1.1.2 Word 32 Var s@18.1.2 Word 32 
18 Basic 19 4 s@18.0 Word 32 Var m@12 Word 32 s@18.1.0 Word 32 Var r@17.0 Word 32 s@18.1.1 Word 32 Var r@17.1 Word 32 s@18.1.2 Word 32 Var r@17.2 Word 32 
17 Basic 18 3 r@17.0 Word 32 Var q@16.0 Word 32 r@17.1 Word 32 Var q@16.1 Word 32 r@17.2 Word 32 Num 0 Word 32 
16 Basic 17 2 q@16.0 Word 32 Num 0 Word 32 q@16.1 Word 32 Var p@15 Word 32 
15 Basic 16 1 p@15 Word 32 Num 0 Word 32 
14 Basic 15 3 o@14.0 Word 32 Var n@13.0 Word 32 o@14.1 Word 32 Num 0 Word 32 o@14.2 Word 32 Var n@13.1 Word 32 
13 Basic 14 2 n@13.0 Word 32 Num 0 Word 32 n@13.1 Word 32 Var Some@6 Word 32 
12 Call 13 COGENT.deep_freeObj 3 Var l@11.0 Word 32 Var l@11.1 Word 32 Var mem Mem  2 m@12 Word 32 mem Mem
11 Basic 12 2 l@11.0 Word 32 Var a_fld1_fld0@3 Word 32 l@11.1 Word 32 Var Some@9 Word 32 
9 Basic 11 1 Some@9 Word 32 Var a_fld0@1.2 Word 32 
8 Cond 9 10 Op Equals Bool 2 Var a_fld0@1.0 Word 32 Num 0 Word 32 
6 Basic 8 1 Some@6 Word 32 Var a_fld1_fld1@4.2 Word 32 
5 Cond 6 7 Op Equals Bool 2 Var a_fld1_fld1@4.0 Word 32 Num 0 Word 32 
4 Basic 5 3 a_fld1_fld1@4.0 Word 32 Var a_fld1@4.1.0 Word 32 a_fld1_fld1@4.1 Word 32 Var a_fld1@4.1.1 Word 32 a_fld1_fld1@4.2 Word 32 Var a_fld1@4.1.2 Word 32 
3 Basic 4 1 a_fld1_fld0@3 Word 32 Var a_fld1@3.0 Word 32 
2 Basic 3 4 a_fld1@2.0 Word 32 Var a@2.1.0 Word 32 a_fld1@2.1.0 Word 32 Var a@2.1.1.0 Word 32 a_fld1@2.1.1 Word 32 Var a@2.1.1.1 Word 32 a_fld1@2.1.2 Word 32 Var a@2.1.1.2 Word 32 
1 Basic 2 3 a_fld0@1.0 Word 32 Var a@1.0.0 Word 32 a_fld0@1.1 Word 32 Var a@1.0.1 Word 32 a_fld0@1.2 Word 32 Var a@1.0.2 Word 32 
EntryPoint 1

Function COGENT.extract_data_from_union 10 a@0.0 Word 32 a@0.1.0 Word 32 a@0.1.1.0 Word 64 a@0.1.1.1 Word 32 a@0.1.2.0 Word 64 a@0.1.3 Word 32 a@0.1.4 Word 32 a@0.1.5 Word 32 a@0.1.6 Word 32 mem Mem 6 ret.0 Word 32 ret.1 Word 32 ret.2.0 Word 32 ret.2.1.0 Word 64 ret.2.1.1 Word 32 mem Mem
38 Basic Ret 5 ret.0 Word 32 Var m@37.0 Word 32 ret.1 Word 32 Num 0 Word 32 ret.2.0 Word 32 Var m@37.1.0 Word 32 ret.2.1.0 Word 64 Var m@37.1.1.0 Word 64 ret.2.1.1 Word 32 Var m@37.1.1.1 Word 32 
37 Basic 38 4 m@37.0 Word 32 Num 0 Word 32 m@37.1.0 Word 32 Var l@36.0 Word 32 m@37.1.1.0 Word 64 Var l@36.1.0 Word 64 m@37.1.1.1 Word 32 Var l@36.1.1 Word 32 
36 Basic 37 3 l@36.0 Word 32 Var a_fld0@1 Word 32 l@36.1.0 Word 64 Var k@35.0 Word 64 l@36.1.1 Word 32 Var k@35.1 Word 32 
35 Basic 36 2 k@35.0 Word 64 Var TObjDentarr_missed@30.1.0 Word 64 k@35.1 Word 32 Var TObjDentarr_missed@30.1.1 Word 32 
30 Basic 35 3 TObjDentarr_missed@30.0 Word 32 Var TObjSuper_missed@23.0 Word 32 TObjDentarr_missed@30.1.0 Word 64 Var TObjSuper_missed@23.1.0 Word 64 TObjDentarr_missed@30.1.1 Word 32 Var TObjSuper_missed@23.1.1 Word 32 
34 Basic Ret 5 ret.0 Word 32 Var m@33.0 Word 32 ret.1 Word 32 Var m@33.1 Word 32 ret.2.0 Word 32 Num 0 Word 32 ret.2.1.0 Word 64 Num 0 Word 64 ret.2.1.1 Word 32 Num 0 Word 32 
33 Basic 34 2 m@33.0 Word 32 Num 0 Word 32 m@33.1 Word 32 Var l@32 Word 32 
32 Call 33 COGENT.deep_freeObjDentarr 3 Var k@31.0 Word 32 Var k@31.1 Word 32 Var mem Mem  2 l@32 Word 32 mem Mem
31 Basic 32 2 k@31.0 Word 32 Var a_fld0@1 Word 32 k@31.1 Word 32 Var TObjDentarr@29 Word 32 
29 Basic 31 1 TObjDentarr@29 Word 32 Var TObjSuper_missed@23.2 Word 32 
28 Cond 29 30 Op Equals Bool 2 Var TObjSuper_missed@23.0 Word 32 Num 0 Word 32 
23 Basic 28 4 TObjSuper_missed@23.0 Word 32 Var TObjDel_missed@18.0 Word 32 TObjSuper_missed@23.1.0 Word 64 Var TObjDel_missed@18.1.0 Word 64 TObjSuper_missed@23.1.1 Word 32 Var TObjDel_missed@18.1.1 Word 32 TObjSuper_missed@23.2 Word 32 Var TObjDel_missed@18.2 Word 32 
27 Basic Ret 5 ret.0 Word 32 Var l@26.0 Word 32 ret.1 Word 32 Var l@26.1 Word 32 ret.2.0 Word 32 Num 0 Word 32 ret.2.1.0 Word 64 Num 0 Word 64 ret.2.1.1 Word 32 Num 0 Word 32 
26 Basic 27 2 l@26.0 Word 32 Num 0 Word 32 l@26.1 Word 32 Var k@25 Word 32 
25 Call 26 COGENT.deep_freeObjSuper 3 Var j@24.0 Word 32 Var j@24.1 Word 32 Var mem Mem  2 k@25 Word 32 mem Mem
24 Basic 25 2 j@24.0 Word 32 Var a_fld0@1 Word 32 j@24.1 Word 32 Var TObjSuper@22 Word 32 
22 Basic 24 1 TObjSuper@22 Word 32 Var TObjDel_missed@18.3 Word 32 
21 Cond 22 23 Op Equals Bool 2 Var TObjDel_missed@18.0 Word 32 Num 0 Word 32 
18 Basic 21 5 TObjDel_missed@18.0 Word 32 Var TObjInode_missed@11.0 Word 32 TObjDel_missed@18.1.0 Word 64 Var TObjInode_missed@11.1.0 Word 64 TObjDel_missed@18.1.1 Word 32 Var TObjInode_missed@11.1.1 Word 32 TObjDel_missed@18.2 Word 32 Var TObjInode_missed@11.3 Word 32 TObjDel_missed@18.3 Word 32 Var TObjInode_missed@11.4 Word 32 
20 Basic Ret 5 ret.0 Word 32 Var i@19.0 Word 32 ret.1 Word 32 Var i@19.1 Word 32 ret.2.0 Word 32 Num 0 Word 32 ret.2.1.0 Word 64 Num 0 Word 64 ret.2.1.1 Word 32 Num 0 Word 32 
19 Basic 20 2 i@19.0 Word 32 Num 0 Word 32 i@19.1 Word 32 Var a_fld0@1 Word 32 
17 Basic 19 1 TObjDel@17.0 Word 64 Var TObjInode_missed@11.2.0 Word 64 
16 Cond 17 18 Op Equals Bool 2 Var TObjInode_missed@11.0 Word 32 Num 0 Word 32 
11 Basic 16 6 TObjInode_missed@11.0 Word 32 Var TObjPad_missed@5.0 Word 32 TObjInode_missed@11.1.0 Word 64 Var TObjPad_missed@5.1.0 Word 64 TObjInode_missed@11.1.1 Word 32 Var TObjPad_missed@5.1.1 Word 32 TObjInode_missed@11.2.0 Word 64 Var TObjPad_missed@5.2.0 Word 64 TObjInode_missed@11.3 Word 32 Var TObjPad_missed@5.3 Word 32 TObjInode_missed@11.4 Word 32 Var TObjPad_missed@5.5 Word 32 
15 Basic Ret 5 ret.0 Word 32 Var j@14.0 Word 32 ret.1 Word 32 Var j@14.1 Word 32 ret.2.0 Word 32 Num 0 Word 32 ret.2.1.0 Word 64 Num 0 Word 64 ret.2.1.1 Word 32 Num 0 Word 32 
14 Basic 15 2 j@14.0 Word 32 Num 0 Word 32 j@14.1 Word 32 Var i@13 Word 32 
13 Call 14 COGENT.deep_freeObjInode 3 Var h@12.0 Word 32 Var h@12.1 Word 32 Var mem Mem  2 i@13 Word 32 mem Mem
12 Basic 13 2 h@12.0 Word 32 Var a_fld0@1 Word 32 h@12.1 Word 32 Var TObjInode@10 Word 32 
10 Basic 12 1 TObjInode@10 Word 32 Var TObjPad_missed@5.4 Word 32 
9 Cond 10 11 Op Equals Bool 2 Var TObjPad_missed@5.0 Word 32 Num 0 Word 32 
5 Basic 9 7 TObjPad_missed@5.0 Word 32 Var a_fld1@2.0 Word 32 TObjPad_missed@5.1.0 Word 64 Var a_fld1@2.1.0 Word 64 TObjPad_missed@5.1.1 Word 32 Var a_fld1@2.1.1 Word 32 TObjPad_missed@5.2.0 Word 64 Var a_fld1@2.2.0 Word 64 TObjPad_missed@5.3 Word 32 Var a_fld1@2.3 Word 32 TObjPad_missed@5.4 Word 32 Var a_fld1@2.4 Word 32 TObjPad_missed@5.5 Word 32 Var a_fld1@2.6 Word 32 
8 Basic Ret 5 ret.0 Word 32 Var h@7.0 Word 32 ret.1 Word 32 Var h@7.1 Word 32 ret.2.0 Word 32 Num 0 Word 32 ret.2.1.0 Word 64 Num 0 Word 64 ret.2.1.1 Word 32 Num 0 Word 32 
7 Basic 8 2 h@7.0 Word 32 Num 0 Word 32 h@7.1 Word 32 Var a_fld0@1 Word 32 
6 Basic 7 1 g@6 Word 32 Var TObjPad@4 Word 32 
4 Basic 6 1 TObjPad@4 Word 32 Var a_fld1@2.5 Word 32 
3 Cond 4 5 Op Equals Bool 2 Var a_fld1@2.0 Word 32 Num 0 Word 32 
2 Basic 3 8 a_fld1@2.0 Word 32 Var a@2.1.0 Word 32 a_fld1@2.1.0 Word 64 Var a@2.1.1.0 Word 64 a_fld1@2.1.1 Word 32 Var a@2.1.1.1 Word 32 a_fld1@2.2.0 Word 64 Var a@2.1.2.0 Word 64 a_fld1@2.3 Word 32 Var a@2.1.3 Word 32 a_fld1@2.4 Word 32 Var a@2.1.4 Word 32 a_fld1@2.5 Word 32 Var a@2.1.5 Word 32 a_fld1@2.6 Word 32 Var a@2.1.6 Word 32 
1 Basic 2 1 a_fld0@1 Word 32 Var a@1.0 Word 32 
EntryPoint 1

Function COGENT.extract_inode_from_union 10 a@0.0 Word 32 a@0.1.0 Word 32 a@0.1.1.0 Word 64 a@0.1.1.1 Word 32 a@0.1.2.0 Word 64 a@0.1.3 Word 32 a@0.1.4 Word 32 a@0.1.5 Word 32 a@0.1.6 Word 32 mem Mem 5 ret.0 Word 32 ret.1 Word 32 ret.2.0 Word 32 ret.2.1 Word 32 mem Mem
38 Basic Ret 4 ret.0 Word 32 Var m@37.0 Word 32 ret.1 Word 32 Num 0 Word 32 ret.2.0 Word 32 Var m@37.1.0 Word 32 ret.2.1 Word 32 Var m@37.1.1 Word 32 
37 Basic 38 3 m@37.0 Word 32 Num 0 Word 32 m@37.1.0 Word 32 Var l@36.0 Word 32 m@37.1.1 Word 32 Var l@36.1 Word 32 
36 Basic 37 2 l@36.0 Word 32 Var a_fld0@1 Word 32 l@36.1 Word 32 Var k@35 Word 32 
35 Basic 36 1 k@35 Word 32 Var TObjDentarr_missed@30.1 Word 32 
30 Basic 35 2 TObjDentarr_missed@30.0 Word 32 Var TObjSuper_missed@23.0 Word 32 TObjDentarr_missed@30.1 Word 32 Var TObjSuper_missed@23.2 Word 32 
34 Basic Ret 4 ret.0 Word 32 Var m@33.0 Word 32 ret.1 Word 32 Var m@33.1 Word 32 ret.2.0 Word 32 Num 0 Word 32 ret.2.1 Word 32 Num 0 Word 32 
33 Basic 34 2 m@33.0 Word 32 Num 0 Word 32 m@33.1 Word 32 Var l@32 Word 32 
32 Call 33 COGENT.deep_freeObjDentarr 3 Var k@31.0 Word 32 Var k@31.1 Word 32 Var mem Mem  2 l@32 Word 32 mem Mem
31 Basic 32 2 k@31.0 Word 32 Var a_fld0@1 Word 32 k@31.1 Word 32 Var TObjDentarr@29 Word 32 
29 Basic 31 1 TObjDentarr@29 Word 32 Var TObjSuper_missed@23.1 Word 32 
28 Cond 29 30 Op Equals Bool 2 Var TObjSuper_missed@23.0 Word 32 Num 0 Word 32 
23 Basic 28 3 TObjSuper_missed@23.0 Word 32 Var TObjDel_missed@18.0 Word 32 TObjSuper_missed@23.1 Word 32 Var TObjDel_missed@18.1 Word 32 TObjSuper_missed@23.2 Word 32 Var TObjDel_missed@18.2 Word 32 
27 Basic Ret 4 ret.0 Word 32 Var l@26.0 Word 32 ret.1 Word 32 Var l@26.1 Word 32 ret.2.0 Word 32 Num 0 Word 32 ret.2.1 Word 32 Num 0 Word 32 
26 Basic 27 2 l@26.0 Word 32 Num 0 Word 32 l@26.1 Word 32 Var k@25 Word 32 
25 Call 26 COGENT.deep_freeObjSuper 3 Var j@24.0 Word 32 Var j@24.1 Word 32 Var mem Mem  2 k@25 Word 32 mem Mem
24 Basic 25 2 j@24.0 Word 32 Var a_fld0@1 Word 32 j@24.1 Word 32 Var TObjSuper@22 Word 32 
22 Basic 24 1 TObjSuper@22 Word 32 Var TObjDel_missed@18.3 Word 32 
21 Cond 22 23 Op Equals Bool 2 Var TObjDel_missed@18.0 Word 32 Num 0 Word 32 
18 Basic 21 4 TObjDel_missed@18.0 Word 32 Var TObjData_missed@11.0 Word 32 TObjDel_missed@18.1 Word 32 Var TObjData_missed@11.2 Word 32 TObjDel_missed@18.2 Word 32 Var TObjData_missed@11.3 Word 32 TObjDel_missed@18.3 Word 32 Var TObjData_missed@11.4 Word 32 
20 Basic Ret 4 ret.0 Word 32 Var i@19.0 Word 32 ret.1 Word 32 Var i@19.1 Word 32 ret.2.0 Word 32 Num 0 Word 32 ret.2.1 Word 32 Num 0 Word 32 
19 Basic 20 2 i@19.0 Word 32 Num 0 Word 32 i@19.1 Word 32 Var a_fld0@1 Word 32 
17 Basic 19 1 TObjDel@17.0 Word 64 Var TObjData_missed@11.1.0 Word 64 
16 Cond 17 18 Op Equals Bool 2 Var TObjData_missed@11.0 Word 32 Num 0 Word 32 
11 Basic 16 5 TObjData_missed@11.0 Word 32 Var TObjPad_missed@5.0 Word 32 TObjData_missed@11.1.0 Word 64 Var TObjPad_missed@5.2.0 Word 64 TObjData_missed@11.2 Word 32 Var TObjPad_missed@5.3 Word 32 TObjData_missed@11.3 Word 32 Var TObjPad_missed@5.4 Word 32 TObjData_missed@11.4 Word 32 Var TObjPad_missed@5.5 Word 32 
15 Basic Ret 4 ret.0 Word 32 Var j@14.0 Word 32 ret.1 Word 32 Var j@14.1 Word 32 ret.2.0 Word 32 Num 0 Word 32 ret.2.1 Word 32 Num 0 Word 32 
14 Basic 15 2 j@14.0 Word 32 Num 0 Word 32 j@14.1 Word 32 Var i@13 Word 32 
13 Call 14 COGENT.deep_freeObjData 4 Var h@12.0 Word 32 Var h@12.1.0 Word 64 Var h@12.1.1 Word 32 Var mem Mem  2 i@13 Word 32 mem Mem
12 Basic 13 3 h@12.0 Word 32 Var a_fld0@1 Word 32 h@12.1.0 Word 64 Var TObjData@10.0 Word 64 h@12.1.1 Word 32 Var TObjData@10.1 Word 32 
10 Basic 12 2 TObjData@10.0 Word 64 Var TObjPad_missed@5.1.0 Word 64 TObjData@10.1 Word 32 Var TObjPad_missed@5.1.1 Word 32 
9 Cond 10 11 Op Equals Bool 2 Var TObjPad_missed@5.0 Word 32 Num 0 Word 32 
5 Basic 9 7 TObjPad_missed@5.0 Word 32 Var a_fld1@2.0 Word 32 TObjPad_missed@5.1.0 Word 64 Var a_fld1@2.1.0 Word 64 TObjPad_missed@5.1.1 Word 32 Var a_fld1@2.1.1 Word 32 TObjPad_missed@5.2.0 Word 64 Var a_fld1@2.2.0 Word 64 TObjPad_missed@5.3 Word 32 Var a_fld1@2.3 Word 32 TObjPad_missed@5.4 Word 32 Var a_fld1@2.4 Word 32 TObjPad_missed@5.5 Word 32 Var a_fld1@2.6 Word 32 
8 Basic Ret 4 ret.0 Word 32 Var h@7.0 Word 32 ret.1 Word 32 Var h@7.1 Word 32 ret.2.0 Word 32 Num 0 Word 32 ret.2.1 Word 32 Num 0 Word 32 
7 Basic 8 2 h@7.0 Word 32 Num 0 Word 32 h@7.1 Word 32 Var a_fld0@1 Word 32 
6 Basic 7 1 g@6 Word 32 Var TObjPad@4 Word 32 
4 Basic 6 1 TObjPad@4 Word 32 Var a_fld1@2.5 Word 32 
3 Cond 4 5 Op Equals Bool 2 Var a_fld1@2.0 Word 32 Num 0 Word 32 
2 Basic 3 8 a_fld1@2.0 Word 32 Var a@2.1.0 Word 32 a_fld1@2.1.0 Word 64 Var a@2.1.1.0 Word 64 a_fld1@2.1.1 Word 32 Var a@2.1.1.1 Word 32 a_fld1@2.2.0 Word 64 Var a@2.1.2.0 Word 64 a_fld1@2.3 Word 32 Var a@2.1.3 Word 32 a_fld1@2.4 Word 32 Var a@2.1.4 Word 32 a_fld1@2.5 Word 32 Var a@2.1.5 Word 32 a_fld1@2.6 Word 32 Var a@2.1.6 Word 32 
1 Basic 2 1 a_fld0@1 Word 32 Var a@1.0 Word 32 
EntryPoint 1

Function COGENT.extract_super_from_union 10 a@0.0 Word 32 a@0.1.0 Word 32 a@0.1.1.0 Word 64 a@0.1.1.1 Word 32 a@0.1.2.0 Word 64 a@0.1.3 Word 32 a@0.1.4 Word 32 a@0.1.5 Word 32 a@0.1.6 Word 32 mem Mem 5 ret.0 Word 32 ret.1 Word 32 ret.2.0 Word 32 ret.2.1 Word 32 mem Mem
38 Basic Ret 4 ret.0 Word 32 Var m@37.0 Word 32 ret.1 Word 32 Num 0 Word 32 ret.2.0 Word 32 Var m@37.1.0 Word 32 ret.2.1 Word 32 Var m@37.1.1 Word 32 
37 Basic 38 3 m@37.0 Word 32 Num 0 Word 32 m@37.1.0 Word 32 Var l@36.0 Word 32 m@37.1.1 Word 32 Var l@36.1 Word 32 
36 Basic 37 2 l@36.0 Word 32 Var a_fld0@1 Word 32 l@36.1 Word 32 Var k@35 Word 32 
35 Basic 36 1 k@35 Word 32 Var TObjDentarr_missed@30.1 Word 32 
30 Basic 35 2 TObjDentarr_missed@30.0 Word 32 Var TObjDel_missed@25.0 Word 32 TObjDentarr_missed@30.1 Word 32 Var TObjDel_missed@25.2 Word 32 
34 Basic Ret 4 ret.0 Word 32 Var m@33.0 Word 32 ret.1 Word 32 Var m@33.1 Word 32 ret.2.0 Word 32 Num 0 Word 32 ret.2.1 Word 32 Num 0 Word 32 
33 Basic 34 2 m@33.0 Word 32 Num 0 Word 32 m@33.1 Word 32 Var l@32 Word 32 
32 Call 33 COGENT.deep_freeObjDentarr 3 Var k@31.0 Word 32 Var k@31.1 Word 32 Var mem Mem  2 l@32 Word 32 mem Mem
31 Basic 32 2 k@31.0 Word 32 Var a_fld0@1 Word 32 k@31.1 Word 32 Var TObjDentarr@29 Word 32 
29 Basic 31 1 TObjDentarr@29 Word 32 Var TObjDel_missed@25.1 Word 32 
28 Cond 29 30 Op Equals Bool 2 Var TObjDel_missed@25.0 Word 32 Num 0 Word 32 
25 Basic 28 3 TObjDel_missed@25.0 Word 32 Var TObjData_missed@18.0 Word 32 TObjDel_missed@25.1 Word 32 Var TObjData_missed@18.2 Word 32 TObjDel_missed@25.2 Word 32 Var TObjData_missed@18.3 Word 32 
27 Basic Ret 4 ret.0 Word 32 Var j@26.0 Word 32 ret.1 Word 32 Var j@26.1 Word 32 ret.2.0 Word 32 Num 0 Word 32 ret.2.1 Word 32 Num 0 Word 32 
26 Basic 27 2 j@26.0 Word 32 Num 0 Word 32 j@26.1 Word 32 Var a_fld0@1 Word 32 
24 Basic 26 1 TObjDel@24.0 Word 64 Var TObjData_missed@18.1.0 Word 64 
23 Cond 24 25 Op Equals Bool 2 Var TObjData_missed@18.0 Word 32 Num 0 Word 32 
18 Basic 23 4 TObjData_missed@18.0 Word 32 Var TObjInode_missed@11.0 Word 32 TObjData_missed@18.1.0 Word 64 Var TObjInode_missed@11.2.0 Word 64 TObjData_missed@18.2 Word 32 Var TObjInode_missed@11.3 Word 32 TObjData_missed@18.3 Word 32 Var TObjInode_missed@11.4 Word 32 
22 Basic Ret 4 ret.0 Word 32 Var k@21.0 Word 32 ret.1 Word 32 Var k@21.1 Word 32 ret.2.0 Word 32 Num 0 Word 32 ret.2.1 Word 32 Num 0 Word 32 
21 Basic 22 2 k@21.0 Word 32 Num 0 Word 32 k@21.1 Word 32 Var j@20 Word 32 
20 Call 21 COGENT.deep_freeObjData 4 Var i@19.0 Word 32 Var i@19.1.0 Word 64 Var i@19.1.1 Word 32 Var mem Mem  2 j@20 Word 32 mem Mem
19 Basic 20 3 i@19.0 Word 32 Var a_fld0@1 Word 32 i@19.1.0 Word 64 Var TObjData@17.0 Word 64 i@19.1.1 Word 32 Var TObjData@17.1 Word 32 
17 Basic 19 2 TObjData@17.0 Word 64 Var TObjInode_missed@11.1.0 Word 64 TObjData@17.1 Word 32 Var TObjInode_missed@11.1.1 Word 32 
16 Cond 17 18 Op Equals Bool 2 Var TObjInode_missed@11.0 Word 32 Num 0 Word 32 
11 Basic 16 6 TObjInode_missed@11.0 Word 32 Var TObjPad_missed@5.0 Word 32 TObjInode_missed@11.1.0 Word 64 Var TObjPad_missed@5.1.0 Word 64 TObjInode_missed@11.1.1 Word 32 Var TObjPad_missed@5.1.1 Word 32 TObjInode_missed@11.2.0 Word 64 Var TObjPad_missed@5.2.0 Word 64 TObjInode_missed@11.3 Word 32 Var TObjPad_missed@5.3 Word 32 TObjInode_missed@11.4 Word 32 Var TObjPad_missed@5.5 Word 32 
15 Basic Ret 4 ret.0 Word 32 Var j@14.0 Word 32 ret.1 Word 32 Var j@14.1 Word 32 ret.2.0 Word 32 Num 0 Word 32 ret.2.1 Word 32 Num 0 Word 32 
14 Basic 15 2 j@14.0 Word 32 Num 0 Word 32 j@14.1 Word 32 Var i@13 Word 32 
13 Call 14 COGENT.deep_freeObjInode 3 Var h@12.0 Word 32 Var h@12.1 Word 32 Var mem Mem  2 i@13 Word 32 mem Mem
12 Basic 13 2 h@12.0 Word 32 Var a_fld0@1 Word 32 h@12.1 Word 32 Var TObjInode@10 Word 32 
10 Basic 12 1 TObjInode@10 Word 32 Var TObjPad_missed@5.4 Word 32 
9 Cond 10 11 Op Equals Bool 2 Var TObjPad_missed@5.0 Word 32 Num 0 Word 32 
5 Basic 9 7 TObjPad_missed@5.0 Word 32 Var a_fld1@2.0 Word 32 TObjPad_missed@5.1.0 Word 64 Var a_fld1@2.1.0 Word 64 TObjPad_missed@5.1.1 Word 32 Var a_fld1@2.1.1 Word 32 TObjPad_missed@5.2.0 Word 64 Var a_fld1@2.2.0 Word 64 TObjPad_missed@5.3 Word 32 Var a_fld1@2.3 Word 32 TObjPad_missed@5.4 Word 32 Var a_fld1@2.4 Word 32 TObjPad_missed@5.5 Word 32 Var a_fld1@2.6 Word 32 
8 Basic Ret 4 ret.0 Word 32 Var h@7.0 Word 32 ret.1 Word 32 Var h@7.1 Word 32 ret.2.0 Word 32 Num 0 Word 32 ret.2.1 Word 32 Num 0 Word 32 
7 Basic 8 2 h@7.0 Word 32 Num 0 Word 32 h@7.1 Word 32 Var a_fld0@1 Word 32 
6 Basic 7 1 g@6 Word 32 Var TObjPad@4 Word 32 
4 Basic 6 1 TObjPad@4 Word 32 Var a_fld1@2.5 Word 32 
3 Cond 4 5 Op Equals Bool 2 Var a_fld1@2.0 Word 32 Num 0 Word 32 
2 Basic 3 8 a_fld1@2.0 Word 32 Var a@2.1.0 Word 32 a_fld1@2.1.0 Word 64 Var a@2.1.1.0 Word 64 a_fld1@2.1.1 Word 32 Var a@2.1.1.1 Word 32 a_fld1@2.2.0 Word 64 Var a@2.1.2.0 Word 64 a_fld1@2.3 Word 32 Var a@2.1.3 Word 32 a_fld1@2.4 Word 32 Var a@2.1.4 Word 32 a_fld1@2.5 Word 32 Var a@2.1.5 Word 32 a_fld1@2.6 Word 32 Var a@2.1.6 Word 32 
1 Basic 2 1 a_fld0@1 Word 32 Var a@1.0 Word 32 
EntryPoint 1

Function COGENT.fsop_dir_release 5 a@0.0 Word 32 a@0.1.0 Word 32 a@0.1.1 Word 32 a@0.1.2 Word 32 mem Mem 2 ret Word 32 mem Mem
15 Basic Ret 1 ret Word 32 Var o@14 Word 32 
14 Call 15 COGENT.freeBilbyFsReaddirContext 3 Var n@13.0 Word 32 Var n@13.1 Word 32 Var mem Mem  2 o@14 Word 32 mem Mem
13 Basic 14 2 n@13.0 Word 32 Var m@12 Word 32 n@13.1 Word 32 Var g@10 Word 32 
12 Call 13 COGENT.deep_freeObjDentarr 3 Var l@11.0 Word 32 Var l@11.1 Word 32 Var mem Mem  2 m@12 Word 32 mem Mem
11 Basic 12 2 l@11.0 Word 32 Var a_fld0@1 Word 32 l@11.1 Word 32 Var g_fld0@9 Word 32 
10 Basic 11 1 g_fld1@10 Word 32 Op MemAcc Word 32 2 Var mem Mem Op Plus Word 32 2 Var g@10 Word 32 Num 4 Word 32   
9 Basic 10 1 g_fld0@9 Word 32 Op MemAcc Word 32 2 Var mem Mem Op Plus Word 32 2 Var g@9 Word 32 Num 0 Word 32   
8 Basic 9 1 g@8 Word 32 Var None_missed@5.1 Word 32 
5 Basic 8 2 None_missed@5.0 Word 32 Var a_fld1@2.0 Word 32 None_missed@5.1 Word 32 Var a_fld1@2.2 Word 32 
7 Basic Ret 1 ret Word 32 Var a_fld0@1 Word 32 
6 Basic 7 1 g@6 Word 32 Var None@4 Word 32 
4 Basic 6 1 None@4 Word 32 Var a_fld1@2.1 Word 32 
3 Cond 4 5 Op Equals Bool 2 Var a_fld1@2.0 Word 32 Num 0 Word 32 
2 Basic 3 3 a_fld1@2.0 Word 32 Var a@2.1.0 Word 32 a_fld1@2.1 Word 32 Var a@2.1.1 Word 32 a_fld1@2.2 Word 32 Var a@2.1.2 Word 32 
1 Basic 2 1 a_fld0@1 Word 32 Var a@1.0 Word 32 
EntryPoint 1

Function COGENT.trimObjSuper 9 a@0.0 Word 32 a@0.1.0 Word 64 a@0.1.1 Word 32 a@0.2.0 Word 64 a@0.3 Word 32 a@0.4 Word 32 a@0.5 Word 32 a@0.6 Word 32 mem Mem 8 ret.0 Word 32 ret.1.0 Word 64 ret.1.1 Word 32 ret.2.0 Word 64 ret.3 Word 32 ret.4 Word 32 ret.5 Word 32 mem Mem
9 Basic Ret 7 ret.0 Word 32 Var d@8.0 Word 32 ret.1.0 Word 64 Var d@8.1.0 Word 64 ret.1.1 Word 32 Var d@8.1.1 Word 32 ret.2.0 Word 64 Var d@8.2.0 Word 64 ret.3 Word 32 Var d@8.3 Word 32 ret.4 Word 32 Var d@8.4 Word 32 ret.5 Word 32 Var d@8.5 Word 32 
8 Basic 9 7 d@8.0 Word 32 Var TObjSuper_missed@4.0 Word 32 d@8.1.0 Word 64 Var TObjSuper_missed@4.1.0 Word 64 d@8.1.1 Word 32 Var TObjSuper_missed@4.1.1 Word 32 d@8.2.0 Word 64 Var TObjSuper_missed@4.2.0 Word 64 d@8.3 Word 32 Var TObjSuper_missed@4.3 Word 32 d@8.4 Word 32 Var TObjSuper_missed@4.4 Word 32 d@8.5 Word 32 Var TObjSuper_missed@4.5 Word 32 
4 Basic 8 7 TObjSuper_missed@4.0 Word 32 Var b@1.0 Word 32 TObjSuper_missed@4.1.0 Word 64 Var b@1.1.0 Word 64 TObjSuper_missed@4.1.1 Word 32 Var b@1.1.1 Word 32 TObjSuper_missed@4.2.0 Word 64 Var b@1.2.0 Word 64 TObjSuper_missed@4.3 Word 32 Var b@1.3 Word 32 TObjSuper_missed@4.4 Word 32 Var b@1.4 Word 32 TObjSuper_missed@4.5 Word 32 Var b@1.5 Word 32 
7 Basic Ret 7 ret.0 Word 32 Var e@6.0 Word 32 ret.1.0 Word 64 Num 0 Word 64 ret.1.1 Word 32 Num 0 Word 32 ret.2.0 Word 64 Num 0 Word 64 ret.3 Word 32 Num 0 Word 32 ret.4 Word 32 Num 0 Word 32 ret.5 Word 32 Var e@6.1 Word 32 
6 Basic 7 2 e@6.0 Word 32 Num 0 Word 32 e@6.1 Word 32 Var d@5 Word 32 
5 Basic 6 1 d@5 Word 32 Num 0 Word 32 
3 Basic 5 1 TObjSuper@3 Word 32 Var b@1.6 Word 32 
2 Cond 3 4 Op Equals Bool 2 Var b@1.0 Word 32 Num 0 Word 32 
1 Basic 2 8 b@1.0 Word 32 Var a@0.0 Word 32 b@1.1.0 Word 64 Var a@0.1.0 Word 64 b@1.1.1 Word 32 Var a@0.1.1 Word 32 b@1.2.0 Word 64 Var a@0.2.0 Word 64 b@1.3 Word 32 Var a@0.3 Word 32 b@1.4 Word 32 Var a@0.4 Word 32 b@1.5 Word 32 Var a@0.5 Word 32 b@1.6 Word 32 Var a@0.6 Word 32 
EntryPoint 1

Function COGENT.deserialise_ObjUnion 6 a@0.0 Word 32 a@0.1 Word 32 a@0.2 Word 32 a@0.3.0 Word 8 a@0.3.1 Word 32 mem Mem 14 ret.0 Word 32 ret.1.0 Word 32 ret.1.1 Word 32 ret.2.0 Word 32 ret.2.1.0 Word 32 ret.2.1.1.0 Word 64 ret.2.1.1.1 Word 32 ret.2.1.2.0 Word 64 ret.2.1.3 Word 32 ret.2.1.4 Word 32 ret.2.1.5 Word 32 ret.2.1.6 Word 32 ret.2.2 Word 32 mem Mem
9 Cond 10 30 Var o@8 Bool
32 Cond 33 53 Var q@31 Bool
55 Cond 56 76 Var s@54 Bool
78 Cond 79 99 Var u@77 Bool
101 Cond 102 122 Var w@100 Bool
141 Basic Ret 13 ret.0 Word 32 Var v12@140.0 Word 32 ret.1.0 Word 32 Num 0 Word 32 ret.1.1 Word 32 Num 0 Word 32 ret.2.0 Word 32 Var v12@140.1.0 Word 32 ret.2.1.0 Word 32 Var v12@140.1.1.0 Word 32 ret.2.1.1.0 Word 64 Var v12@140.1.1.1.0 Word 64 ret.2.1.1.1 Word 32 Var v12@140.1.1.1.1 Word 32 ret.2.1.2.0 Word 64 Var v12@140.1.1.2.0 Word 64 ret.2.1.3 Word 32 Var v12@140.1.1.3 Word 32 ret.2.1.4 Word 32 Var v12@140.1.1.4 Word 32 ret.2.1.5 Word 32 Var v12@140.1.1.5 Word 32 ret.2.1.6 Word 32 Var v12@140.1.1.6 Word 32 ret.2.2 Word 32 Var v12@140.1.2 Word 32 
140 Basic 141 11 v12@140.0 Word 32 Var v11@139.0 Word 32 v12@140.1.0 Word 32 Var v11@139.1.0 Word 32 v12@140.1.1.0 Word 32 Var v11@139.1.1.0 Word 32 v12@140.1.1.1.0 Word 64 Var v11@139.1.1.1.0 Word 64 v12@140.1.1.1.1 Word 32 Var v11@139.1.1.1.1 Word 32 v12@140.1.1.2.0 Word 64 Var v11@139.1.1.2.0 Word 64 v12@140.1.1.3 Word 32 Var v11@139.1.1.3 Word 32 v12@140.1.1.4 Word 32 Var v11@139.1.1.4 Word 32 v12@140.1.1.5 Word 32 Var v11@139.1.1.5 Word 32 v12@140.1.1.6 Word 32 Var v11@139.1.1.6 Word 32 v12@140.1.2 Word 32 Var v11@139.1.2 Word 32 
139 Basic 140 11 v11@139.0 Word 32 Num 0 Word 32 v11@139.1.0 Word 32 Var v10@138.0 Word 32 v11@139.1.1.0 Word 32 Var v10@138.1.0 Word 32 v11@139.1.1.1.0 Word 64 Var v10@138.1.1.0 Word 64 v11@139.1.1.1.1 Word 32 Var v10@138.1.1.1 Word 32 v11@139.1.1.2.0 Word 64 Var v10@138.1.2.0 Word 64 v11@139.1.1.3 Word 32 Var v10@138.1.3 Word 32 v11@139.1.1.4 Word 32 Var v10@138.1.4 Word 32 v11@139.1.1.5 Word 32 Var v10@138.1.5 Word 32 v11@139.1.1.6 Word 32 Var v10@138.1.6 Word 32 v11@139.1.2 Word 32 Var v10@138.2 Word 32 
138 Basic 139 10 v10@138.0 Word 32 Var v1_fld0@133 Word 32 v10@138.1.0 Word 32 Var v9@137.0 Word 32 v10@138.1.1.0 Word 64 Var v9@137.1.0 Word 64 v10@138.1.1.1 Word 32 Var v9@137.1.1 Word 32 v10@138.1.2.0 Word 64 Var v9@137.2.0 Word 64 v10@138.1.3 Word 32 Var v9@137.3 Word 32 v10@138.1.4 Word 32 Var v9@137.4 Word 32 v10@138.1.5 Word 32 Var v9@137.5 Word 32 v10@138.1.6 Word 32 Var v9@137.6 Word 32 v10@138.2 Word 32 Var v1_fld2@135 Word 32 
137 Basic 138 8 v9@137.0 Word 32 Var v8@136.0 Word 32 v9@137.1.0 Word 64 Num 0 Word 64 v9@137.1.1 Word 32 Num 0 Word 32 v9@137.2.0 Word 64 Num 0 Word 64 v9@137.3 Word 32 Num 0 Word 32 v9@137.4 Word 32 Num 0 Word 32 v9@137.5 Word 32 Var v8@136.1 Word 32 v9@137.6 Word 32 Num 0 Word 32 
136 Basic 137 2 v8@136.0 Word 32 Num 0 Word 32 v8@136.1 Word 32 Var v1_fld1@134 Word 32 
135 Basic 136 1 v1_fld2@135 Word 32 Var v1@135.2 Word 32 
134 Basic 135 1 v1_fld1@134 Word 32 Var v1@134.1 Word 32 
133 Basic 134 1 v1_fld0@133 Word 32 Var v1@133.0 Word 32 
132 Basic 133 3 v1@132.0 Word 32 Var Error_missed@126.1.0 Word 32 v1@132.1 Word 32 Var Error_missed@126.1.1 Word 32 v1@132.2 Word 32 Var Error_missed@126.1.2 Word 32 
126 Basic 132 4 Error_missed@126.0 Word 32 Var y@123.0 Word 32 Error_missed@126.1.0 Word 32 Var y@123.2.0 Word 32 Error_missed@126.1.1 Word 32 Var y@123.2.1 Word 32 Error_missed@126.1.2 Word 32 Var y@123.2.2 Word 32 
131 Basic Ret 13 ret.0 Word 32 Var v6@130.0 Word 32 ret.1.0 Word 32 Var v6@130.1.0 Word 32 ret.1.1 Word 32 Var v6@130.1.1 Word 32 ret.2.0 Word 32 Num 0 Word 32 ret.2.1.0 Word 32 Num 0 Word 32 ret.2.1.1.0 Word 64 Num 0 Word 64 ret.2.1.1.1 Word 32 Num 0 Word 32 ret.2.1.2.0 Word 64 Num 0 Word 64 ret.2.1.3 Word 32 Num 0 Word 32 ret.2.1.4 Word 32 Num 0 Word 32 ret.2.1.5 Word 32 Num 0 Word 32 ret.2.1.6 Word 32 Num 0 Word 32 ret.2.2 Word 32 Num 0 Word 32 
130 Basic 131 3 v6@130.0 Word 32 Num 0 Word 32 v6@130.1.0 Word 32 Var v5@129.0 Word 32 v6@130.1.1 Word 32 Var v5@129.1 Word 32 
129 Basic 130 2 v5@129.0 Word 32 Var Error_fld0@127 Word 32 v5@129.1 Word 32 Var Error_fld1@128 Word 32 
128 Basic 129 1 Error_fld1@128 Word 32 Var Error@128.1 Word 32 
127 Basic 128 1 Error_fld0@127 Word 32 Var Error@127.0 Word 32 
125 Basic 127 2 Error@125.0 Word 32 Var y@123.1.0 Word 32 Error@125.1 Word 32 Var y@123.1.1 Word 32 
124 Cond 125 126 Op Equals Bool 2 Var y@123.0 Word 32 Num 0 Word 32 
123 Call 124 COGENT.deserialise_ObjPad 5 Var x@122.0 Word 32 Var x@122.1 Word 32 Var x@122.2 Word 32 Var x@122.3 Word 32 Var mem Mem  7 y@123.0 Word 32 y@123.1.0 Word 32 y@123.1.1 Word 32 y@123.2.0 Word 32 y@123.2.1 Word 32 y@123.2.2 Word 32 mem Mem
122 Basic 123 4 x@122.0 Word 32 Var a_fld0@1 Word 32 x@122.1 Word 32 Var a_fld1@2 Word 32 x@122.2 Word 32 Var a_fld2@3 Word 32 x@122.3 Word 32 Var a_fld3_fld1@6 Word 32 
121 Basic Ret 13 ret.0 Word 32 Var v12@120.0 Word 32 ret.1.0 Word 32 Num 0 Word 32 ret.1.1 Word 32 Num 0 Word 32 ret.2.0 Word 32 Var v12@120.1.0 Word 32 ret.2.1.0 Word 32 Var v12@120.1.1.0 Word 32 ret.2.1.1.0 Word 64 Var v12@120.1.1.1.0 Word 64 ret.2.1.1.1 Word 32 Var v12@120.1.1.1.1 Word 32 ret.2.1.2.0 Word 64 Var v12@120.1.1.2.0 Word 64 ret.2.1.3 Word 32 Var v12@120.1.1.3 Word 32 ret.2.1.4 Word 32 Var v12@120.1.1.4 Word 32 ret.2.1.5 Word 32 Var v12@120.1.1.5 Word 32 ret.2.1.6 Word 32 Var v12@120.1.1.6 Word 32 ret.2.2 Word 32 Var v12@120.1.2 Word 32 
120 Basic 121 11 v12@120.0 Word 32 Var v11@119.0 Word 32 v12@120.1.0 Word 32 Var v11@119.1.0 Word 32 v12@120.1.1.0 Word 32 Var v11@119.1.1.0 Word 32 v12@120.1.1.1.0 Word 64 Var v11@119.1.1.1.0 Word 64 v12@120.1.1.1.1 Word 32 Var v11@119.1.1.1.1 Word 32 v12@120.1.1.2.0 Word 64 Var v11@119.1.1.2.0 Word 64 v12@120.1.1.3 Word 32 Var v11@119.1.1.3 Word 32 v12@120.1.1.4 Word 32 Var v11@119.1.1.4 Word 32 v12@120.1.1.5 Word 32 Var v11@119.1.1.5 Word 32 v12@120.1.1.6 Word 32 Var v11@119.1.1.6 Word 32 v12@120.1.2 Word 32 Var v11@119.1.2 Word 32 
119 Basic 120 11 v11@119.0 Word 32 Num 0 Word 32 v11@119.1.0 Word 32 Var v10@118.0 Word 32 v11@119.1.1.0 Word 32 Var v10@118.1.0 Word 32 v11@119.1.1.1.0 Word 64 Var v10@118.1.1.0 Word 64 v11@119.1.1.1.1 Word 32 Var v10@118.1.1.1 Word 32 v11@119.1.1.2.0 Word 64 Var v10@118.1.2.0 Word 64 v11@119.1.1.3 Word 32 Var v10@118.1.3 Word 32 v11@119.1.1.4 Word 32 Var v10@118.1.4 Word 32 v11@119.1.1.5 Word 32 Var v10@118.1.5 Word 32 v11@119.1.1.6 Word 32 Var v10@118.1.6 Word 32 v11@119.1.2 Word 32 Var v10@118.2 Word 32 
118 Basic 119 10 v10@118.0 Word 32 Var v1_fld0@113 Word 32 v10@118.1.0 Word 32 Var v9@117.0 Word 32 v10@118.1.1.0 Word 64 Var v9@117.1.0 Word 64 v10@118.1.1.1 Word 32 Var v9@117.1.1 Word 32 v10@118.1.2.0 Word 64 Var v9@117.2.0 Word 64 v10@118.1.3 Word 32 Var v9@117.3 Word 32 v10@118.1.4 Word 32 Var v9@117.4 Word 32 v10@118.1.5 Word 32 Var v9@117.5 Word 32 v10@118.1.6 Word 32 Var v9@117.6 Word 32 v10@118.2 Word 32 Var v1_fld2@115 Word 32 
117 Basic 118 8 v9@117.0 Word 32 Var v8@116.0 Word 32 v9@117.1.0 Word 64 Num 0 Word 64 v9@117.1.1 Word 32 Num 0 Word 32 v9@117.2.0 Word 64 Num 0 Word 64 v9@117.3 Word 32 Num 0 Word 32 v9@117.4 Word 32 Num 0 Word 32 v9@117.5 Word 32 Num 0 Word 32 v9@117.6 Word 32 Var v8@116.1 Word 32 
116 Basic 117 2 v8@116.0 Word 32 Num 0 Word 32 v8@116.1 Word 32 Var v1_fld1@114 Word 32 
115 Basic 116 1 v1_fld2@115 Word 32 Var v1@115.2 Word 32 
114 Basic 115 1 v1_fld1@114 Word 32 Var v1@114.1 Word 32 
113 Basic 114 1 v1_fld0@113 Word 32 Var v1@113.0 Word 32 
112 Basic 113 3 v1@112.0 Word 32 Var Error_missed@106.1.0 Word 32 v1@112.1 Word 32 Var Error_missed@106.1.1 Word 32 v1@112.2 Word 32 Var Error_missed@106.1.2 Word 32 
106 Basic 112 4 Error_missed@106.0 Word 32 Var y@103.0 Word 32 Error_missed@106.1.0 Word 32 Var y@103.2.0 Word 32 Error_missed@106.1.1 Word 32 Var y@103.2.1 Word 32 Error_missed@106.1.2 Word 32 Var y@103.2.2 Word 32 
111 Basic Ret 13 ret.0 Word 32 Var v6@110.0 Word 32 ret.1.0 Word 32 Var v6@110.1.0 Word 32 ret.1.1 Word 32 Var v6@110.1.1 Word 32 ret.2.0 Word 32 Num 0 Word 32 ret.2.1.0 Word 32 Num 0 Word 32 ret.2.1.1.0 Word 64 Num 0 Word 64 ret.2.1.1.1 Word 32 Num 0 Word 32 ret.2.1.2.0 Word 64 Num 0 Word 64 ret.2.1.3 Word 32 Num 0 Word 32 ret.2.1.4 Word 32 Num 0 Word 32 ret.2.1.5 Word 32 Num 0 Word 32 ret.2.1.6 Word 32 Num 0 Word 32 ret.2.2 Word 32 Num 0 Word 32 
110 Basic 111 3 v6@110.0 Word 32 Num 0 Word 32 v6@110.1.0 Word 32 Var v5@109.0 Word 32 v6@110.1.1 Word 32 Var v5@109.1 Word 32 
109 Basic 110 2 v5@109.0 Word 32 Var Error_fld0@107 Word 32 v5@109.1 Word 32 Var Error_fld1@108 Word 32 
108 Basic 109 1 Error_fld1@108 Word 32 Var Error@108.1 Word 32 
107 Basic 108 1 Error_fld0@107 Word 32 Var Error@107.0 Word 32 
105 Basic 107 2 Error@105.0 Word 32 Var y@103.1.0 Word 32 Error@105.1 Word 32 Var y@103.1.1 Word 32 
104 Cond 105 106 Op Equals Bool 2 Var y@103.0 Word 32 Num 0 Word 32 
103 Call 104 COGENT.deserialise_ObjSuper 4 Var x@102.0 Word 32 Var x@102.1 Word 32 Var x@102.2 Word 32 Var mem Mem  7 y@103.0 Word 32 y@103.1.0 Word 32 y@103.1.1 Word 32 y@103.2.0 Word 32 y@103.2.1 Word 32 y@103.2.2 Word 32 mem Mem
102 Basic 103 3 x@102.0 Word 32 Var a_fld0@1 Word 32 x@102.1 Word 32 Var a_fld1@2 Word 32 x@102.2 Word 32 Var a_fld2@3 Word 32 
100 Basic 101 1 w@100 Bool Op Equals Bool 2 Var a_fld3_fld0@5 Word 8 Var v@99 Word 8  
99 Basic 100 1 v@99 Word 8 Num 4 Word 8 
98 Basic Ret 13 ret.0 Word 32 Var v10@97.0 Word 32 ret.1.0 Word 32 Num 0 Word 32 ret.1.1 Word 32 Num 0 Word 32 ret.2.0 Word 32 Var v10@97.1.0 Word 32 ret.2.1.0 Word 32 Var v10@97.1.1.0 Word 32 ret.2.1.1.0 Word 64 Var v10@97.1.1.1.0 Word 64 ret.2.1.1.1 Word 32 Var v10@97.1.1.1.1 Word 32 ret.2.1.2.0 Word 64 Var v10@97.1.1.2.0 Word 64 ret.2.1.3 Word 32 Var v10@97.1.1.3 Word 32 ret.2.1.4 Word 32 Var v10@97.1.1.4 Word 32 ret.2.1.5 Word 32 Var v10@97.1.1.5 Word 32 ret.2.1.6 Word 32 Var v10@97.1.1.6 Word 32 ret.2.2 Word 32 Var v10@97.1.2 Word 32 
97 Basic 98 11 v10@97.0 Word 32 Var v9@96.0 Word 32 v10@97.1.0 Word 32 Var v9@96.1.0 Word 32 v10@97.1.1.0 Word 32 Var v9@96.1.1.0 Word 32 v10@97.1.1.1.0 Word 64 Var v9@96.1.1.1.0 Word 64 v10@97.1.1.1.1 Word 32 Var v9@96.1.1.1.1 Word 32 v10@97.1.1.2.0 Word 64 Var v9@96.1.1.2.0 Word 64 v10@97.1.1.3 Word 32 Var v9@96.1.1.3 Word 32 v10@97.1.1.4 Word 32 Var v9@96.1.1.4 Word 32 v10@97.1.1.5 Word 32 Var v9@96.1.1.5 Word 32 v10@97.1.1.6 Word 32 Var v9@96.1.1.6 Word 32 v10@97.1.2 Word 32 Var v9@96.1.2 Word 32 
96 Basic 97 11 v9@96.0 Word 32 Num 0 Word 32 v9@96.1.0 Word 32 Var v8@95.0 Word 32 v9@96.1.1.0 Word 32 Var v8@95.1.0 Word 32 v9@96.1.1.1.0 Word 64 Var v8@95.1.1.0 Word 64 v9@96.1.1.1.1 Word 32 Var v8@95.1.1.1 Word 32 v9@96.1.1.2.0 Word 64 Var v8@95.1.2.0 Word 64 v9@96.1.1.3 Word 32 Var v8@95.1.3 Word 32 v9@96.1.1.4 Word 32 Var v8@95.1.4 Word 32 v9@96.1.1.5 Word 32 Var v8@95.1.5 Word 32 v9@96.1.1.6 Word 32 Var v8@95.1.6 Word 32 v9@96.1.2 Word 32 Var v8@95.2 Word 32 
95 Basic 96 10 v8@95.0 Word 32 Var y_fld0@90 Word 32 v8@95.1.0 Word 32 Var v7@94.0 Word 32 v8@95.1.1.0 Word 64 Var v7@94.1.0 Word 64 v8@95.1.1.1 Word 32 Var v7@94.1.1 Word 32 v8@95.1.2.0 Word 64 Var v7@94.2.0 Word 64 v8@95.1.3 Word 32 Var v7@94.3 Word 32 v8@95.1.4 Word 32 Var v7@94.4 Word 32 v8@95.1.5 Word 32 Var v7@94.5 Word 32 v8@95.1.6 Word 32 Var v7@94.6 Word 32 v8@95.2 Word 32 Var y_fld2@92 Word 32 
94 Basic 95 8 v7@94.0 Word 32 Var v6@93.0 Word 32 v7@94.1.0 Word 64 Num 0 Word 64 v7@94.1.1 Word 32 Num 0 Word 32 v7@94.2.0 Word 64 Var v6@93.1.0 Word 64 v7@94.3 Word 32 Num 0 Word 32 v7@94.4 Word 32 Num 0 Word 32 v7@94.5 Word 32 Num 0 Word 32 v7@94.6 Word 32 Num 0 Word 32 
93 Basic 94 2 v6@93.0 Word 32 Num 0 Word 32 v6@93.1.0 Word 64 Var y_fld1@91.0 Word 64 
92 Basic 93 1 y_fld2@92 Word 32 Var y@92.2 Word 32 
91 Basic 92 1 y_fld1@91.0 Word 64 Var y@91.1.0 Word 64 
90 Basic 91 1 y_fld0@90 Word 32 Var y@90.0 Word 32 
89 Basic 90 3 y@89.0 Word 32 Var Error_missed@83.1.0 Word 32 y@89.1.0 Word 64 Var Error_missed@83.1.1.0 Word 64 y@89.2 Word 32 Var Error_missed@83.1.2 Word 32 
83 Basic 89 4 Error_missed@83.0 Word 32 Var w@80.0 Word 32 Error_missed@83.1.0 Word 32 Var w@80.2.0 Word 32 Error_missed@83.1.1.0 Word 64 Var w@80.2.1.0 Word 64 Error_missed@83.1.2 Word 32 Var w@80.2.2 Word 32 
88 Basic Ret 13 ret.0 Word 32 Var v4@87.0 Word 32 ret.1.0 Word 32 Var v4@87.1.0 Word 32 ret.1.1 Word 32 Var v4@87.1.1 Word 32 ret.2.0 Word 32 Num 0 Word 32 ret.2.1.0 Word 32 Num 0 Word 32 ret.2.1.1.0 Word 64 Num 0 Word 64 ret.2.1.1.1 Word 32 Num 0 Word 32 ret.2.1.2.0 Word 64 Num 0 Word 64 ret.2.1.3 Word 32 Num 0 Word 32 ret.2.1.4 Word 32 Num 0 Word 32 ret.2.1.5 Word 32 Num 0 Word 32 ret.2.1.6 Word 32 Num 0 Word 32 ret.2.2 Word 32 Num 0 Word 32 
87 Basic 88 3 v4@87.0 Word 32 Num 0 Word 32 v4@87.1.0 Word 32 Var v3@86.0 Word 32 v4@87.1.1 Word 32 Var v3@86.1 Word 32 
86 Basic 87 2 v3@86.0 Word 32 Var Error_fld0@84 Word 32 v3@86.1 Word 32 Var Error_fld1@85 Word 32 
85 Basic 86 1 Error_fld1@85 Word 32 Var Error@85.1 Word 32 
84 Basic 85 1 Error_fld0@84 Word 32 Var Error@84.0 Word 32 
82 Basic 84 2 Error@82.0 Word 32 Var w@80.1.0 Word 32 Error@82.1 Word 32 Var w@80.1.1 Word 32 
81 Cond 82 83 Op Equals Bool 2 Var w@80.0 Word 32 Num 0 Word 32 
80 Call 81 COGENT.deserialise_ObjDel 4 Var v@79.0 Word 32 Var v@79.1 Word 32 Var v@79.2 Word 32 Var mem Mem  7 w@80.0 Word 32 w@80.1.0 Word 32 w@80.1.1 Word 32 w@80.2.0 Word 32 w@80.2.1.0 Word 64 w@80.2.2 Word 32 mem Mem
79 Basic 80 3 v@79.0 Word 32 Var a_fld0@1 Word 32 v@79.1 Word 32 Var a_fld1@2 Word 32 v@79.2 Word 32 Var a_fld2@3 Word 32 
77 Basic 78 1 u@77 Bool Op Equals Bool 2 Var a_fld3_fld0@5 Word 8 Var t@76 Word 8  
76 Basic 77 1 t@76 Word 8 Num 3 Word 8 
75 Basic Ret 13 ret.0 Word 32 Var v8@74.0 Word 32 ret.1.0 Word 32 Num 0 Word 32 ret.1.1 Word 32 Num 0 Word 32 ret.2.0 Word 32 Var v8@74.1.0 Word 32 ret.2.1.0 Word 32 Var v8@74.1.1.0 Word 32 ret.2.1.1.0 Word 64 Var v8@74.1.1.1.0 Word 64 ret.2.1.1.1 Word 32 Var v8@74.1.1.1.1 Word 32 ret.2.1.2.0 Word 64 Var v8@74.1.1.2.0 Word 64 ret.2.1.3 Word 32 Var v8@74.1.1.3 Word 32 ret.2.1.4 Word 32 Var v8@74.1.1.4 Word 32 ret.2.1.5 Word 32 Var v8@74.1.1.5 Word 32 ret.2.1.6 Word 32 Var v8@74.1.1.6 Word 32 ret.2.2 Word 32 Var v8@74.1.2 Word 32 
74 Basic 75 11 v8@74.0 Word 32 Var v7@73.0 Word 32 v8@74.1.0 Word 32 Var v7@73.1.0 Word 32 v8@74.1.1.0 Word 32 Var v7@73.1.1.0 Word 32 v8@74.1.1.1.0 Word 64 Var v7@73.1.1.1.0 Word 64 v8@74.1.1.1.1 Word 32 Var v7@73.1.1.1.1 Word 32 v8@74.1.1.2.0 Word 64 Var v7@73.1.1.2.0 Word 64 v8@74.1.1.3 Word 32 Var v7@73.1.1.3 Word 32 v8@74.1.1.4 Word 32 Var v7@73.1.1.4 Word 32 v8@74.1.1.5 Word 32 Var v7@73.1.1.5 Word 32 v8@74.1.1.6 Word 32 Var v7@73.1.1.6 Word 32 v8@74.1.2 Word 32 Var v7@73.1.2 Word 32 
73 Basic 74 11 v7@73.0 Word 32 Num 0 Word 32 v7@73.1.0 Word 32 Var v6@72.0 Word 32 v7@73.1.1.0 Word 32 Var v6@72.1.0 Word 32 v7@73.1.1.1.0 Word 64 Var v6@72.1.1.0 Word 64 v7@73.1.1.1.1 Word 32 Var v6@72.1.1.1 Word 32 v7@73.1.1.2.0 Word 64 Var v6@72.1.2.0 Word 64 v7@73.1.1.3 Word 32 Var v6@72.1.3 Word 32 v7@73.1.1.4 Word 32 Var v6@72.1.4 Word 32 v7@73.1.1.5 Word 32 Var v6@72.1.5 Word 32 v7@73.1.1.6 Word 32 Var v6@72.1.6 Word 32 v7@73.1.2 Word 32 Var v6@72.2 Word 32 
72 Basic 73 10 v6@72.0 Word 32 Var w_fld0@67 Word 32 v6@72.1.0 Word 32 Var v5@71.0 Word 32 v6@72.1.1.0 Word 64 Var v5@71.1.0 Word 64 v6@72.1.1.1 Word 32 Var v5@71.1.1 Word 32 v6@72.1.2.0 Word 64 Var v5@71.2.0 Word 64 v6@72.1.3 Word 32 Var v5@71.3 Word 32 v6@72.1.4 Word 32 Var v5@71.4 Word 32 v6@72.1.5 Word 32 Var v5@71.5 Word 32 v6@72.1.6 Word 32 Var v5@71.6 Word 32 v6@72.2 Word 32 Var w_fld2@69 Word 32 
71 Basic 72 8 v5@71.0 Word 32 Var v4@70.0 Word 32 v5@71.1.0 Word 64 Num 0 Word 64 v5@71.1.1 Word 32 Num 0 Word 32 v5@71.2.0 Word 64 Num 0 Word 64 v5@71.3 Word 32 Var v4@70.1 Word 32 v5@71.4 Word 32 Num 0 Word 32 v5@71.5 Word 32 Num 0 Word 32 v5@71.6 Word 32 Num 0 Word 32 
70 Basic 71 2 v4@70.0 Word 32 Num 0 Word 32 v4@70.1 Word 32 Var w_fld1@68 Word 32 
69 Basic 70 1 w_fld2@69 Word 32 Var w@69.2 Word 32 
68 Basic 69 1 w_fld1@68 Word 32 Var w@68.1 Word 32 
67 Basic 68 1 w_fld0@67 Word 32 Var w@67.0 Word 32 
66 Basic 67 3 w@66.0 Word 32 Var Error_missed@60.1.0 Word 32 w@66.1 Word 32 Var Error_missed@60.1.1 Word 32 w@66.2 Word 32 Var Error_missed@60.1.2 Word 32 
60 Basic 66 4 Error_missed@60.0 Word 32 Var u@57.0 Word 32 Error_missed@60.1.0 Word 32 Var u@57.2.0 Word 32 Error_missed@60.1.1 Word 32 Var u@57.2.1 Word 32 Error_missed@60.1.2 Word 32 Var u@57.2.2 Word 32 
65 Basic Ret 13 ret.0 Word 32 Var v2@64.0 Word 32 ret.1.0 Word 32 Var v2@64.1.0 Word 32 ret.1.1 Word 32 Var v2@64.1.1 Word 32 ret.2.0 Word 32 Num 0 Word 32 ret.2.1.0 Word 32 Num 0 Word 32 ret.2.1.1.0 Word 64 Num 0 Word 64 ret.2.1.1.1 Word 32 Num 0 Word 32 ret.2.1.2.0 Word 64 Num 0 Word 64 ret.2.1.3 Word 32 Num 0 Word 32 ret.2.1.4 Word 32 Num 0 Word 32 ret.2.1.5 Word 32 Num 0 Word 32 ret.2.1.6 Word 32 Num 0 Word 32 ret.2.2 Word 32 Num 0 Word 32 
64 Basic 65 3 v2@64.0 Word 32 Num 0 Word 32 v2@64.1.0 Word 32 Var v1@63.0 Word 32 v2@64.1.1 Word 32 Var v1@63.1 Word 32 
63 Basic 64 2 v1@63.0 Word 32 Var Error_fld0@61 Word 32 v1@63.1 Word 32 Var Error_fld1@62 Word 32 
62 Basic 63 1 Error_fld1@62 Word 32 Var Error@62.1 Word 32 
61 Basic 62 1 Error_fld0@61 Word 32 Var Error@61.0 Word 32 
59 Basic 61 2 Error@59.0 Word 32 Var u@57.1.0 Word 32 Error@59.1 Word 32 Var u@57.1.1 Word 32 
58 Cond 59 60 Op Equals Bool 2 Var u@57.0 Word 32 Num 0 Word 32 
57 Call 58 COGENT.deserialise_ObjDentarr 4 Var t@56.0 Word 32 Var t@56.1 Word 32 Var t@56.2 Word 32 Var mem Mem  7 u@57.0 Word 32 u@57.1.0 Word 32 u@57.1.1 Word 32 u@57.2.0 Word 32 u@57.2.1 Word 32 u@57.2.2 Word 32 mem Mem
56 Basic 57 3 t@56.0 Word 32 Var a_fld0@1 Word 32 t@56.1 Word 32 Var a_fld1@2 Word 32 t@56.2 Word 32 Var a_fld2@3 Word 32 
54 Basic 55 1 s@54 Bool Op Equals Bool 2 Var a_fld3_fld0@5 Word 8 Var r@53 Word 8  
53 Basic 54 1 r@53 Word 8 Num 2 Word 8 
52 Basic Ret 13 ret.0 Word 32 Var v6@51.0 Word 32 ret.1.0 Word 32 Num 0 Word 32 ret.1.1 Word 32 Num 0 Word 32 ret.2.0 Word 32 Var v6@51.1.0 Word 32 ret.2.1.0 Word 32 Var v6@51.1.1.0 Word 32 ret.2.1.1.0 Word 64 Var v6@51.1.1.1.0 Word 64 ret.2.1.1.1 Word 32 Var v6@51.1.1.1.1 Word 32 ret.2.1.2.0 Word 64 Var v6@51.1.1.2.0 Word 64 ret.2.1.3 Word 32 Var v6@51.1.1.3 Word 32 ret.2.1.4 Word 32 Var v6@51.1.1.4 Word 32 ret.2.1.5 Word 32 Var v6@51.1.1.5 Word 32 ret.2.1.6 Word 32 Var v6@51.1.1.6 Word 32 ret.2.2 Word 32 Var v6@51.1.2 Word 32 
51 Basic 52 11 v6@51.0 Word 32 Var v5@50.0 Word 32 v6@51.1.0 Word 32 Var v5@50.1.0 Word 32 v6@51.1.1.0 Word 32 Var v5@50.1.1.0 Word 32 v6@51.1.1.1.0 Word 64 Var v5@50.1.1.1.0 Word 64 v6@51.1.1.1.1 Word 32 Var v5@50.1.1.1.1 Word 32 v6@51.1.1.2.0 Word 64 Var v5@50.1.1.2.0 Word 64 v6@51.1.1.3 Word 32 Var v5@50.1.1.3 Word 32 v6@51.1.1.4 Word 32 Var v5@50.1.1.4 Word 32 v6@51.1.1.5 Word 32 Var v5@50.1.1.5 Word 32 v6@51.1.1.6 Word 32 Var v5@50.1.1.6 Word 32 v6@51.1.2 Word 32 Var v5@50.1.2 Word 32 
50 Basic 51 11 v5@50.0 Word 32 Num 0 Word 32 v5@50.1.0 Word 32 Var v4@49.0 Word 32 v5@50.1.1.0 Word 32 Var v4@49.1.0 Word 32 v5@50.1.1.1.0 Word 64 Var v4@49.1.1.0 Word 64 v5@50.1.1.1.1 Word 32 Var v4@49.1.1.1 Word 32 v5@50.1.1.2.0 Word 64 Var v4@49.1.2.0 Word 64 v5@50.1.1.3 Word 32 Var v4@49.1.3 Word 32 v5@50.1.1.4 Word 32 Var v4@49.1.4 Word 32 v5@50.1.1.5 Word 32 Var v4@49.1.5 Word 32 v5@50.1.1.6 Word 32 Var v4@49.1.6 Word 32 v5@50.1.2 Word 32 Var v4@49.2 Word 32 
49 Basic 50 10 v4@49.0 Word 32 Var u_fld0@44 Word 32 v4@49.1.0 Word 32 Var v3@48.0 Word 32 v4@49.1.1.0 Word 64 Var v3@48.1.0 Word 64 v4@49.1.1.1 Word 32 Var v3@48.1.1 Word 32 v4@49.1.2.0 Word 64 Var v3@48.2.0 Word 64 v4@49.1.3 Word 32 Var v3@48.3 Word 32 v4@49.1.4 Word 32 Var v3@48.4 Word 32 v4@49.1.5 Word 32 Var v3@48.5 Word 32 v4@49.1.6 Word 32 Var v3@48.6 Word 32 v4@49.2 Word 32 Var u_fld2@46 Word 32 
48 Basic 49 8 v3@48.0 Word 32 Var v2@47.0 Word 32 v3@48.1.0 Word 64 Var v2@47.1.0 Word 64 v3@48.1.1 Word 32 Var v2@47.1.1 Word 32 v3@48.2.0 Word 64 Num 0 Word 64 v3@48.3 Word 32 Num 0 Word 32 v3@48.4 Word 32 Num 0 Word 32 v3@48.5 Word 32 Num 0 Word 32 v3@48.6 Word 32 Num 0 Word 32 
47 Basic 48 3 v2@47.0 Word 32 Num 0 Word 32 v2@47.1.0 Word 64 Var u_fld1@45.0 Word 64 v2@47.1.1 Word 32 Var u_fld1@45.1 Word 32 
46 Basic 47 1 u_fld2@46 Word 32 Var u@46.2 Word 32 
45 Basic 46 2 u_fld1@45.0 Word 64 Var u@45.1.0 Word 64 u_fld1@45.1 Word 32 Var u@45.1.1 Word 32 
44 Basic 45 1 u_fld0@44 Word 32 Var u@44.0 Word 32 
43 Basic 44 4 u@43.0 Word 32 Var Error_missed@37.1.0 Word 32 u@43.1.0 Word 64 Var Error_missed@37.1.1.0 Word 64 u@43.1.1 Word 32 Var Error_missed@37.1.1.1 Word 32 u@43.2 Word 32 Var Error_missed@37.1.2 Word 32 
37 Basic 43 5 Error_missed@37.0 Word 32 Var s@34.0 Word 32 Error_missed@37.1.0 Word 32 Var s@34.2.0 Word 32 Error_missed@37.1.1.0 Word 64 Var s@34.2.1.0 Word 64 Error_missed@37.1.1.1 Word 32 Var s@34.2.1.1 Word 32 Error_missed@37.1.2 Word 32 Var s@34.2.2 Word 32 
42 Basic Ret 13 ret.0 Word 32 Var z@41.0 Word 32 ret.1.0 Word 32 Var z@41.1.0 Word 32 ret.1.1 Word 32 Var z@41.1.1 Word 32 ret.2.0 Word 32 Num 0 Word 32 ret.2.1.0 Word 32 Num 0 Word 32 ret.2.1.1.0 Word 64 Num 0 Word 64 ret.2.1.1.1 Word 32 Num 0 Word 32 ret.2.1.2.0 Word 64 Num 0 Word 64 ret.2.1.3 Word 32 Num 0 Word 32 ret.2.1.4 Word 32 Num 0 Word 32 ret.2.1.5 Word 32 Num 0 Word 32 ret.2.1.6 Word 32 Num 0 Word 32 ret.2.2 Word 32 Num 0 Word 32 
41 Basic 42 3 z@41.0 Word 32 Num 0 Word 32 z@41.1.0 Word 32 Var y@40.0 Word 32 z@41.1.1 Word 32 Var y@40.1 Word 32 
40 Basic 41 2 y@40.0 Word 32 Var Error_fld0@38 Word 32 y@40.1 Word 32 Var Error_fld1@39 Word 32 
39 Basic 40 1 Error_fld1@39 Word 32 Var Error@39.1 Word 32 
38 Basic 39 1 Error_fld0@38 Word 32 Var Error@38.0 Word 32 
36 Basic 38 2 Error@36.0 Word 32 Var s@34.1.0 Word 32 Error@36.1 Word 32 Var s@34.1.1 Word 32 
35 Cond 36 37 Op Equals Bool 2 Var s@34.0 Word 32 Num 0 Word 32 
34 Call 35 COGENT.deserialise_ObjData 5 Var r@33.0 Word 32 Var r@33.1 Word 32 Var r@33.2 Word 32 Var r@33.3 Word 32 Var mem Mem  8 s@34.0 Word 32 s@34.1.0 Word 32 s@34.1.1 Word 32 s@34.2.0 Word 32 s@34.2.1.0 Word 64 s@34.2.1.1 Word 32 s@34.2.2 Word 32 mem Mem
33 Basic 34 4 r@33.0 Word 32 Var a_fld0@1 Word 32 r@33.1 Word 32 Var a_fld1@2 Word 32 r@33.2 Word 32 Var a_fld2@3 Word 32 r@33.3 Word 32 Var a_fld3_fld1@6 Word 32 
31 Basic 32 1 q@31 Bool Op Equals Bool 2 Var a_fld3_fld0@5 Word 8 Var p@30 Word 8  
30 Basic 31 1 p@30 Word 8 Num 1 Word 8 
29 Basic Ret 13 ret.0 Word 32 Var v4@28.0 Word 32 ret.1.0 Word 32 Num 0 Word 32 ret.1.1 Word 32 Num 0 Word 32 ret.2.0 Word 32 Var v4@28.1.0 Word 32 ret.2.1.0 Word 32 Var v4@28.1.1.0 Word 32 ret.2.1.1.0 Word 64 Var v4@28.1.1.1.0 Word 64 ret.2.1.1.1 Word 32 Var v4@28.1.1.1.1 Word 32 ret.2.1.2.0 Word 64 Var v4@28.1.1.2.0 Word 64 ret.2.1.3 Word 32 Var v4@28.1.1.3 Word 32 ret.2.1.4 Word 32 Var v4@28.1.1.4 Word 32 ret.2.1.5 Word 32 Var v4@28.1.1.5 Word 32 ret.2.1.6 Word 32 Var v4@28.1.1.6 Word 32 ret.2.2 Word 32 Var v4@28.1.2 Word 32 
28 Basic 29 11 v4@28.0 Word 32 Var v3@27.0 Word 32 v4@28.1.0 Word 32 Var v3@27.1.0 Word 32 v4@28.1.1.0 Word 32 Var v3@27.1.1.0 Word 32 v4@28.1.1.1.0 Word 64 Var v3@27.1.1.1.0 Word 64 v4@28.1.1.1.1 Word 32 Var v3@27.1.1.1.1 Word 32 v4@28.1.1.2.0 Word 64 Var v3@27.1.1.2.0 Word 64 v4@28.1.1.3 Word 32 Var v3@27.1.1.3 Word 32 v4@28.1.1.4 Word 32 Var v3@27.1.1.4 Word 32 v4@28.1.1.5 Word 32 Var v3@27.1.1.5 Word 32 v4@28.1.1.6 Word 32 Var v3@27.1.1.6 Word 32 v4@28.1.2 Word 32 Var v3@27.1.2 Word 32 
27 Basic 28 11 v3@27.0 Word 32 Num 0 Word 32 v3@27.1.0 Word 32 Var v2@26.0 Word 32 v3@27.1.1.0 Word 32 Var v2@26.1.0 Word 32 v3@27.1.1.1.0 Word 64 Var v2@26.1.1.0 Word 64 v3@27.1.1.1.1 Word 32 Var v2@26.1.1.1 Word 32 v3@27.1.1.2.0 Word 64 Var v2@26.1.2.0 Word 64 v3@27.1.1.3 Word 32 Var v2@26.1.3 Word 32 v3@27.1.1.4 Word 32 Var v2@26.1.4 Word 32 v3@27.1.1.5 Word 32 Var v2@26.1.5 Word 32 v3@27.1.1.6 Word 32 Var v2@26.1.6 Word 32 v3@27.1.2 Word 32 Var v2@26.2 Word 32 
26 Basic 27 10 v2@26.0 Word 32 Var s_fld0@21 Word 32 v2@26.1.0 Word 32 Var v1@25.0 Word 32 v2@26.1.1.0 Word 64 Var v1@25.1.0 Word 64 v2@26.1.1.1 Word 32 Var v1@25.1.1 Word 32 v2@26.1.2.0 Word 64 Var v1@25.2.0 Word 64 v2@26.1.3 Word 32 Var v1@25.3 Word 32 v2@26.1.4 Word 32 Var v1@25.4 Word 32 v2@26.1.5 Word 32 Var v1@25.5 Word 32 v2@26.1.6 Word 32 Var v1@25.6 Word 32 v2@26.2 Word 32 Var s_fld2@23 Word 32 
25 Basic 26 8 v1@25.0 Word 32 Var z@24.0 Word 32 v1@25.1.0 Word 64 Num 0 Word 64 v1@25.1.1 Word 32 Num 0 Word 32 v1@25.2.0 Word 64 Num 0 Word 64 v1@25.3 Word 32 Num 0 Word 32 v1@25.4 Word 32 Var z@24.1 Word 32 v1@25.5 Word 32 Num 0 Word 32 v1@25.6 Word 32 Num 0 Word 32 
24 Basic 25 2 z@24.0 Word 32 Num 0 Word 32 z@24.1 Word 32 Var s_fld1@22 Word 32 
23 Basic 24 1 s_fld2@23 Word 32 Var s@23.2 Word 32 
22 Basic 23 1 s_fld1@22 Word 32 Var s@22.1 Word 32 
21 Basic 22 1 s_fld0@21 Word 32 Var s@21.0 Word 32 
20 Basic 21 3 s@20.0 Word 32 Var Error_missed@14.1.0 Word 32 s@20.1 Word 32 Var Error_missed@14.1.1 Word 32 s@20.2 Word 32 Var Error_missed@14.1.2 Word 32 
14 Basic 20 4 Error_missed@14.0 Word 32 Var q@11.0 Word 32 Error_missed@14.1.0 Word 32 Var q@11.2.0 Word 32 Error_missed@14.1.1 Word 32 Var q@11.2.1 Word 32 Error_missed@14.1.2 Word 32 Var q@11.2.2 Word 32 
19 Basic Ret 13 ret.0 Word 32 Var x@18.0 Word 32 ret.1.0 Word 32 Var x@18.1.0 Word 32 ret.1.1 Word 32 Var x@18.1.1 Word 32 ret.2.0 Word 32 Num 0 Word 32 ret.2.1.0 Word 32 Num 0 Word 32 ret.2.1.1.0 Word 64 Num 0 Word 64 ret.2.1.1.1 Word 32 Num 0 Word 32 ret.2.1.2.0 Word 64 Num 0 Word 64 ret.2.1.3 Word 32 Num 0 Word 32 ret.2.1.4 Word 32 Num 0 Word 32 ret.2.1.5 Word 32 Num 0 Word 32 ret.2.1.6 Word 32 Num 0 Word 32 ret.2.2 Word 32 Num 0 Word 32 
18 Basic 19 3 x@18.0 Word 32 Num 0 Word 32 x@18.1.0 Word 32 Var w@17.0 Word 32 x@18.1.1 Word 32 Var w@17.1 Word 32 
17 Basic 18 2 w@17.0 Word 32 Var Error_fld0@15 Word 32 w@17.1 Word 32 Var Error_fld1@16 Word 32 
16 Basic 17 1 Error_fld1@16 Word 32 Var Error@16.1 Word 32 
15 Basic 16 1 Error_fld0@15 Word 32 Var Error@15.0 Word 32 
13 Basic 15 2 Error@13.0 Word 32 Var q@11.1.0 Word 32 Error@13.1 Word 32 Var q@11.1.1 Word 32 
12 Cond 13 14 Op Equals Bool 2 Var q@11.0 Word 32 Num 0 Word 32 
11 Call 12 COGENT.deserialise_ObjInode 4 Var p@10.0 Word 32 Var p@10.1 Word 32 Var p@10.2 Word 32 Var mem Mem  7 q@11.0 Word 32 q@11.1.0 Word 32 q@11.1.1 Word 32 q@11.2.0 Word 32 q@11.2.1 Word 32 q@11.2.2 Word 32 mem Mem
10 Basic 11 3 p@10.0 Word 32 Var a_fld0@1 Word 32 p@10.1 Word 32 Var a_fld1@2 Word 32 p@10.2 Word 32 Var a_fld2@3 Word 32 
8 Basic 9 1 o@8 Bool Op Equals Bool 2 Var a_fld3_fld0@5 Word 8 Var n@7 Word 8  
7 Basic 8 1 n@7 Word 8 Num 0 Word 8 
6 Basic 7 1 a_fld3_fld1@6 Word 32 Var a_fld3@6.1 Word 32 
5 Basic 6 1 a_fld3_fld0@5 Word 8 Var a_fld3@5.0 Word 8 
4 Basic 5 2 a_fld3@4.0 Word 8 Var a@4.3.0 Word 8 a_fld3@4.1 Word 32 Var a@4.3.1 Word 32 
3 Basic 4 1 a_fld2@3 Word 32 Var a@3.2 Word 32 
2 Basic 3 1 a_fld1@2 Word 32 Var a@2.1 Word 32 
1 Basic 2 1 a_fld0@1 Word 32 Var a@1.0 Word 32 
EntryPoint 1

Function COGENT.serialise_size_ObjUnion 9 a@0.0 Word 32 a@0.1.0 Word 64 a@0.1.1 Word 32 a@0.2.0 Word 64 a@0.3 Word 32 a@0.4 Word 32 a@0.5 Word 32 a@0.6 Word 32 mem Mem 2 ret Word 32 mem Mem
29 Basic Ret 1 ret Word 32 Op WordCast Word 32 1 Var i@28 Word 8  
28 Basic 29 1 i@28 Word 8 Num 0 Word 8 
27 Basic 28 1 h@27 Word 32 Var TObjSuper_missed@24.1 Word 32 
24 Basic 27 2 TObjSuper_missed@24.0 Word 32 Var TObjDel_missed@19.0 Word 32 TObjSuper_missed@24.1 Word 32 Var TObjDel_missed@19.1 Word 32 
26 Basic Ret 1 ret Word 32 Var h@25 Word 32 
25 Call 26 COGENT.serialise_size_ObjSuper 2 Var TObjSuper@23 Word 32 Var mem Mem  2 h@25 Word 32 mem Mem
23 Basic 25 1 TObjSuper@23 Word 32 Var TObjDel_missed@19.2 Word 32 
22 Cond 23 24 Op Equals Bool 2 Var TObjDel_missed@19.0 Word 32 Num 0 Word 32 
19 Basic 22 3 TObjDel_missed@19.0 Word 32 Var TObjDentarr_missed@14.0 Word 32 TObjDel_missed@19.1 Word 32 Var TObjDentarr_missed@14.2 Word 32 TObjDel_missed@19.2 Word 32 Var TObjDentarr_missed@14.3 Word 32 
21 Basic Ret 1 ret Word 32 Var g@20 Word 32 
20 Call 21 COGENT.serialise_size_ObjDel 2 Var TObjDel@18.0 Word 64 Var mem Mem  2 g@20 Word 32 mem Mem
18 Basic 20 1 TObjDel@18.0 Word 64 Var TObjDentarr_missed@14.1.0 Word 64 
17 Cond 18 19 Op Equals Bool 2 Var TObjDentarr_missed@14.0 Word 32 Num 0 Word 32 
14 Basic 17 4 TObjDentarr_missed@14.0 Word 32 Var TObjData_missed@9.0 Word 32 TObjDentarr_missed@14.1.0 Word 64 Var TObjData_missed@9.1.0 Word 64 TObjDentarr_missed@14.2 Word 32 Var TObjData_missed@9.3 Word 32 TObjDentarr_missed@14.3 Word 32 Var TObjData_missed@9.4 Word 32 
16 Basic Ret 1 ret Word 32 Var f@15 Word 32 
15 Call 16 COGENT.serialise_size_ObjDentarr 2 Var TObjDentarr@13 Word 32 Var mem Mem  2 f@15 Word 32 mem Mem
13 Basic 15 1 TObjDentarr@13 Word 32 Var TObjData_missed@9.2 Word 32 
12 Cond 13 14 Op Equals Bool 2 Var TObjData_missed@9.0 Word 32 Num 0 Word 32 
9 Basic 12 5 TObjData_missed@9.0 Word 32 Var TObjInode_missed@4.0 Word 32 TObjData_missed@9.1.0 Word 64 Var TObjInode_missed@4.2.0 Word 64 TObjData_missed@9.2 Word 32 Var TObjInode_missed@4.3 Word 32 TObjData_missed@9.3 Word 32 Var TObjInode_missed@4.4 Word 32 TObjData_missed@9.4 Word 32 Var TObjInode_missed@4.5 Word 32 
11 Basic Ret 1 ret Word 32 Var e@10 Word 32 
10 Call 11 COGENT.serialise_size_ObjData 3 Var TObjData@8.0 Word 64 Var TObjData@8.1 Word 32 Var mem Mem  2 e@10 Word 32 mem Mem
8 Basic 10 2 TObjData@8.0 Word 64 Var TObjInode_missed@4.1.0 Word 64 TObjData@8.1 Word 32 Var TObjInode_missed@4.1.1 Word 32 
7 Cond 8 9 Op Equals Bool 2 Var TObjInode_missed@4.0 Word 32 Num 0 Word 32 
4 Basic 7 7 TObjInode_missed@4.0 Word 32 Var b@1.0 Word 32 TObjInode_missed@4.1.0 Word 64 Var b@1.1.0 Word 64 TObjInode_missed@4.1.1 Word 32 Var b@1.1.1 Word 32 TObjInode_missed@4.2.0 Word 64 Var b@1.2.0 Word 64 TObjInode_missed@4.3 Word 32 Var b@1.3 Word 32 TObjInode_missed@4.4 Word 32 Var b@1.5 Word 32 TObjInode_missed@4.5 Word 32 Var b@1.6 Word 32 
6 Basic Ret 1 ret Word 32 Var d@5 Word 32 
5 Call 6 COGENT.serialise_size_ObjInode 2 Var TObjInode@3 Word 32 Var mem Mem  2 d@5 Word 32 mem Mem
3 Basic 5 1 TObjInode@3 Word 32 Var b@1.4 Word 32 
2 Cond 3 4 Op Equals Bool 2 Var b@1.0 Word 32 Num 0 Word 32 
1 Basic 2 8 b@1.0 Word 32 Var a@0.0 Word 32 b@1.1.0 Word 64 Var a@0.1.0 Word 64 b@1.1.1 Word 32 Var a@0.1.1 Word 32 b@1.2.0 Word 64 Var a@0.2.0 Word 64 b@1.3 Word 32 Var a@0.3 Word 32 b@1.4 Word 32 Var a@0.4 Word 32 b@1.5 Word 32 Var a@0.5 Word 32 b@1.6 Word 32 Var a@0.6 Word 32 
EntryPoint 1

Function COGENT.serialise_le16 4 a@0.0 Word 32 a@0.1 Word 32 a@0.2 Word 16 mem Mem 2 ret Word 32 mem Mem
16 Basic Ret 1 ret Word 32 Var s@15 Word 32 
15 Call 16 COGENT.serialise_u8 4 Var r@14.0 Word 32 Var r@14.1 Word 32 Var r@14.2 Word 8 Var mem Mem  2 s@15 Word 32 mem Mem
14 Basic 15 3 r@14.0 Word 32 Var j@6 Word 32 r@14.1 Word 32 Var m@9 Word 32 r@14.2 Word 8 Var q@13 Word 8 
13 Call 14 COGENT.u16_to_u8 2 Var p@12 Word 16 Var mem Mem  2 q@13 Word 8 mem Mem
12 Basic 13 1 p@12 Word 16 Op ShiftRight Word 16 2 Var a_fld2@3 Word 16 Var o@11 Word 16  
11 Basic 12 1 o@11 Word 16 Op WordCast Word 16 1 Var n@10 Word 8  
10 Basic 11 1 n@10 Word 8 Num 8 Word 8 
9 Basic 10 1 m@9 Word 32 Op Plus Word 32 2 Var a_fld1@2 Word 32 Var l@8 Word 32  
8 Basic 9 1 l@8 Word 32 Op WordCast Word 32 1 Var k@7 Word 8  
7 Basic 8 1 k@7 Word 8 Num 1 Word 8 
6 Call 7 COGENT.serialise_u8 4 Var i@5.0 Word 32 Var i@5.1 Word 32 Var i@5.2 Word 8 Var mem Mem  2 j@6 Word 32 mem Mem
5 Basic 6 3 i@5.0 Word 32 Var a_fld0@1 Word 32 i@5.1 Word 32 Var a_fld1@2 Word 32 i@5.2 Word 8 Var h@4 Word 8 
4 Call 5 COGENT.u16_to_u8 2 Var a_fld2@3 Word 16 Var mem Mem  2 h@4 Word 8 mem Mem
3 Basic 4 1 a_fld2@3 Word 16 Var a@3.2 Word 16 
2 Basic 3 1 a_fld1@2 Word 32 Var a@2.1 Word 32 
1 Basic 2 1 a_fld0@1 Word 32 Var a@1.0 Word 32 
EntryPoint 1

Function COGENT.serialise_le32 4 a@0.0 Word 32 a@0.1 Word 32 a@0.2 Word 32 mem Mem 2 ret Word 32 mem Mem
34 Basic Ret 1 ret Word 32 Var v11@33 Word 32 
33 Call 34 COGENT.serialise_u8 4 Var v10@32.0 Word 32 Var v10@32.1 Word 32 Var v10@32.2 Word 8 Var mem Mem  2 v11@33 Word 32 mem Mem
32 Basic 33 3 v10@32.0 Word 32 Var v2@24 Word 32 v10@32.1 Word 32 Var v5@27 Word 32 v10@32.2 Word 8 Var v9@31 Word 8 
31 Call 32 COGENT.u32_to_u8 2 Var v8@30 Word 32 Var mem Mem  2 v9@31 Word 8 mem Mem
30 Basic 31 1 v8@30 Word 32 Op ShiftRight Word 32 2 Var a_fld2@3 Word 32 Var v7@29 Word 32  
29 Basic 30 1 v7@29 Word 32 Op WordCast Word 32 1 Var v6@28 Word 8  
28 Basic 29 1 v6@28 Word 8 Num 24 Word 8 
27 Basic 28 1 v5@27 Word 32 Op Plus Word 32 2 Var a_fld1@2 Word 32 Var v4@26 Word 32  
26 Basic 27 1 v4@26 Word 32 Op WordCast Word 32 1 Var v3@25 Word 8  
25 Basic 26 1 v3@25 Word 8 Num 3 Word 8 
24 Call 25 COGENT.serialise_u8 4 Var v1@23.0 Word 32 Var v1@23.1 Word 32 Var v1@23.2 Word 8 Var mem Mem  2 v2@24 Word 32 mem Mem
23 Basic 24 3 v1@23.0 Word 32 Var s@15 Word 32 v1@23.1 Word 32 Var v@18 Word 32 v1@23.2 Word 8 Var z@22 Word 8 
22 Call 23 COGENT.u32_to_u8 2 Var y@21 Word 32 Var mem Mem  2 z@22 Word 8 mem Mem
21 Basic 22 1 y@21 Word 32 Op ShiftRight Word 32 2 Var a_fld2@3 Word 32 Var x@20 Word 32  
20 Basic 21 1 x@20 Word 32 Op WordCast Word 32 1 Var w@19 Word 8  
19 Basic 20 1 w@19 Word 8 Num 16 Word 8 
18 Basic 19 1 v@18 Word 32 Op Plus Word 32 2 Var a_fld1@2 Word 32 Var u@17 Word 32  
17 Basic 18 1 u@17 Word 32 Op WordCast Word 32 1 Var t@16 Word 8  
16 Basic 17 1 t@16 Word 8 Num 2 Word 8 
15 Call 16 COGENT.serialise_u8 4 Var r@14.0 Word 32 Var r@14.1 Word 32 Var r@14.2 Word 8 Var mem Mem  2 s@15 Word 32 mem Mem
14 Basic 15 3 r@14.0 Word 32 Var j@6 Word 32 r@14.1 Word 32 Var m@9 Word 32 r@14.2 Word 8 Var q@13 Word 8 
13 Call 14 COGENT.u32_to_u8 2 Var p@12 Word 32 Var mem Mem  2 q@13 Word 8 mem Mem
12 Basic 13 1 p@12 Word 32 Op ShiftRight Word 32 2 Var a_fld2@3 Word 32 Var o@11 Word 32  
11 Basic 12 1 o@11 Word 32 Op WordCast Word 32 1 Var n@10 Word 8  
10 Basic 11 1 n@10 Word 8 Num 8 Word 8 
9 Basic 10 1 m@9 Word 32 Op Plus Word 32 2 Var a_fld1@2 Word 32 Var l@8 Word 32  
8 Basic 9 1 l@8 Word 32 Op WordCast Word 32 1 Var k@7 Word 8  
7 Basic 8 1 k@7 Word 8 Num 1 Word 8 
6 Call 7 COGENT.serialise_u8 4 Var i@5.0 Word 32 Var i@5.1 Word 32 Var i@5.2 Word 8 Var mem Mem  2 j@6 Word 32 mem Mem
5 Basic 6 3 i@5.0 Word 32 Var a_fld0@1 Word 32 i@5.1 Word 32 Var a_fld1@2 Word 32 i@5.2 Word 8 Var h@4 Word 8 
4 Call 5 COGENT.u32_to_u8 2 Var a_fld2@3 Word 32 Var mem Mem  2 h@4 Word 8 mem Mem
3 Basic 4 1 a_fld2@3 Word 32 Var a@3.2 Word 32 
2 Basic 3 1 a_fld1@2 Word 32 Var a@2.1 Word 32 
1 Basic 2 1 a_fld0@1 Word 32 Var a@1.0 Word 32 
EntryPoint 1

Function COGENT.serialise_Arr_ObjDentry_f 5 a@0.0 Word 32 a@0.1.0 Word 32 a@0.1.1 Word 32 a@0.2 Word 32 mem Mem 3 ret.0 Word 32 ret.1 Word 32 mem Mem
9 Basic Ret 2 ret.0 Word 32 Var n@8.0 Word 32 ret.1 Word 32 Var n@8.1 Word 32 
8 Call 9 COGENT.serialise_ObjDentry 4 Var m@7.0 Word 32 Var m@7.1 Word 32 Var m@7.2 Word 32 Var mem Mem  3 n@8.0 Word 32 n@8.1 Word 32 mem Mem
7 Basic 8 3 m@7.0 Word 32 Var a_fld1_fld0@3 Word 32 m@7.1 Word 32 Var a_fld1_fld1@4 Word 32 m@7.2 Word 32 Var a_fld0@1 Word 32 
6 Basic 7 1 l@6 Word 32 Var a_fld2@5 Word 32 
5 Basic 6 1 a_fld2@5 Word 32 Var a@5.2 Word 32 
4 Basic 5 1 a_fld1_fld1@4 Word 32 Var a_fld1@4.1 Word 32 
3 Basic 4 1 a_fld1_fld0@3 Word 32 Var a_fld1@3.0 Word 32 
2 Basic 3 2 a_fld1@2.0 Word 32 Var a@2.1.0 Word 32 a_fld1@2.1 Word 32 Var a@2.1.1 Word 32 
1 Basic 2 1 a_fld0@1 Word 32 Var a@1.0 Word 32 
EntryPoint 1

Function COGENT.serialise_le64 4 a@0.0 Word 32 a@0.1 Word 32 a@0.2 Word 64 mem Mem 2 ret Word 32 mem Mem
70 Basic Ret 1 ret Word 32 Var v47@69 Word 32 
69 Call 70 COGENT.serialise_u8 4 Var v46@68.0 Word 32 Var v46@68.1 Word 32 Var v46@68.2 Word 8 Var mem Mem  2 v47@69 Word 32 mem Mem
68 Basic 69 3 v46@68.0 Word 32 Var v38@60 Word 32 v46@68.1 Word 32 Var v41@63 Word 32 v46@68.2 Word 8 Var v45@67 Word 8 
67 Call 68 COGENT.u64_to_u8 2 Var v44@66 Word 64 Var mem Mem  2 v45@67 Word 8 mem Mem
66 Basic 67 1 v44@66 Word 64 Op ShiftRight Word 64 2 Var a_fld2@3 Word 64 Var v43@65 Word 64  
65 Basic 66 1 v43@65 Word 64 Op WordCast Word 64 1 Var v42@64 Word 8  
64 Basic 65 1 v42@64 Word 8 Num 56 Word 8 
63 Basic 64 1 v41@63 Word 32 Op Plus Word 32 2 Var a_fld1@2 Word 32 Var v40@62 Word 32  
62 Basic 63 1 v40@62 Word 32 Op WordCast Word 32 1 Var v39@61 Word 8  
61 Basic 62 1 v39@61 Word 8 Num 7 Word 8 
60 Call 61 COGENT.serialise_u8 4 Var v37@59.0 Word 32 Var v37@59.1 Word 32 Var v37@59.2 Word 8 Var mem Mem  2 v38@60 Word 32 mem Mem
59 Basic 60 3 v37@59.0 Word 32 Var v29@51 Word 32 v37@59.1 Word 32 Var v32@54 Word 32 v37@59.2 Word 8 Var v36@58 Word 8 
58 Call 59 COGENT.u64_to_u8 2 Var v35@57 Word 64 Var mem Mem  2 v36@58 Word 8 mem Mem
57 Basic 58 1 v35@57 Word 64 Op ShiftRight Word 64 2 Var a_fld2@3 Word 64 Var v34@56 Word 64  
56 Basic 57 1 v34@56 Word 64 Op WordCast Word 64 1 Var v33@55 Word 8  
55 Basic 56 1 v33@55 Word 8 Num 48 Word 8 
54 Basic 55 1 v32@54 Word 32 Op Plus Word 32 2 Var a_fld1@2 Word 32 Var v31@53 Word 32  
53 Basic 54 1 v31@53 Word 32 Op WordCast Word 32 1 Var v30@52 Word 8  
52 Basic 53 1 v30@52 Word 8 Num 6 Word 8 
51 Call 52 COGENT.serialise_u8 4 Var v28@50.0 Word 32 Var v28@50.1 Word 32 Var v28@50.2 Word 8 Var mem Mem  2 v29@51 Word 32 mem Mem
50 Basic 51 3 v28@50.0 Word 32 Var v20@42 Word 32 v28@50.1 Word 32 Var v23@45 Word 32 v28@50.2 Word 8 Var v27@49 Word 8 
49 Call 50 COGENT.u64_to_u8 2 Var v26@48 Word 64 Var mem Mem  2 v27@49 Word 8 mem Mem
48 Basic 49 1 v26@48 Word 64 Op ShiftRight Word 64 2 Var a_fld2@3 Word 64 Var v25@47 Word 64  
47 Basic 48 1 v25@47 Word 64 Op WordCast Word 64 1 Var v24@46 Word 8  
46 Basic 47 1 v24@46 Word 8 Num 40 Word 8 
45 Basic 46 1 v23@45 Word 32 Op Plus Word 32 2 Var a_fld1@2 Word 32 Var v22@44 Word 32  
44 Basic 45 1 v22@44 Word 32 Op WordCast Word 32 1 Var v21@43 Word 8  
43 Basic 44 1 v21@43 Word 8 Num 5 Word 8 
42 Call 43 COGENT.serialise_u8 4 Var v19@41.0 Word 32 Var v19@41.1 Word 32 Var v19@41.2 Word 8 Var mem Mem  2 v20@42 Word 32 mem Mem
41 Basic 42 3 v19@41.0 Word 32 Var v11@33 Word 32 v19@41.1 Word 32 Var v14@36 Word 32 v19@41.2 Word 8 Var v18@40 Word 8 
40 Call 41 COGENT.u64_to_u8 2 Var v17@39 Word 64 Var mem Mem  2 v18@40 Word 8 mem Mem
39 Basic 40 1 v17@39 Word 64 Op ShiftRight Word 64 2 Var a_fld2@3 Word 64 Var v16@38 Word 64  
38 Basic 39 1 v16@38 Word 64 Op WordCast Word 64 1 Var v15@37 Word 8  
37 Basic 38 1 v15@37 Word 8 Num 32 Word 8 
36 Basic 37 1 v14@36 Word 32 Op Plus Word 32 2 Var a_fld1@2 Word 32 Var v13@35 Word 32  
35 Basic 36 1 v13@35 Word 32 Op WordCast Word 32 1 Var v12@34 Word 8  
34 Basic 35 1 v12@34 Word 8 Num 4 Word 8 
33 Call 34 COGENT.serialise_u8 4 Var v10@32.0 Word 32 Var v10@32.1 Word 32 Var v10@32.2 Word 8 Var mem Mem  2 v11@33 Word 32 mem Mem
32 Basic 33 3 v10@32.0 Word 32 Var v2@24 Word 32 v10@32.1 Word 32 Var v5@27 Word 32 v10@32.2 Word 8 Var v9@31 Word 8 
31 Call 32 COGENT.u64_to_u8 2 Var v8@30 Word 64 Var mem Mem  2 v9@31 Word 8 mem Mem
30 Basic 31 1 v8@30 Word 64 Op ShiftRight Word 64 2 Var a_fld2@3 Word 64 Var v7@29 Word 64  
29 Basic 30 1 v7@29 Word 64 Op WordCast Word 64 1 Var v6@28 Word 8  
28 Basic 29 1 v6@28 Word 8 Num 24 Word 8 
27 Basic 28 1 v5@27 Word 32 Op Plus Word 32 2 Var a_fld1@2 Word 32 Var v4@26 Word 32  
26 Basic 27 1 v4@26 Word 32 Op WordCast Word 32 1 Var v3@25 Word 8  
25 Basic 26 1 v3@25 Word 8 Num 3 Word 8 
24 Call 25 COGENT.serialise_u8 4 Var v1@23.0 Word 32 Var v1@23.1 Word 32 Var v1@23.2 Word 8 Var mem Mem  2 v2@24 Word 32 mem Mem
23 Basic 24 3 v1@23.0 Word 32 Var s@15 Word 32 v1@23.1 Word 32 Var v@18 Word 32 v1@23.2 Word 8 Var z@22 Word 8 
22 Call 23 COGENT.u64_to_u8 2 Var y@21 Word 64 Var mem Mem  2 z@22 Word 8 mem Mem
21 Basic 22 1 y@21 Word 64 Op ShiftRight Word 64 2 Var a_fld2@3 Word 64 Var x@20 Word 64  
20 Basic 21 1 x@20 Word 64 Op WordCast Word 64 1 Var w@19 Word 8  
19 Basic 20 1 w@19 Word 8 Num 16 Word 8 
18 Basic 19 1 v@18 Word 32 Op Plus Word 32 2 Var a_fld1@2 Word 32 Var u@17 Word 32  
17 Basic 18 1 u@17 Word 32 Op WordCast Word 32 1 Var t@16 Word 8  
16 Basic 17 1 t@16 Word 8 Num 2 Word 8 
15 Call 16 COGENT.serialise_u8 4 Var r@14.0 Word 32 Var r@14.1 Word 32 Var r@14.2 Word 8 Var mem Mem  2 s@15 Word 32 mem Mem
14 Basic 15 3 r@14.0 Word 32 Var j@6 Word 32 r@14.1 Word 32 Var m@9 Word 32 r@14.2 Word 8 Var q@13 Word 8 
13 Call 14 COGENT.u64_to_u8 2 Var p@12 Word 64 Var mem Mem  2 q@13 Word 8 mem Mem
12 Basic 13 1 p@12 Word 64 Op ShiftRight Word 64 2 Var a_fld2@3 Word 64 Var o@11 Word 64  
11 Basic 12 1 o@11 Word 64 Op WordCast Word 64 1 Var n@10 Word 8  
10 Basic 11 1 n@10 Word 8 Num 8 Word 8 
9 Basic 10 1 m@9 Word 32 Op Plus Word 32 2 Var a_fld1@2 Word 32 Var l@8 Word 32  
8 Basic 9 1 l@8 Word 32 Op WordCast Word 32 1 Var k@7 Word 8  
7 Basic 8 1 k@7 Word 8 Num 1 Word 8 
6 Call 7 COGENT.serialise_u8 4 Var i@5.0 Word 32 Var i@5.1 Word 32 Var i@5.2 Word 8 Var mem Mem  2 j@6 Word 32 mem Mem
5 Basic 6 3 i@5.0 Word 32 Var a_fld0@1 Word 32 i@5.1 Word 32 Var a_fld1@2 Word 32 i@5.2 Word 8 Var h@4 Word 8 
4 Call 5 COGENT.u64_to_u8 2 Var a_fld2@3 Word 64 Var mem Mem  2 h@4 Word 8 mem Mem
3 Basic 4 1 a_fld2@3 Word 64 Var a@3.2 Word 64 
2 Basic 3 1 a_fld1@2 Word 32 Var a@2.1 Word 32 
1 Basic 2 1 a_fld0@1 Word 32 Var a@1.0 Word 32 
EntryPoint 1

Function COGENT.serialise_ObjData 6 a@0.0 Word 32 a@0.1 Word 32 a@0.2.0 Word 64 a@0.2.1 Word 32 a@0.3 Word 32 mem Mem 3 ret.0 Word 32 ret.1 Word 32 mem Mem
32 Basic Ret 2 ret.0 Word 32 Var v6@31 Word 32 ret.1 Word 32 Var v5@29 Word 32 
31 Basic 32 2 v6@31 Word 32 Var v4@27 Word 32 mem Mem Op MemUpdate Mem 3 Var mem Mem Op Plus Word 32 2 Var v4@27 Word 32 Num 4 Word 32  Var s@15 Word 32  
29 Basic 31 1 v5@29 Word 32 Var ret Word 32 
30 Basic 29 1 ret Word 32 Op MemAcc Word 32 2 Var mem Mem Op Plus Word 32 2 Var v4@27 Word 32 Num 4 Word 32   
28 Basic 30 0 
27 Call 28 COGENT.serialise_wordarray_U8 4 Var v3@26.0 Word 32 Var v3@26.1 Word 32 Var v3@26.2 Word 32 Var mem Mem  2 v4@27 Word 32 mem Mem
26 Basic 27 3 v3@26.0 Word 32 Var x@21 Word 32 v3@26.1 Word 32 Var v1@24 Word 32 v3@26.2 Word 32 Var v2@25 Word 32 
25 Basic 26 1 v2@25 Word 32 Var a_fld2@3.1 Word 32 
24 Basic 25 1 v1@24 Word 32 Op Plus Word 32 2 Var a_fld1@2 Word 32 Var z@23 Word 32  
23 Basic 24 1 z@23 Word 32 Op WordCast Word 32 1 Var y@22 Word 8  
22 Basic 23 1 y@22 Word 8 Num 8 Word 8 
21 Basic 22 2 x@21 Word 32 Var r@13 Word 32 mem Mem Op MemUpdate Mem 3 Var mem Mem Op Plus Word 32 2 Var r@13 Word 32 Num 4 Word 32  Var w@20 Word 32  
20 Basic 21 1 w@20 Word 32 Op Plus Word 32 2 Var v@19 Word 32 Var o@10 Word 32  
19 Basic 20 1 v@19 Word 32 Op Plus Word 32 2 Var a_fld1@2 Word 32 Var u@18 Word 32  
18 Basic 19 1 u@18 Word 32 Op WordCast Word 32 1 Var t@17 Word 8  
17 Basic 18 1 t@17 Word 8 Num 8 Word 8 
15 Basic 17 1 s@15 Word 32 Var ret Word 32 
16 Basic 15 1 ret Word 32 Op MemAcc Word 32 2 Var mem Mem Op Plus Word 32 2 Var r@13 Word 32 Num 4 Word 32   
14 Basic 16 0 
13 Call 14 COGENT.serialise_le64 4 Var q@12.0 Word 32 Var q@12.1 Word 32 Var q@12.2 Word 64 Var mem Mem  2 r@13 Word 32 mem Mem
12 Basic 13 3 q@12.0 Word 32 Var a_fld0@1 Word 32 q@12.1 Word 32 Var a_fld1@2 Word 32 q@12.2 Word 64 Var p@11 Word 64 
11 Basic 12 1 p@11 Word 64 Var a_fld2@3.0 Word 64 
10 Basic 11 1 o@10 Word 32 Op Minus Word 32 2 Var l@7 Word 32 Var n@9 Word 32  
9 Basic 10 1 n@9 Word 32 Op WordCast Word 32 1 Var m@8 Word 8  
8 Basic 9 1 m@8 Word 8 Num 8 Word 8 
7 Basic 8 1 l@7 Word 32 Op Minus Word 32 2 Var a_fld3@4 Word 32 Var k@6 Word 32  
6 Basic 7 1 k@6 Word 32 Op WordCast Word 32 1 Var j@5 Word 8  
5 Basic 6 1 j@5 Word 8 Num 24 Word 8 
4 Basic 5 1 a_fld3@4 Word 32 Var a@4.3 Word 32 
3 Basic 4 2 a_fld2@3.0 Word 64 Var a@3.2.0 Word 64 a_fld2@3.1 Word 32 Var a@3.2.1 Word 32 
2 Basic 3 1 a_fld1@2 Word 32 Var a@2.1 Word 32 
1 Basic 2 1 a_fld0@1 Word 32 Var a@1.0 Word 32 
EntryPoint 1

Function COGENT.serialise_ObjDel 4 a@0.0 Word 32 a@0.1 Word 32 a@0.2.0 Word 64 mem Mem 3 ret.0 Word 32 ret.1 Word 32 mem Mem
10 Basic Ret 2 ret.0 Word 32 Var j@6 Word 32 ret.1 Word 32 Var m@9 Word 32 
9 Basic 10 1 m@9 Word 32 Op Plus Word 32 2 Var a_fld1@2 Word 32 Var l@8 Word 32  
8 Basic 9 1 l@8 Word 32 Op WordCast Word 32 1 Var k@7 Word 8  
7 Basic 8 1 k@7 Word 8 Num 8 Word 8 
6 Call 7 COGENT.serialise_le64 4 Var i@5.0 Word 32 Var i@5.1 Word 32 Var i@5.2 Word 64 Var mem Mem  2 j@6 Word 32 mem Mem
5 Basic 6 3 i@5.0 Word 32 Var a_fld0@1 Word 32 i@5.1 Word 32 Var a_fld1@2 Word 32 i@5.2 Word 64 Var h@4 Word 64 
4 Basic 5 1 h@4 Word 64 Var a_fld2@3.0 Word 64 
3 Basic 4 1 a_fld2@3.0 Word 64 Var a@3.2.0 Word 64 
2 Basic 3 1 a_fld1@2 Word 32 Var a@2.1 Word 32 
1 Basic 2 1 a_fld0@1 Word 32 Var a@1.0 Word 32 
EntryPoint 1

Function COGENT.serialise_ObjSuper 4 a@0.0 Word 32 a@0.1 Word 32 a@0.2 Word 32 mem Mem 3 ret.0 Word 32 ret.1 Word 32 mem Mem
58 Basic Ret 2 ret.0 Word 32 Var v32@54 Word 32 ret.1 Word 32 Var v35@57 Word 32 
57 Basic 58 1 v35@57 Word 32 Op Plus Word 32 2 Var a_fld1@2 Word 32 Var v34@56 Word 32  
56 Basic 57 1 v34@56 Word 32 Op WordCast Word 32 1 Var v33@55 Word 8  
55 Basic 56 1 v33@55 Word 8 Num 40 Word 8 
54 Call 55 COGENT.serialise_le64 4 Var v31@53.0 Word 32 Var v31@53.1 Word 32 Var v31@53.2 Word 64 Var mem Mem  2 v32@54 Word 32 mem Mem
53 Basic 54 3 v31@53.0 Word 32 Var v26@48 Word 32 v31@53.1 Word 32 Var v29@51 Word 32 v31@53.2 Word 64 Var v30@52 Word 64 
52 Basic 53 1 v30@52 Word 64 Op MemAcc Word 64 2 Var mem Mem Op Plus Word 32 2 Var a_fld2@3 Word 32 Num 32 Word 32   
51 Basic 52 1 v29@51 Word 32 Op Plus Word 32 2 Var a_fld1@2 Word 32 Var v28@50 Word 32  
50 Basic 51 1 v28@50 Word 32 Op WordCast Word 32 1 Var v27@49 Word 8  
49 Basic 50 1 v27@49 Word 8 Num 32 Word 8 
48 Call 49 COGENT.serialise_le32 4 Var v25@47.0 Word 32 Var v25@47.1 Word 32 Var v25@47.2 Word 32 Var mem Mem  2 v26@48 Word 32 mem Mem
47 Basic 48 3 v25@47.0 Word 32 Var v20@42 Word 32 v25@47.1 Word 32 Var v23@45 Word 32 v25@47.2 Word 32 Var v24@46 Word 32 
46 Basic 47 1 v24@46 Word 32 Op MemAcc Word 32 2 Var mem Mem Op Plus Word 32 2 Var a_fld2@3 Word 32 Num 28 Word 32   
45 Basic 46 1 v23@45 Word 32 Op Plus Word 32 2 Var a_fld1@2 Word 32 Var v22@44 Word 32  
44 Basic 45 1 v22@44 Word 32 Op WordCast Word 32 1 Var v21@43 Word 8  
43 Basic 44 1 v21@43 Word 8 Num 28 Word 8 
42 Call 43 COGENT.serialise_le32 4 Var v19@41.0 Word 32 Var v19@41.1 Word 32 Var v19@41.2 Word 32 Var mem Mem  2 v20@42 Word 32 mem Mem
41 Basic 42 3 v19@41.0 Word 32 Var v14@36 Word 32 v19@41.1 Word 32 Var v17@39 Word 32 v19@41.2 Word 32 Var v18@40 Word 32 
40 Basic 41 1 v18@40 Word 32 Op MemAcc Word 32 2 Var mem Mem Op Plus Word 32 2 Var a_fld2@3 Word 32 Num 24 Word 32   
39 Basic 40 1 v17@39 Word 32 Op Plus Word 32 2 Var a_fld1@2 Word 32 Var v16@38 Word 32  
38 Basic 39 1 v16@38 Word 32 Op WordCast Word 32 1 Var v15@37 Word 8  
37 Basic 38 1 v15@37 Word 8 Num 24 Word 8 
36 Call 37 COGENT.serialise_le32 4 Var v13@35.0 Word 32 Var v13@35.1 Word 32 Var v13@35.2 Word 32 Var mem Mem  2 v14@36 Word 32 mem Mem
35 Basic 36 3 v13@35.0 Word 32 Var v8@30 Word 32 v13@35.1 Word 32 Var v11@33 Word 32 v13@35.2 Word 32 Var v12@34 Word 32 
34 Basic 35 1 v12@34 Word 32 Op MemAcc Word 32 2 Var mem Mem Op Plus Word 32 2 Var a_fld2@3 Word 32 Num 20 Word 32   
33 Basic 34 1 v11@33 Word 32 Op Plus Word 32 2 Var a_fld1@2 Word 32 Var v10@32 Word 32  
32 Basic 33 1 v10@32 Word 32 Op WordCast Word 32 1 Var v9@31 Word 8  
31 Basic 32 1 v9@31 Word 8 Num 20 Word 8 
30 Call 31 COGENT.serialise_le32 4 Var v7@29.0 Word 32 Var v7@29.1 Word 32 Var v7@29.2 Word 32 Var mem Mem  2 v8@30 Word 32 mem Mem
29 Basic 30 3 v7@29.0 Word 32 Var v2@24 Word 32 v7@29.1 Word 32 Var v5@27 Word 32 v7@29.2 Word 32 Var v6@28 Word 32 
28 Basic 29 1 v6@28 Word 32 Op MemAcc Word 32 2 Var mem Mem Op Plus Word 32 2 Var a_fld2@3 Word 32 Num 16 Word 32   
27 Basic 28 1 v5@27 Word 32 Op Plus Word 32 2 Var a_fld1@2 Word 32 Var v4@26 Word 32  
26 Basic 27 1 v4@26 Word 32 Op WordCast Word 32 1 Var v3@25 Word 8  
25 Basic 26 1 v3@25 Word 8 Num 16 Word 8 
24 Call 25 COGENT.serialise_le32 4 Var v1@23.0 Word 32 Var v1@23.1 Word 32 Var v1@23.2 Word 32 Var mem Mem  2 v2@24 Word 32 mem Mem
23 Basic 24 3 v1@23.0 Word 32 Var v@18 Word 32 v1@23.1 Word 32 Var y@21 Word 32 v1@23.2 Word 32 Var z@22 Word 32 
22 Basic 23 1 z@22 Word 32 Op MemAcc Word 32 2 Var mem Mem Op Plus Word 32 2 Var a_fld2@3 Word 32 Num 12 Word 32   
21 Basic 22 1 y@21 Word 32 Op Plus Word 32 2 Var a_fld1@2 Word 32 Var x@20 Word 32  
20 Basic 21 1 x@20 Word 32 Op WordCast Word 32 1 Var w@19 Word 8  
19 Basic 20 1 w@19 Word 8 Num 12 Word 8 
18 Call 19 COGENT.serialise_le32 4 Var u@17.0 Word 32 Var u@17.1 Word 32 Var u@17.2 Word 32 Var mem Mem  2 v@18 Word 32 mem Mem
17 Basic 18 3 u@17.0 Word 32 Var p@12 Word 32 u@17.1 Word 32 Var s@15 Word 32 u@17.2 Word 32 Var t@16 Word 32 
16 Basic 17 1 t@16 Word 32 Op MemAcc Word 32 2 Var mem Mem Op Plus Word 32 2 Var a_fld2@3 Word 32 Num 8 Word 32   
15 Basic 16 1 s@15 Word 32 Op Plus Word 32 2 Var a_fld1@2 Word 32 Var r@14 Word 32  
14 Basic 15 1 r@14 Word 32 Op WordCast Word 32 1 Var q@13 Word 8  
13 Basic 14 1 q@13 Word 8 Num 8 Word 8 
12 Call 13 COGENT.serialise_le32 4 Var o@11.0 Word 32 Var o@11.1 Word 32 Var o@11.2 Word 32 Var mem Mem  2 p@12 Word 32 mem Mem
11 Basic 12 3 o@11.0 Word 32 Var j@6 Word 32 o@11.1 Word 32 Var m@9 Word 32 o@11.2 Word 32 Var n@10 Word 32 
10 Basic 11 1 n@10 Word 32 Op MemAcc Word 32 2 Var mem Mem Op Plus Word 32 2 Var a_fld2@3 Word 32 Num 4 Word 32   
9 Basic 10 1 m@9 Word 32 Op Plus Word 32 2 Var a_fld1@2 Word 32 Var l@8 Word 32  
8 Basic 9 1 l@8 Word 32 Op WordCast Word 32 1 Var k@7 Word 8  
7 Basic 8 1 k@7 Word 8 Num 4 Word 8 
6 Call 7 COGENT.serialise_le32 4 Var i@5.0 Word 32 Var i@5.1 Word 32 Var i@5.2 Word 32 Var mem Mem  2 j@6 Word 32 mem Mem
5 Basic 6 3 i@5.0 Word 32 Var a_fld0@1 Word 32 i@5.1 Word 32 Var a_fld1@2 Word 32 i@5.2 Word 32 Var h@4 Word 32 
4 Basic 5 1 h@4 Word 32 Op MemAcc Word 32 2 Var mem Mem Op Plus Word 32 2 Var a_fld2@3 Word 32 Num 0 Word 32   
3 Basic 4 1 a_fld2@3 Word 32 Var a@3.2 Word 32 
2 Basic 3 1 a_fld1@2 Word 32 Var a@2.1 Word 32 
1 Basic 2 1 a_fld0@1 Word 32 Var a@1.0 Word 32 
EntryPoint 1

Function COGENT.serialise_ObjUnion 12 a@0.0 Word 32 a@0.1 Word 32 a@0.2.0 Word 32 a@0.2.1.0 Word 64 a@0.2.1.1 Word 32 a@0.2.2.0 Word 64 a@0.2.3 Word 32 a@0.2.4 Word 32 a@0.2.5 Word 32 a@0.2.6 Word 32 a@0.3 Word 32 mem Mem 3 ret.0 Word 32 ret.1 Word 32 mem Mem
39 Basic Ret 2 ret.0 Word 32 Var r@38.0 Word 32 ret.1 Word 32 Var r@38.1 Word 32 
38 Call 39 COGENT.serialise_ObjPad 4 Var q@37.0 Word 32 Var q@37.1 Word 32 Var q@37.2 Word 32 Var mem Mem  3 r@38.0 Word 32 r@38.1 Word 32 mem Mem
37 Basic 38 3 q@37.0 Word 32 Var a_fld0@1 Word 32 q@37.1 Word 32 Var a_fld1@2 Word 32 q@37.2 Word 32 Var a_fld3@4 Word 32 
36 Basic 37 1 p@36 Word 32 Var o@35 Word 32 
35 Basic 36 1 o@35 Word 32 Var TObjSuper_missed@31.1 Word 32 
31 Basic 35 2 TObjSuper_missed@31.0 Word 32 Var TObjDel_missed@25.0 Word 32 TObjSuper_missed@31.1 Word 32 Var TObjDel_missed@25.1 Word 32 
34 Basic Ret 2 ret.0 Word 32 Var p@33.0 Word 32 ret.1 Word 32 Var p@33.1 Word 32 
33 Call 34 COGENT.serialise_ObjSuper 4 Var o@32.0 Word 32 Var o@32.1 Word 32 Var o@32.2 Word 32 Var mem Mem  3 p@33.0 Word 32 p@33.1 Word 32 mem Mem
32 Basic 33 3 o@32.0 Word 32 Var a_fld0@1 Word 32 o@32.1 Word 32 Var a_fld1@2 Word 32 o@32.2 Word 32 Var TObjSuper@30 Word 32 
30 Basic 32 1 TObjSuper@30 Word 32 Var TObjDel_missed@25.2 Word 32 
29 Cond 30 31 Op Equals Bool 2 Var TObjDel_missed@25.0 Word 32 Num 0 Word 32 
25 Basic 29 3 TObjDel_missed@25.0 Word 32 Var TObjData_missed@19.0 Word 32 TObjDel_missed@25.1 Word 32 Var TObjData_missed@19.2 Word 32 TObjDel_missed@25.2 Word 32 Var TObjData_missed@19.3 Word 32 
28 Basic Ret 2 ret.0 Word 32 Var o@27.0 Word 32 ret.1 Word 32 Var o@27.1 Word 32 
27 Call 28 COGENT.serialise_ObjDel 4 Var n@26.0 Word 32 Var n@26.1 Word 32 Var n@26.2.0 Word 64 Var mem Mem  3 o@27.0 Word 32 o@27.1 Word 32 mem Mem
26 Basic 27 3 n@26.0 Word 32 Var a_fld0@1 Word 32 n@26.1 Word 32 Var a_fld1@2 Word 32 n@26.2.0 Word 64 Var TObjDel@24.0 Word 64 
24 Basic 26 1 TObjDel@24.0 Word 64 Var TObjData_missed@19.1.0 Word 64 
23 Cond 24 25 Op Equals Bool 2 Var TObjData_missed@19.0 Word 32 Num 0 Word 32 
19 Basic 23 4 TObjData_missed@19.0 Word 32 Var TObjInode_missed@13.0 Word 32 TObjData_missed@19.1.0 Word 64 Var TObjInode_missed@13.2.0 Word 64 TObjData_missed@19.2 Word 32 Var TObjInode_missed@13.3 Word 32 TObjData_missed@19.3 Word 32 Var TObjInode_missed@13.4 Word 32 
22 Basic Ret 2 ret.0 Word 32 Var n@21.0 Word 32 ret.1 Word 32 Var n@21.1 Word 32 
21 Call 22 COGENT.serialise_ObjData 6 Var m@20.0 Word 32 Var m@20.1 Word 32 Var m@20.2.0 Word 64 Var m@20.2.1 Word 32 Var m@20.3 Word 32 Var mem Mem  3 n@21.0 Word 32 n@21.1 Word 32 mem Mem
20 Basic 21 5 m@20.0 Word 32 Var a_fld0@1 Word 32 m@20.1 Word 32 Var a_fld1@2 Word 32 m@20.2.0 Word 64 Var TObjData@18.0 Word 64 m@20.2.1 Word 32 Var TObjData@18.1 Word 32 m@20.3 Word 32 Var a_fld3@4 Word 32 
18 Basic 20 2 TObjData@18.0 Word 64 Var TObjInode_missed@13.1.0 Word 64 TObjData@18.1 Word 32 Var TObjInode_missed@13.1.1 Word 32 
17 Cond 18 19 Op Equals Bool 2 Var TObjInode_missed@13.0 Word 32 Num 0 Word 32 
13 Basic 17 6 TObjInode_missed@13.0 Word 32 Var TObjDentarr_missed@7.0 Word 32 TObjInode_missed@13.1.0 Word 64 Var TObjDentarr_missed@7.1.0 Word 64 TObjInode_missed@13.1.1 Word 32 Var TObjDentarr_missed@7.1.1 Word 32 TObjInode_missed@13.2.0 Word 64 Var TObjDentarr_missed@7.2.0 Word 64 TObjInode_missed@13.3 Word 32 Var TObjDentarr_missed@7.4 Word 32 TObjInode_missed@13.4 Word 32 Var TObjDentarr_missed@7.5 Word 32 
16 Basic Ret 2 ret.0 Word 32 Var m@15.0 Word 32 ret.1 Word 32 Var m@15.1 Word 32 
15 Call 16 COGENT.serialise_ObjInode 4 Var l@14.0 Word 32 Var l@14.1 Word 32 Var l@14.2 Word 32 Var mem Mem  3 m@15.0 Word 32 m@15.1 Word 32 mem Mem
14 Basic 15 3 l@14.0 Word 32 Var a_fld0@1 Word 32 l@14.1 Word 32 Var a_fld1@2 Word 32 l@14.2 Word 32 Var TObjInode@12 Word 32 
12 Basic 14 1 TObjInode@12 Word 32 Var TObjDentarr_missed@7.3 Word 32 
11 Cond 12 13 Op Equals Bool 2 Var TObjDentarr_missed@7.0 Word 32 Num 0 Word 32 
7 Basic 11 7 TObjDentarr_missed@7.0 Word 32 Var a_fld2@3.0 Word 32 TObjDentarr_missed@7.1.0 Word 64 Var a_fld2@3.1.0 Word 64 TObjDentarr_missed@7.1.1 Word 32 Var a_fld2@3.1.1 Word 32 TObjDentarr_missed@7.2.0 Word 64 Var a_fld2@3.2.0 Word 64 TObjDentarr_missed@7.3 Word 32 Var a_fld2@3.4 Word 32 TObjDentarr_missed@7.4 Word 32 Var a_fld2@3.5 Word 32 TObjDentarr_missed@7.5 Word 32 Var a_fld2@3.6 Word 32 
10 Basic Ret 2 ret.0 Word 32 Var l@9.0 Word 32 ret.1 Word 32 Var l@9.1 Word 32 
9 Call 10 COGENT.serialise_ObjDentarr 4 Var k@8.0 Word 32 Var k@8.1 Word 32 Var k@8.2 Word 32 Var mem Mem  3 l@9.0 Word 32 l@9.1 Word 32 mem Mem
8 Basic 9 3 k@8.0 Word 32 Var a_fld0@1 Word 32 k@8.1 Word 32 Var a_fld1@2 Word 32 k@8.2 Word 32 Var TObjDentarr@6 Word 32 
6 Basic 8 1 TObjDentarr@6 Word 32 Var a_fld2@3.3 Word 32 
5 Cond 6 7 Op Equals Bool 2 Var a_fld2@3.0 Word 32 Num 0 Word 32 
4 Basic 5 1 a_fld3@4 Word 32 Var a@4.3 Word 32 
3 Basic 4 8 a_fld2@3.0 Word 32 Var a@3.2.0 Word 32 a_fld2@3.1.0 Word 64 Var a@3.2.1.0 Word 64 a_fld2@3.1.1 Word 32 Var a@3.2.1.1 Word 32 a_fld2@3.2.0 Word 64 Var a@3.2.2.0 Word 64 a_fld2@3.3 Word 32 Var a@3.2.3 Word 32 a_fld2@3.4 Word 32 Var a@3.2.4 Word 32 a_fld2@3.5 Word 32 Var a@3.2.5 Word 32 a_fld2@3.6 Word 32 Var a@3.2.6 Word 32 
2 Basic 3 1 a_fld1@2 Word 32 Var a@2.1 Word 32 
1 Basic 2 1 a_fld0@1 Word 32 Var a@1.0 Word 32 
EntryPoint 1

Function COGENT.serialise_Obj_crc 4 a@0.0 Word 32 a@0.1 Word 32 a@0.2 Word 32 mem Mem 4 ret.0 Word 32 ret.1 Word 32 ret.2 Word 32 mem Mem
25 Basic Ret 3 ret.0 Word 32 Var s@24 Word 32 ret.1 Word 32 Var h_fld1@10 Word 32 ret.2 Word 32 Var n@19 Word 32 
24 Call 25 COGENT.serialise_le32 4 Var r@23.0 Word 32 Var r@23.1 Word 32 Var r@23.2 Word 32 Var mem Mem  2 s@24 Word 32 mem Mem
23 Basic 24 3 r@23.0 Word 32 Var h_fld0@9 Word 32 r@23.1 Word 32 Var q@22 Word 32 r@23.2 Word 32 Var m@12 Word 32 
22 Basic 23 1 q@22 Word 32 Op Plus Word 32 2 Var a_fld1@2 Word 32 Var p@21 Word 32  
21 Basic 22 1 p@21 Word 32 Op WordCast Word 32 1 Var o@20 Word 8  
20 Basic 21 1 o@20 Word 8 Num 4 Word 8 
19 Basic 20 2 n@19 Word 32 Var a_fld2@3 Word 32 mem Mem Op MemUpdate Mem 3 Var mem Mem Op Plus Word 32 2 Var a_fld2@3 Word 32 Num 4 Word 32  Var m@12 Word 32  
12 Basic 19 1 m@12 Word 32 Var ret Word 32 
18 Basic 12 1 ret Word 32 Var q@17 Word 32 
17 Call 18 COGENT.crc32_buf 4 Var p@16.0 Word 32 Var p@16.1 Word 32 Var p@16.2 Word 32 Var mem Mem  2 q@17 Word 32 mem Mem
16 Basic 17 3 p@16.0 Word 32 Var h_fld0@9 Word 32 p@16.1 Word 32 Var o@15 Word 32 p@16.2 Word 32 Var h_fld1@10 Word 32 
15 Basic 16 1 o@15 Word 32 Op Plus Word 32 2 Var a_fld1@2 Word 32 Var n@14 Word 32  
14 Basic 15 1 n@14 Word 32 Op WordCast Word 32 1 Var m@13 Word 8  
13 Basic 14 1 m@13 Word 8 Num 8 Word 8 
11 Basic 13 0 
10 Basic 11 1 h_fld1@10 Word 32 Var h@10.1 Word 32 
9 Basic 10 1 h_fld0@9 Word 32 Var h@9.0 Word 32 
5 Basic 9 2 h@5.0 Word 32 Var ret.0 Word 32 h@5.1 Word 32 Var ret.1 Word 32 
8 Basic 5 2 ret.0 Word 32 Var i@7.0 Word 32 ret.1 Word 32 Var i@7.1 Word 32 
7 Call 8 COGENT.serialise_Obj 4 Var h@6.0 Word 32 Var h@6.1 Word 32 Var h@6.2 Word 32 Var mem Mem  3 i@7.0 Word 32 i@7.1 Word 32 mem Mem
6 Basic 7 3 h@6.0 Word 32 Var a_fld0@1 Word 32 h@6.1 Word 32 Var a_fld1@2 Word 32 h@6.2 Word 32 Var a_fld2@3 Word 32 
4 Basic 6 0 
3 Basic 4 1 a_fld2@3 Word 32 Var a@3.2 Word 32 
2 Basic 3 1 a_fld1@2 Word 32 Var a@2.1 Word 32 
1 Basic 2 1 a_fld0@1 Word 32 Var a@1.0 Word 32 
EntryPoint 1

Function COGENT.fsop_test_is_mount 3 a@0.0 Word 32 a@0.1 Word 32 mem Mem 2 ret Bool mem Mem
9 Basic Ret 1 ret Bool Op Equals Bool 2 Var h@5 Word 32 Var k@8 Word 32  
8 Call 9 COGENT.wubi_vol_cdev 2 Var j@7 Word 32 Var mem Mem  2 k@8 Word 32 mem Mem
7 Basic 8 1 j@7 Word 32 Op MemAcc Word 32 2 Var mem Mem Op Plus Word 32 2 Var i@6 Word 32 Num 20 Word 32   
6 Basic 7 1 i@6 Word 32 Op MemAcc Word 32 2 Var mem Mem Op Plus Word 32 2 Var a_fld1@2 Word 32 Num 4 Word 32   
5 Call 6 COGENT.wubi_vol_cdev 2 Var g@4 Word 32 Var mem Mem  2 h@5 Word 32 mem Mem
4 Basic 5 1 g@4 Word 32 Op MemAcc Word 32 2 Var mem Mem Op Plus Word 32 2 Var f@3 Word 32 Num 20 Word 32   
3 Basic 4 1 f@3 Word 32 Op MemAcc Word 32 2 Var mem Mem Op Plus Word 32 2 Var a_fld0@1 Word 32 Num 4 Word 32   
2 Basic 3 1 a_fld1@2 Word 32 Var a@2.1 Word 32 
1 Basic 2 1 a_fld0@1 Word 32 Var a@1.0 Word 32 
EntryPoint 1

Function COGENT.ostore_alloc_inode 2 a@0 Word 32 mem Mem 5 ret.0 Word 32 ret.1.0 Word 32 ret.1.1 Word 32 ret.1.2 Word 32 mem Mem
7 Cond 8 16 Var e@6 Bool
20 Basic Ret 4 ret.0 Word 32 Var b@1 Word 32 ret.1.0 Word 32 Var i@19.0 Word 32 ret.1.1 Word 32 Var i@19.1 Word 32 ret.1.2 Word 32 Var i@19.2 Word 32 
19 Basic 20 3 i@19.0 Word 32 Var h@18.0 Word 32 i@19.1 Word 32 Var h@18.1 Word 32 i@19.2 Word 32 Num 0 Word 32 
18 Basic 19 2 h@18.0 Word 32 Num 0 Word 32 h@18.1 Word 32 Var g@17 Word 32 
17 Basic 18 1 g@17 Word 32 Op WordCast Word 32 1 Var f@16 Word 8  
16 Basic 17 1 f@16 Word 8 Num 23 Word 8 
15 Basic Ret 4 ret.0 Word 32 Var k@12 Word 32 ret.1.0 Word 32 Var m@14.0 Word 32 ret.1.1 Word 32 Var m@14.1 Word 32 ret.1.2 Word 32 Var m@14.2 Word 32 
14 Basic 15 3 m@14.0 Word 32 Var l@13.0 Word 32 m@14.1 Word 32 Num 0 Word 32 m@14.2 Word 32 Var l@13.1 Word 32 
13 Basic 14 2 l@13.0 Word 32 Num 0 Word 32 l@13.1 Word 32 Var c@3 Word 32 
12 Basic 13 2 k@12 Word 32 Var b@8 Word 32 mem Mem Op MemUpdate Mem 3 Var mem Mem Op Plus Word 32 2 Var b@8 Word 32 Num 0 Word 32  Var j@11 Word 32  
11 Basic 12 1 j@11 Word 32 Op Plus Word 32 2 Var b_fld0@8 Word 32 Var i@10 Word 32  
10 Basic 11 1 i@10 Word 32 Op WordCast Word 32 1 Var h@9 Word 8  
9 Basic 10 1 h@9 Word 8 Num 1 Word 8 
8 Basic 9 1 b_fld0@8 Word 32 Op MemAcc Word 32 2 Var mem Mem Op Plus Word 32 2 Var b@8 Word 32 Num 0 Word 32   
6 Basic 7 1 e@6 Bool Op SignedLess Bool 2 Var c@3 Word 32 Var d@5 Word 32  
5 Basic 6 1 d@5 Word 32 Num 4294967295 Word 32 
3 Basic 5 1 c@3 Word 32 Var ret Word 32 
4 Basic 3 1 ret Word 32 Op MemAcc Word 32 2 Var mem Mem Op Plus Word 32 2 Var b@1 Word 32 Num 0 Word 32   
2 Basic 4 0 
1 Basic 2 1 b@1 Word 32 Var a@0 Word 32 
EntryPoint 1

Function COGENT.fsop_sync_fs 3 a@0.0 Word 32 a@0.1 Word 32 mem Mem 6 ret.0.0 Word 32 ret.0.1 Word 32 ret.1.0 Word 32 ret.1.1 Word 32 ret.1.2 Word 32 mem Mem
7 Cond 8 14 Var f@4 Bool
42 Basic Ret 5 ret.0.0 Word 32 Var v@38.0 Word 32 ret.0.1 Word 32 Var v@38.1 Word 32 ret.1.0 Word 32 Var y@41.0 Word 32 ret.1.1 Word 32 Var y@41.1 Word 32 ret.1.2 Word 32 Var y@41.2 Word 32 
41 Basic 42 3 y@41.0 Word 32 Var x@40.0 Word 32 y@41.1 Word 32 Num 0 Word 32 y@41.2 Word 32 Var x@40.1 Word 32 
40 Basic 41 2 x@40.0 Word 32 Num 0 Word 32 x@40.1 Word 32 Var w@39 Word 32 
39 Basic 40 1 w@39 Word 32 Num 0 Word 32 
38 Basic 39 2 v@38.0 Word 32 Var i_fld0_fld0@25 Word 32 v@38.1 Word 32 Var u@37 Word 32 
37 Basic 38 2 u@37 Word 32 Var a_fld1@14 Word 32 mem Mem Op MemUpdate Mem 3 Var mem Mem Op Plus Word 32 2 Var a_fld1@14 Word 32 Num 8 Word 32  Var i_fld0_fld1@26 Word 32  
36 Basic 37 1 t@36 Word 32 Var s@35 Word 32 
35 Basic 36 1 s@35 Word 32 Var Error_missed@29.1 Word 32 
29 Basic 35 2 Error_missed@29.0 Word 32 Var i_fld1@24.0 Word 32 Error_missed@29.1 Word 32 Var i_fld1@24.2 Word 32 
34 Basic Ret 5 ret.0.0 Word 32 Var t@31.0 Word 32 ret.0.1 Word 32 Var t@31.1 Word 32 ret.1.0 Word 32 Var v@33.0 Word 32 ret.1.1 Word 32 Var v@33.1 Word 32 ret.1.2 Word 32 Var v@33.2 Word 32 
33 Basic 34 3 v@33.0 Word 32 Var u@32.0 Word 32 v@33.1 Word 32 Var u@32.1 Word 32 v@33.2 Word 32 Num 0 Word 32 
32 Basic 33 2 u@32.0 Word 32 Num 0 Word 32 u@32.1 Word 32 Var Error@28 Word 32 
31 Basic 32 2 t@31.0 Word 32 Var i_fld0_fld0@25 Word 32 t@31.1 Word 32 Var s@30 Word 32 
30 Basic 31 2 s@30 Word 32 Var a_fld1@14 Word 32 mem Mem Op MemUpdate Mem 3 Var mem Mem Op Plus Word 32 2 Var a_fld1@14 Word 32 Num 8 Word 32  Var i_fld0_fld1@26 Word 32  
28 Basic 30 1 Error@28 Word 32 Var i_fld1@24.1 Word 32 
27 Cond 28 29 Op Equals Bool 2 Var i_fld1@24.0 Word 32 Num 0 Word 32 
26 Basic 27 1 i_fld0_fld1@26 Word 32 Var i_fld0@26.1 Word 32 
25 Basic 26 1 i_fld0_fld0@25 Word 32 Var i_fld0@25.0 Word 32 
24 Basic 25 3 i_fld1@24.0 Word 32 Var i@24.1.0 Word 32 i_fld1@24.1 Word 32 Var i@24.1.1 Word 32 i_fld1@24.2 Word 32 Var i@24.1.2 Word 32 
23 Basic 24 2 i_fld0@23.0 Word 32 Var i@23.0.0 Word 32 i_fld0@23.1 Word 32 Var i@23.0.1 Word 32 
16 Basic 23 5 i@16.0.0 Word 32 Var ret.0.0 Word 32 i@16.0.1 Word 32 Var ret.0.1 Word 32 i@16.1.0 Word 32 Var ret.1.0 Word 32 i@16.1.1 Word 32 Var ret.1.1 Word 32 i@16.1.2 Word 32 Var ret.1.2 Word 32 
22 Basic 16 5 ret.0.0 Word 32 Var m@21.0.0 Word 32 ret.0.1 Word 32 Var m@21.0.1 Word 32 ret.1.0 Word 32 Var m@21.1.0 Word 32 ret.1.1 Word 32 Var m@21.1.1 Word 32 ret.1.2 Word 32 Var m@21.1.2 Word 32 
21 Call 22 COGENT.ostore_sync 5 Var l@20.0 Word 32 Var l@20.1 Word 32 Var l@20.2 Word 32 Var l@20.3 Word 32 Var mem Mem  6 m@21.0.0 Word 32 m@21.0.1 Word 32 m@21.1.0 Word 32 m@21.1.1 Word 32 m@21.1.2 Word 32 mem Mem
20 Basic 21 4 l@20.0 Word 32 Var a_fld0@1 Word 32 l@20.1 Word 32 Var i@17 Word 32 l@20.2 Word 32 Var a_fld1_fld2@14 Word 32 l@20.3 Word 32 Var k@19 Word 32 
19 Basic 20 1 k@19 Word 32 Op WordCast Word 32 1 Var j@18 Word 8  
18 Basic 19 1 j@18 Word 8 Num 0 Word 8 
17 Basic 18 1 i@17 Word 32 Op MemAcc Word 32 2 Var mem Mem Op Plus Word 32 2 Var a_fld1@14 Word 32 Num 4 Word 32   
15 Basic 17 0 
14 Basic 15 1 a_fld1_fld2@14 Word 32 Op MemAcc Word 32 2 Var mem Mem Op Plus Word 32 2 Var a_fld1@14 Word 32 Num 8 Word 32   
13 Basic Ret 5 ret.0.0 Word 32 Var g@8.0 Word 32 ret.0.1 Word 32 Var g@8.1 Word 32 ret.1.0 Word 32 Var k@12.0 Word 32 ret.1.1 Word 32 Var k@12.1 Word 32 ret.1.2 Word 32 Var k@12.2 Word 32 
12 Basic 13 3 k@12.0 Word 32 Var j@11.0 Word 32 k@12.1 Word 32 Var j@11.1 Word 32 k@12.2 Word 32 Num 0 Word 32 
11 Basic 12 2 j@11.0 Word 32 Num 0 Word 32 j@11.1 Word 32 Var i@10 Word 32 
10 Basic 11 1 i@10 Word 32 Op WordCast Word 32 1 Var h@9 Word 8  
9 Basic 10 1 h@9 Word 8 Num 30 Word 8 
8 Basic 9 2 g@8.0 Word 32 Var a_fld0@1 Word 32 g@8.1 Word 32 Var a_fld1@2 Word 32 
4 Basic 7 1 f@4 Bool Var ret Bool 
6 Basic 4 1 ret Bool Op MemAcc Bool 2 Var mem Mem Op Plus Word 32 2 Var f@5 Word 32 Num 0 Word 32   
5 Basic 6 1 f@5 Word 32 Op MemAcc Word 32 2 Var mem Mem Op Plus Word 32 2 Var a_fld1@2 Word 32 Num 0 Word 32   
3 Basic 5 0 
2 Basic 3 1 a_fld1@2 Word 32 Var a@2.1 Word 32 
1 Basic 2 1 a_fld0@1 Word 32 Var a@1.0 Word 32 
EntryPoint 1

Function COGENT.ostore_umount 4 a@0.0 Word 32 a@0.1 Word 32 a@0.2 Word 32 mem Mem 7 ret.0.0 Word 32 ret.0.1 Word 32 ret.0.2 Word 32 ret.1.0 Word 32 ret.1.1 Word 32 ret.1.2 Word 32 mem Mem
12 Cond 13 37 Var j@11 Bool
41 Basic Ret 6 ret.0.0 Word 32 Var k@37.0 Word 32 ret.0.1 Word 32 Var k@37.1 Word 32 ret.0.2 Word 32 Var k@37.2 Word 32 ret.1.0 Word 32 Var n@40.0 Word 32 ret.1.1 Word 32 Var n@40.1 Word 32 ret.1.2 Word 32 Var n@40.2 Word 32 
40 Basic 41 3 n@40.0 Word 32 Var m@39.0 Word 32 n@40.1 Word 32 Num 0 Word 32 n@40.2 Word 32 Var m@39.1 Word 32 
39 Basic 40 2 m@39.0 Word 32 Num 0 Word 32 m@39.1 Word 32 Var l@38 Word 32 
38 Basic 39 1 l@38 Word 32 Num 0 Word 32 
37 Basic 38 3 k@37.0 Word 32 Var a_fld0@1 Word 32 k@37.1 Word 32 Var a_fld1@2 Word 32 k@37.2 Word 32 Var a_fld2@3 Word 32 
36 Basic Ret 6 ret.0.0 Word 32 Var x@35.0.0 Word 32 ret.0.1 Word 32 Var x@35.0.1 Word 32 ret.0.2 Word 32 Var x@35.0.2 Word 32 ret.1.0 Word 32 Var x@35.1.0 Word 32 ret.1.1 Word 32 Var x@35.1.1 Word 32 ret.1.2 Word 32 Var x@35.1.2 Word 32 
35 Call 36 COGENT.ostore_write_super 4 Var w@34.0 Word 32 Var w@34.1 Word 32 Var w@34.2 Word 32 Var mem Mem  7 x@35.0.0 Word 32 x@35.0.1 Word 32 x@35.0.2 Word 32 x@35.1.0 Word 32 x@35.1.1 Word 32 x@35.1.2 Word 32 mem Mem
34 Basic 35 3 w@34.0 Word 32 Var k_fld0_fld0@22 Word 32 w@34.1 Word 32 Var a_fld1@2 Word 32 w@34.2 Word 32 Var k_fld0_fld1@23 Word 32 
33 Basic 34 1 v@33 Word 32 Var u@32 Word 32 
32 Basic 33 1 u@32 Word 32 Var Error_missed@26.1 Word 32 
26 Basic 32 2 Error_missed@26.0 Word 32 Var k_fld1@21.0 Word 32 Error_missed@26.1 Word 32 Var k_fld1@21.2 Word 32 
31 Basic Ret 6 ret.0.0 Word 32 Var v@28.0 Word 32 ret.0.1 Word 32 Var v@28.1 Word 32 ret.0.2 Word 32 Var v@28.2 Word 32 ret.1.0 Word 32 Var x@30.0 Word 32 ret.1.1 Word 32 Var x@30.1 Word 32 ret.1.2 Word 32 Var x@30.2 Word 32 
30 Basic 31 3 x@30.0 Word 32 Var w@29.0 Word 32 x@30.1 Word 32 Var w@29.1 Word 32 x@30.2 Word 32 Num 0 Word 32 
29 Basic 30 2 w@29.0 Word 32 Num 0 Word 32 w@29.1 Word 32 Var Error@25 Word 32 
28 Basic 29 3 v@28.0 Word 32 Var k_fld0_fld0@22 Word 32 v@28.1 Word 32 Var a_fld1@2 Word 32 v@28.2 Word 32 Var k_fld0_fld1@23 Word 32 
27 Basic 28 1 u@27 Word 32 Num 0 Word 32 
25 Basic 27 1 Error@25 Word 32 Var k_fld1@21.1 Word 32 
24 Cond 25 26 Op Equals Bool 2 Var k_fld1@21.0 Word 32 Num 0 Word 32 
23 Basic 24 1 k_fld0_fld1@23 Word 32 Var k_fld0@23.1 Word 32 
22 Basic 23 1 k_fld0_fld0@22 Word 32 Var k_fld0@22.0 Word 32 
21 Basic 22 3 k_fld1@21.0 Word 32 Var k@21.1.0 Word 32 k_fld1@21.1 Word 32 Var k@21.1.1 Word 32 k_fld1@21.2 Word 32 Var k@21.1.2 Word 32 
20 Basic 21 2 k_fld0@20.0 Word 32 Var k@20.0.0 Word 32 k_fld0@20.1 Word 32 Var k@20.0.1 Word 32 
14 Basic 20 5 k@14.0.0 Word 32 Var ret.0.0 Word 32 k@14.0.1 Word 32 Var ret.0.1 Word 32 k@14.1.0 Word 32 Var ret.1.0 Word 32 k@14.1.1 Word 32 Var ret.1.1 Word 32 k@14.1.2 Word 32 Var ret.1.2 Word 32 
19 Basic 14 5 ret.0.0 Word 32 Var n@18.0.0 Word 32 ret.0.1 Word 32 Var n@18.0.1 Word 32 ret.1.0 Word 32 Var n@18.1.0 Word 32 ret.1.1 Word 32 Var n@18.1.1 Word 32 ret.1.2 Word 32 Var n@18.1.2 Word 32 
18 Call 19 COGENT.ostore_sync 5 Var m@17.0 Word 32 Var m@17.1 Word 32 Var m@17.2 Word 32 Var m@17.3 Word 32 Var mem Mem  6 n@18.0.0 Word 32 n@18.0.1 Word 32 n@18.1.0 Word 32 n@18.1.1 Word 32 n@18.1.2 Word 32 mem Mem
17 Basic 18 4 m@17.0 Word 32 Var a_fld0@1 Word 32 m@17.1 Word 32 Var a_fld1@2 Word 32 m@17.2 Word 32 Var a_fld2@3 Word 32 m@17.3 Word 32 Var l@16 Word 32 
16 Basic 17 1 l@16 Word 32 Op WordCast Word 32 1 Var k@15 Word 8  
15 Basic 16 1 k@15 Word 8 Num 4 Word 8 
13 Basic 15 0 
11 Basic 12 1 j@11 Bool Op SignedLess Bool 2 Var i@8 Word 64 Var h@5 Word 64  
8 Basic 11 1 i@8 Word 64 Var ret Word 64 
10 Basic 8 1 ret Word 64 Op MemAcc Word 64 2 Var mem Mem Op Plus Word 32 2 Var i@9 Word 32 Num 32 Word 32   
9 Basic 10 1 i@9 Word 32 Op MemAcc Word 32 2 Var mem Mem Op Plus Word 32 2 Var a_fld1@2 Word 32 Num 8 Word 32   
7 Basic 9 0 
5 Basic 7 1 h@5 Word 64 Var ret Word 64 
6 Basic 5 1 ret Word 64 Op MemAcc Word 64 2 Var mem Mem Op Plus Word 32 2 Var a_fld2@3 Word 32 Num 4 Word 32   
4 Basic 6 0 
3 Basic 4 1 a_fld2@3 Word 32 Var a@3.2 Word 32 
2 Basic 3 1 a_fld1@2 Word 32 Var a@2.1 Word 32 
1 Basic 2 1 a_fld0@1 Word 32 Var a@1.0 Word 32 
EntryPoint 1

Function COGENT.fsop_unmount 3 a@0.0 Word 32 a@0.1 Word 32 mem Mem 6 ret.0.0 Word 32 ret.0.1 Word 32 ret.1.0 Word 32 ret.1.1 Word 32 ret.1.2 Word 32 mem Mem
7 Cond 8 13 Var f@4 Bool
39 Basic Ret 5 ret.0.0 Word 32 Var v2@35.0 Word 32 ret.0.1 Word 32 Var v2@35.1 Word 32 ret.1.0 Word 32 Var v5@38.0 Word 32 ret.1.1 Word 32 Var v5@38.1 Word 32 ret.1.2 Word 32 Var v5@38.2 Word 32 
38 Basic 39 3 v5@38.0 Word 32 Var v4@37.0 Word 32 v5@38.1 Word 32 Num 0 Word 32 v5@38.2 Word 32 Var v4@37.1 Word 32 
37 Basic 38 2 v4@37.0 Word 32 Num 0 Word 32 v4@37.1 Word 32 Var v3@36 Word 32 
36 Basic 37 1 v3@36 Word 32 Num 0 Word 32 
35 Basic 36 2 v2@35.0 Word 32 Var l_fld0_fld0@19 Word 32 v2@35.1 Word 32 Var v1@34 Word 32 
34 Basic 35 2 v1@34 Word 32 Var z@33 Word 32 mem Mem Op MemUpdate Mem 3 Var mem Mem Op Plus Word 32 2 Var z@33 Word 32 Num 8 Word 32  Var l_fld0_fld2@21 Word 32  
33 Basic 34 2 z@33 Word 32 Var a_fld1@14 Word 32 mem Mem Op MemUpdate Mem 3 Var mem Mem Op Plus Word 32 2 Var a_fld1@14 Word 32 Num 4 Word 32  Var l_fld0_fld1@20 Word 32  
32 Basic 33 1 y@32 Word 32 Var x@31 Word 32 
31 Basic 32 1 x@31 Word 32 Var Error_missed@24.1 Word 32 
24 Basic 31 2 Error_missed@24.0 Word 32 Var l_fld1@18.0 Word 32 Error_missed@24.1 Word 32 Var l_fld1@18.2 Word 32 
30 Basic Ret 5 ret.0.0 Word 32 Var z@27.0 Word 32 ret.0.1 Word 32 Var z@27.1 Word 32 ret.1.0 Word 32 Var v2@29.0 Word 32 ret.1.1 Word 32 Var v2@29.1 Word 32 ret.1.2 Word 32 Var v2@29.2 Word 32 
29 Basic 30 3 v2@29.0 Word 32 Var v1@28.0 Word 32 v2@29.1 Word 32 Var v1@28.1 Word 32 v2@29.2 Word 32 Num 0 Word 32 
28 Basic 29 2 v1@28.0 Word 32 Num 0 Word 32 v1@28.1 Word 32 Var Error@23 Word 32 
27 Basic 28 2 z@27.0 Word 32 Var l_fld0_fld0@19 Word 32 z@27.1 Word 32 Var y@26 Word 32 
26 Basic 27 2 y@26 Word 32 Var x@25 Word 32 mem Mem Op MemUpdate Mem 3 Var mem Mem Op Plus Word 32 2 Var x@25 Word 32 Num 8 Word 32  Var l_fld0_fld2@21 Word 32  
25 Basic 26 2 x@25 Word 32 Var a_fld1@14 Word 32 mem Mem Op MemUpdate Mem 3 Var mem Mem Op Plus Word 32 2 Var a_fld1@14 Word 32 Num 4 Word 32  Var l_fld0_fld1@20 Word 32  
23 Basic 25 1 Error@23 Word 32 Var l_fld1@18.1 Word 32 
22 Cond 23 24 Op Equals Bool 2 Var l_fld1@18.0 Word 32 Num 0 Word 32 
21 Basic 22 1 l_fld0_fld2@21 Word 32 Var l_fld0@21.2 Word 32 
20 Basic 21 1 l_fld0_fld1@20 Word 32 Var l_fld0@20.1 Word 32 
19 Basic 20 1 l_fld0_fld0@19 Word 32 Var l_fld0@19.0 Word 32 
18 Basic 19 3 l_fld1@18.0 Word 32 Var l@18.1.0 Word 32 l_fld1@18.1 Word 32 Var l@18.1.1 Word 32 l_fld1@18.2 Word 32 Var l@18.1.2 Word 32 
17 Basic 18 3 l_fld0@17.0 Word 32 Var l@17.0.0 Word 32 l_fld0@17.1 Word 32 Var l@17.0.1 Word 32 l_fld0@17.2 Word 32 Var l@17.0.2 Word 32 
16 Call 17 COGENT.ostore_umount 4 Var k@15.0 Word 32 Var k@15.1 Word 32 Var k@15.2 Word 32 Var mem Mem  7 l@16.0.0 Word 32 l@16.0.1 Word 32 l@16.0.2 Word 32 l@16.1.0 Word 32 l@16.1.1 Word 32 l@16.1.2 Word 32 mem Mem
15 Basic 16 3 k@15.0 Word 32 Var a_fld0@1 Word 32 k@15.1 Word 32 Var a_fld1_fld1@14 Word 32 k@15.2 Word 32 Var a_fld1_fld2@13 Word 32 
14 Basic 15 1 a_fld1_fld1@14 Word 32 Op MemAcc Word 32 2 Var mem Mem Op Plus Word 32 2 Var a_fld1@14 Word 32 Num 4 Word 32   
13 Basic 14 1 a_fld1_fld2@13 Word 32 Op MemAcc Word 32 2 Var mem Mem Op Plus Word 32 2 Var a_fld1@13 Word 32 Num 8 Word 32   
12 Basic Ret 5 ret.0.0 Word 32 Var g@8.0 Word 32 ret.0.1 Word 32 Var g@8.1 Word 32 ret.1.0 Word 32 Var j@11.0 Word 32 ret.1.1 Word 32 Var j@11.1 Word 32 ret.1.2 Word 32 Var j@11.2 Word 32 
11 Basic 12 3 j@11.0 Word 32 Var i@10.0 Word 32 j@11.1 Word 32 Num 0 Word 32 j@11.2 Word 32 Var i@10.1 Word 32 
10 Basic 11 2 i@10.0 Word 32 Num 0 Word 32 i@10.1 Word 32 Var h@9 Word 32 
9 Basic 10 1 h@9 Word 32 Num 0 Word 32 
8 Basic 9 2 g@8.0 Word 32 Var a_fld0@1 Word 32 g@8.1 Word 32 Var a_fld1@2 Word 32 
4 Basic 7 1 f@4 Bool Var ret Bool 
6 Basic 4 1 ret Bool Op MemAcc Bool 2 Var mem Mem Op Plus Word 32 2 Var f@5 Word 32 Num 0 Word 32   
5 Basic 6 1 f@5 Word 32 Op MemAcc Word 32 2 Var mem Mem Op Plus Word 32 2 Var a_fld1@2 Word 32 Num 0 Word 32   
3 Basic 5 0 
2 Basic 3 1 a_fld1@2 Word 32 Var a@2.1 Word 32 
1 Basic 2 1 a_fld0@1 Word 32 Var a@1.0 Word 32 
EntryPoint 1

Function COGENT.delete_single_obj 10 a@0.0 Word 32 a@0.1.0 Word 32 a@0.1.1 Word 32 a@0.1.2 Word 32 a@0.2.0 Word 32 a@0.2.1.0 Word 32 a@0.2.1.1 Word 32 a@0.2.1.2 Word 32 a@0.2.1.3 Word 64 mem Mem 4 ret.0 Word 32 ret.1 Word 32 ret.2 Word 32 mem Mem
25 Basic Ret 3 ret.0 Word 32 Var y_fld0@23 Word 32 ret.1 Word 32 Var y_fld1@24 Word 32 ret.2 Word 32 Var a_fld1_fld2@5 Word 32 
24 Basic 25 1 y_fld1@24 Word 32 Var y@24.1 Word 32 
23 Basic 24 1 y_fld0@23 Word 32 Var y@23.0 Word 32 
22 Call 23 COGENT.fsm_mark_dirty_recycle 10 Var x@21.0 Word 32 Var x@21.1 Word 32 Var x@21.2 Word 32 Var x@21.3 Word 64 Var x@21.4.0 Word 32 Var x@21.4.1 Word 32 Var x@21.4.2 Word 32 Var x@21.4.3 Word 64 Var x@21.5 Word 32 Var mem Mem  3 y@22.0 Word 32 y@22.1 Word 32 mem Mem
21 Basic 22 9 x@21.0 Word 32 Var a_fld1_fld0@3 Word 32 x@21.1 Word 32 Var a_fld2_fld0@7 Word 32 x@21.2 Word 32 Var a_fld1_fld1@4 Word 32 x@21.3 Word 64 Var t@15 Word 64 x@21.4.0 Word 32 Var s@11.0 Word 32 x@21.4.1 Word 32 Var s@11.1 Word 32 x@21.4.2 Word 32 Var s@11.2 Word 32 x@21.4.3 Word 64 Var s@11.3 Word 64 x@21.5 Word 32 Var w@20 Word 32 
20 Call 21 COGENT.idx_to_gim_node 2 Var a_fld0@1 Word 32 Var mem Mem  2 w@20 Word 32 mem Mem
19 Basic 20 1 v@19 Word 32 Num 0 Word 32 
18 Basic 19 1 u@18 Word 32 Num 0 Word 32 
15 Basic 18 1 t@15 Word 64 Var ret Word 64 
17 Basic 15 1 ret Word 64 Var t@16 Word 64 
16 Call 17 COGENT.rbtnode_get_key_0 2 Var a_fld0@1 Word 32 Var mem Mem  2 t@16 Word 64 mem Mem
14 Basic 16 0 
11 Basic 14 4 s@11.0 Word 32 Var ret.0 Word 32 s@11.1 Word 32 Var ret.1 Word 32 s@11.2 Word 32 Var ret.2 Word 32 s@11.3 Word 64 Var ret.3 Word 64 
13 Basic 11 4 ret.0 Word 32 Var s@12.0 Word 32 ret.1 Word 32 Var s@12.1 Word 32 ret.2 Word 32 Var s@12.2 Word 32 ret.3 Word 64 Var s@12.3 Word 64 
12 Call 13 COGENT.rbtnode_get_val_0 2 Var a_fld0@1 Word 32 Var mem Mem  5 s@12.0 Word 32 s@12.1 Word 32 s@12.2 Word 32 s@12.3 Word 64 mem Mem
10 Basic 12 0 
9 Basic 10 1 r@9 Word 32 Num 0 Word 32 
8 Basic 9 4 a_fld2_fld1@8.0 Word 32 Var a_fld2@8.1.0 Word 32 a_fld2_fld1@8.1 Word 32 Var a_fld2@8.1.1 Word 32 a_fld2_fld1@8.2 Word 32 Var a_fld2@8.1.2 Word 32 a_fld2_fld1@8.3 Word 64 Var a_fld2@8.1.3 Word 64 
7 Basic 8 1 a_fld2_fld0@7 Word 32 Var a_fld2@7.0 Word 32 
6 Basic 7 5 a_fld2@6.0 Word 32 Var a@6.2.0 Word 32 a_fld2@6.1.0 Word 32 Var a@6.2.1.0 Word 32 a_fld2@6.1.1 Word 32 Var a@6.2.1.1 Word 32 a_fld2@6.1.2 Word 32 Var a@6.2.1.2 Word 32 a_fld2@6.1.3 Word 64 Var a@6.2.1.3 Word 64 
5 Basic 6 1 a_fld1_fld2@5 Word 32 Var a_fld1@5.2 Word 32 
4 Basic 5 1 a_fld1_fld1@4 Word 32 Var a_fld1@4.1 Word 32 
3 Basic 4 1 a_fld1_fld0@3 Word 32 Var a_fld1@3.0 Word 32 
2 Basic 3 3 a_fld1@2.0 Word 32 Var a@2.1.0 Word 32 a_fld1@2.1 Word 32 Var a@2.1.1 Word 32 a_fld1@2.2 Word 32 Var a@2.1.2 Word 32 
1 Basic 2 1 a_fld0@1 Word 32 Var a@1.0 Word 32 
EntryPoint 1

Function COGENT.should_delete 10 a@0.0 Word 32 a@0.1.0 Word 32 a@0.1.1 Word 32 a@0.1.2 Word 32 a@0.2.0 Word 32 a@0.2.1.0 Word 32 a@0.2.1.1 Word 32 a@0.2.1.2 Word 32 a@0.2.1.3 Word 64 mem Mem 2 ret Bool mem Mem
17 Basic Ret 1 ret Bool Op SignedLess Bool 2 Var x@15 Word 64 Var y@16 Word 64  
16 Basic 17 1 y@16 Word 64 Var a_fld2_fld1@8.3 Word 64 
15 Basic 16 1 x@15 Word 64 Var s@10.3 Word 64 
14 Basic 15 1 w@14 Word 32 Num 0 Word 32 
13 Basic 14 1 v@13 Word 32 Num 0 Word 32 
12 Basic 13 1 u@12 Word 32 Num 0 Word 32 
11 Basic 12 1 t@11 Word 32 Num 0 Word 32 
10 Call 11 COGENT.rbtnode_get_val_0 2 Var a_fld0@1 Word 32 Var mem Mem  5 s@10.0 Word 32 s@10.1 Word 32 s@10.2 Word 32 s@10.3 Word 64 mem Mem
9 Basic 10 1 r@9 Word 32 Num 0 Word 32 
8 Basic 9 4 a_fld2_fld1@8.0 Word 32 Var a_fld2@8.1.0 Word 32 a_fld2_fld1@8.1 Word 32 Var a_fld2@8.1.1 Word 32 a_fld2_fld1@8.2 Word 32 Var a_fld2@8.1.2 Word 32 a_fld2_fld1@8.3 Word 64 Var a_fld2@8.1.3 Word 64 
7 Basic 8 1 a_fld2_fld0@7 Word 32 Var a_fld2@7.0 Word 32 
6 Basic 7 5 a_fld2@6.0 Word 32 Var a@6.2.0 Word 32 a_fld2@6.1.0 Word 32 Var a@6.2.1.0 Word 32 a_fld2@6.1.1 Word 32 Var a@6.2.1.1 Word 32 a_fld2@6.1.2 Word 32 Var a@6.2.1.2 Word 32 a_fld2@6.1.3 Word 64 Var a@6.2.1.3 Word 64 
5 Basic 6 1 a_fld1_fld2@5 Word 32 Var a_fld1@5.2 Word 32 
4 Basic 5 1 a_fld1_fld1@4 Word 32 Var a_fld1@4.1 Word 32 
3 Basic 4 1 a_fld1_fld0@3 Word 32 Var a_fld1@3.0 Word 32 
2 Basic 3 3 a_fld1@2.0 Word 32 Var a@2.1.0 Word 32 a_fld1@2.1 Word 32 Var a@2.1.1 Word 32 a_fld1@2.2 Word 32 Var a@2.1.2 Word 32 
1 Basic 2 1 a_fld0@1 Word 32 Var a@1.0 Word 32 
EntryPoint 1

Function COGENT.update_obj_modifier 11 a@0.0 Word 32 a@0.1.0 Word 32 a@0.1.1 Word 32 a@0.1.2 Word 32 a@0.2.0 Word 32 a@0.2.1 Word 64 a@0.2.2.0 Word 32 a@0.2.2.1 Word 32 a@0.2.2.2 Word 32 a@0.2.2.3 Word 64 mem Mem 5 ret.0 Word 32 ret.1.0 Word 32 ret.1.1 Word 32 ret.1.2 Word 32 mem Mem
17 Cond 18 30 Var w@16 Bool
34 Basic Ret 4 ret.0 Word 32 Var a_fld0@1 Word 32 ret.1.0 Word 32 Var v1@33.0 Word 32 ret.1.1 Word 32 Var v1@33.1 Word 32 ret.1.2 Word 32 Var v1@33.2 Word 32 
33 Basic 34 3 v1@33.0 Word 32 Var a_fld1_fld0@3 Word 32 v1@33.1 Word 32 Var a_fld1_fld1@4 Word 32 v1@33.2 Word 32 Var a_fld1_fld2@5 Word 32 
32 Basic 33 1 z@32 Word 32 Num 0 Word 32 
31 Basic 32 1 y@31 Word 32 Num 0 Word 32 
30 Basic 31 1 x@30 Word 32 Num 0 Word 32 
29 Basic Ret 4 ret.0 Word 32 Var v10@27 Word 32 ret.1.0 Word 32 Var v11@28.0 Word 32 ret.1.1 Word 32 Var v11@28.1 Word 32 ret.1.2 Word 32 Var v11@28.2 Word 32 
28 Basic 29 3 v11@28.0 Word 32 Var v2_fld2@25 Word 32 v11@28.1 Word 32 Var v2_fld1@24 Word 32 v11@28.2 Word 32 Var v2_fld0@23 Word 32 
27 Call 28 COGENT.set_node 7 Var v9@26.0 Word 32 Var v9@26.1 Word 64 Var v9@26.2.0 Word 32 Var v9@26.2.1 Word 32 Var v9@26.2.2 Word 32 Var v9@26.2.3 Word 64 Var mem Mem  2 v10@27 Word 32 mem Mem
26 Basic 27 6 v9@26.0 Word 32 Var a_fld0@1 Word 32 v9@26.1 Word 64 Var a_fld2_fld1@8 Word 64 v9@26.2.0 Word 32 Var a_fld2_fld2@9.0 Word 32 v9@26.2.1 Word 32 Var a_fld2_fld2@9.1 Word 32 v9@26.2.2 Word 32 Var a_fld2_fld2@9.2 Word 32 v9@26.2.3 Word 64 Var a_fld2_fld2@9.3 Word 64 
25 Basic 26 1 v2_fld2@25 Word 32 Var v2@25.2 Word 32 
24 Basic 25 1 v2_fld1@24 Word 32 Var v2@24.1 Word 32 
23 Basic 24 1 v2_fld0@23 Word 32 Var v2@23.0 Word 32 
22 Call 23 COGENT.fsm_mark_dirty 10 Var v1@21.0 Word 32 Var v1@21.1 Word 32 Var v1@21.2 Word 32 Var v1@21.3 Word 32 Var v1@21.4 Word 64 Var v1@21.5.0 Word 32 Var v1@21.5.1 Word 32 Var v1@21.5.2 Word 32 Var v1@21.5.3 Word 64 Var mem Mem  4 v2@22.0 Word 32 v2@22.1 Word 32 v2@22.2 Word 32 mem Mem
21 Basic 22 9 v1@21.0 Word 32 Var a_fld1_fld2@5 Word 32 v1@21.1 Word 32 Var a_fld2_fld0@7 Word 32 v1@21.2 Word 32 Var a_fld1_fld1@4 Word 32 v1@21.3 Word 32 Var a_fld1_fld0@3 Word 32 v1@21.4 Word 64 Var a_fld2_fld1@8 Word 64 v1@21.5.0 Word 32 Var a_fld2_fld2@9.0 Word 32 v1@21.5.1 Word 32 Var a_fld2_fld2@9.1 Word 32 v1@21.5.2 Word 32 Var a_fld2_fld2@9.2 Word 32 v1@21.5.3 Word 64 Var a_fld2_fld2@9.3 Word 64 
20 Basic 21 1 z@20 Word 32 Num 0 Word 32 
19 Basic 20 1 y@19 Word 32 Num 0 Word 32 
18 Basic 19 1 x@18 Word 32 Num 0 Word 32 
16 Basic 17 1 w@16 Bool Op SignedLess Bool 2 Var u@14 Word 64 Var v@15 Word 64  
15 Basic 16 1 v@15 Word 64 Var a_fld2_fld2@9.3 Word 64 
14 Basic 15 1 u@14 Word 64 Var t@11.3 Word 64 
11 Basic 14 4 t@11.0 Word 32 Var ret.0 Word 32 t@11.1 Word 32 Var ret.1 Word 32 t@11.2 Word 32 Var ret.2 Word 32 t@11.3 Word 64 Var ret.3 Word 64 
13 Basic 11 4 ret.0 Word 32 Var t@12.0 Word 32 ret.1 Word 32 Var t@12.1 Word 32 ret.2 Word 32 Var t@12.2 Word 32 ret.3 Word 64 Var t@12.3 Word 64 
12 Call 13 COGENT.rbtnode_get_val_0 2 Var a_fld0@1 Word 32 Var mem Mem  5 t@12.0 Word 32 t@12.1 Word 32 t@12.2 Word 32 t@12.3 Word 64 mem Mem
10 Basic 12 0 
9 Basic 10 4 a_fld2_fld2@9.0 Word 32 Var a_fld2@9.2.0 Word 32 a_fld2_fld2@9.1 Word 32 Var a_fld2@9.2.1 Word 32 a_fld2_fld2@9.2 Word 32 Var a_fld2@9.2.2 Word 32 a_fld2_fld2@9.3 Word 64 Var a_fld2@9.2.3 Word 64 
8 Basic 9 1 a_fld2_fld1@8 Word 64 Var a_fld2@8.1 Word 64 
7 Basic 8 1 a_fld2_fld0@7 Word 32 Var a_fld2@7.0 Word 32 
6 Basic 7 6 a_fld2@6.0 Word 32 Var a@6.2.0 Word 32 a_fld2@6.1 Word 64 Var a@6.2.1 Word 64 a_fld2@6.2.0 Word 32 Var a@6.2.2.0 Word 32 a_fld2@6.2.1 Word 32 Var a@6.2.2.1 Word 32 a_fld2@6.2.2 Word 32 Var a@6.2.2.2 Word 32 a_fld2@6.2.3 Word 64 Var a@6.2.2.3 Word 64 
5 Basic 6 1 a_fld1_fld2@5 Word 32 Var a_fld1@5.2 Word 32 
4 Basic 5 1 a_fld1_fld1@4 Word 32 Var a_fld1@4.1 Word 32 
3 Basic 4 1 a_fld1_fld0@3 Word 32 Var a_fld1@3.0 Word 32 
2 Basic 3 3 a_fld1@2.0 Word 32 Var a@2.1.0 Word 32 a_fld1@2.1 Word 32 Var a@2.1.1 Word 32 a_fld1@2.2 Word 32 Var a@2.1.2 Word 32 
1 Basic 2 1 a_fld0@1 Word 32 Var a@1.0 Word 32 
EntryPoint 1


# ==Failed functions==
# Function: serialise_size_ObjDentry
#    >>Error: non-32 bit word in aggregate: [("ino",GEGSingle {singleType = GWordT 32}),("dtype",GEGSingle {singleType = GWordT 8}),("nlen",GEGSingle {singleType = GWordT 16}),("name",GEGSingle {singleType = GWordT 32})]

Function COGENT.serialise_size_ObjDentry 2 a@0 Word 32 mem Mem 2 a@0 Word 32 mem Mem
# Function: deep_freeObjInode
#    >>Error: non-32 bit word in aggregate: [("id",GEGSingle {singleType = GWordT 64}),("size",GEGSingle {singleType = GWordT 64}),("atime_sec",GEGSingle {singleType = GWordT 64}),("ctime_sec",GEGSingle {singleType = GWordT 64}),("mtime_sec",GEGSingle {singleType = GWordT 64}),("nlink",GEGSingle {singleType = GWordT 32}),("uid",GEGSingle {singleType = GWordT 32}),("gid",GEGSingle {singleType = GWordT 32}),("mode",GEGSingle {singleType = GWordT 32}),("flags",GEGSingle {singleType = GWordT 32})]

Function COGENT.deep_freeObjInode 3 a@0.0 Word 32 a@0.1 Word 32 mem Mem 2 a@0 Word 32 mem Mem
# Function: deep_freeObjDentry
#    >>Error: non-32 bit word in aggregate: [("ino",GEGSingle {singleType = GWordT 32}),("dtype",GEGSingle {singleType = GWordT 8}),("nlen",GEGSingle {singleType = GWordT 16}),("name",GEGSingle {singleType = GWordT 32})]

Function COGENT.deep_freeObjDentry 3 a@0.0 Word 32 a@0.1 Word 32 mem Mem 2 a@0 Word 32 mem Mem
# Function: del_dentry_modifier
#    >>Error: non-32 bit word in aggregate: [("ino",GEGSingle {singleType = GWordT 32}),("dtype",GEGSingle {singleType = GWordT 8}),("nlen",GEGSingle {singleType = GWordT 16}),("name",GEGSingle {singleType = GWordT 32})]

Function COGENT.del_dentry_modifier 4 a@0.0 Word 32 a@0.1 Word 32 a@0.2 Word 32 mem Mem 5 a@0.0 Word 32 a@0.1.0 Word 32 a@0.1.1 Word 32 a@0.1.2 Word 32 mem Mem
# Function: index_del_addr
#    >>Error: atom Fun

Function COGENT.index_del_addr 4 a@0.0 Word 32 a@0.1.0 Word 32 a@0.2 Word 64 mem Mem 3 a@0.0 Word 32 a@0.1.0 Word 32 mem Mem
# Function: fsm_mark_dirty_use
#    >>Error: atom Fun

Function COGENT.fsm_mark_dirty_use 9 a@0.0 Word 32 a@0.1.0 Word 32 a@0.1.1 Word 32 a@0.2.0 Word 64 a@0.2.1.0 Word 32 a@0.2.1.1 Word 32 a@0.2.1.2 Word 32 a@0.2.1.3 Word 64 mem Mem 3 a@0.0 Word 32 a@0.1 Word 32 mem Mem
# Function: obj_id_hash_name
#    >>Error: atom Fun

Function COGENT.obj_id_hash_name 2 a@0 Word 32 mem Mem 2 a@0 Word 32 mem Mem
# Function: wordarray_copy_n_0
#    >>Error: atom Fun

Function COGENT.wordarray_copy_n_0 4 a@0.0 Word 32 a@0.1 Word 32 a@0.2 Word 32 mem Mem 2 a@0 Word 32 mem Mem
# Function: wordarray_copy_0
#    >>Error: atom Fun

Function COGENT.wordarray_copy_0 3 a@0.0 Word 32 a@0.1 Word 32 mem Mem 5 a@0.0 Word 32 a@0.1 Word 32 a@0.2.0 Word 32 a@0.2.1 Word 32 mem Mem
# Function: obj_dentry_new_init
#    >>Error: non-32 bit word in aggregate: [("ino",GEGSingle {singleType = GWordT 32}),("dtype",GEGSingle {singleType = GWordT 8}),("nlen",GEGSingle {singleType = GWordT 16}),("name",GEGSingle {singleType = GWordT 32})]

Function COGENT.obj_dentry_new_init 5 a@0.0 Word 32 a@0.1 Word 32 a@0.2 Word 32 a@0.3 Word 8 mem Mem 5 a@0.0 Word 32 a@0.1.0 Word 32 a@0.1.1 Word 32 a@0.1.2 Word 32 mem Mem
# Function: emit_dir
#    >>Error: non-32 bit word in aggregate: [("ino",GEGSingle {singleType = GWordT 32}),("dtype",GEGSingle {singleType = GWordT 8}),("nlen",GEGSingle {singleType = GWordT 16}),("name",GEGSingle {singleType = GWordT 32})]

Function COGENT.emit_dir 5 a@0.0 Word 32 a@0.1.0 Word 32 a@0.1.1 Bool a@0.2 Word 32 mem Mem 3 a@0.0 Word 32 a@0.1 Bool mem Mem
# Function: buf_memset
#    >>Error: atom Fun

Function COGENT.buf_memset 5 a@0.0 Word 32 a@0.1 Word 32 a@0.2 Word 32 a@0.3 Word 8 mem Mem 2 a@0 Word 32 mem Mem
# Function: eb_empty_pages_from
#    >>Error: atom Fun

Function COGENT.eb_empty_pages_from 3 a@0.0 Word 32 a@0.1 Word 32 mem Mem 2 a@0 Bool mem Mem
# Function: deserialise_ObjInode
#    >>Error: non-32 bit word in aggregate: [("id",GEGSingle {singleType = GWordT 64}),("size",GEGSingle {singleType = GWordT 64}),("atime_sec",GEGSingle {singleType = GWordT 64}),("ctime_sec",GEGSingle {singleType = GWordT 64}),("mtime_sec",GEGSingle {singleType = GWordT 64}),("nlink",GEGSingle {singleType = GWordT 32}),("uid",GEGSingle {singleType = GWordT 32}),("gid",GEGSingle {singleType = GWordT 32}),("mode",GEGSingle {singleType = GWordT 32}),("flags",GEGSingle {singleType = GWordT 32})]

Function COGENT.deserialise_ObjInode 4 a@0.0 Word 32 a@0.1 Word 32 a@0.2 Word 32 mem Mem 7 a@0.0 Word 32 a@0.1.0 Word 32 a@0.1.1 Word 32 a@0.2.0 Word 32 a@0.2.1 Word 32 a@0.2.2 Word 32 mem Mem
# Function: deserialise_wordarray_ObjSumEntry
#    >>Error: atom Fun

Function COGENT.deserialise_wordarray_ObjSumEntry 5 a@0.0 Word 32 a@0.1 Word 32 a@0.2 Word 32 a@0.3 Word 32 mem Mem 5 a@0.0 Word 32 a@0.1.0 Word 32 a@0.1.1 Word 32 a@0.1.2 Word 32 mem Mem
# Function: deserialise_wordarray_U8
#    >>Error: atom Fun

Function COGENT.deserialise_wordarray_U8 5 a@0.0 Word 32 a@0.1 Word 32 a@0.2 Word 32 a@0.3 Word 32 mem Mem 6 a@0.0 Word 32 a@0.1.0 Word 32 a@0.1.1 Word 32 a@0.2.0 Word 32 a@0.2.1 Word 32 mem Mem
# Function: deserialise_ObjDentry
#    >>Error: non-32 bit word in aggregate: [("ino",GEGSingle {singleType = GWordT 32}),("dtype",GEGSingle {singleType = GWordT 8}),("nlen",GEGSingle {singleType = GWordT 16}),("name",GEGSingle {singleType = GWordT 32})]

Function COGENT.deserialise_ObjDentry 4 a@0.0 Word 32 a@0.1 Word 32 a@0.2 Word 32 mem Mem 7 a@0.0 Word 32 a@0.1.0 Word 32 a@0.1.1 Word 32 a@0.2.0 Word 32 a@0.2.1 Word 32 a@0.2.2 Word 32 mem Mem
# Function: serialise_wordarray_U8
#    >>Error: atom Fun

Function COGENT.serialise_wordarray_U8 4 a@0.0 Word 32 a@0.1 Word 32 a@0.2 Word 32 mem Mem 2 a@0 Word 32 mem Mem
# Function: find_name
#    >>Error: non-32 bit word in aggregate: [("ino",GEGSingle {singleType = GWordT 32}),("dtype",GEGSingle {singleType = GWordT 8}),("nlen",GEGSingle {singleType = GWordT 16}),("name",GEGSingle {singleType = GWordT 32})]

Function COGENT.find_name 4 a@0.0 Word 32 a@0.1 Word 32 a@0.2 Word 32 mem Mem 4 a@0.0 Word 32 a@0.1 Word 32 a@0.2 Word 32 mem Mem
# Function: check_flash_is_empty
#    >>Error: atom Fun

Function COGENT.check_flash_is_empty 4 a@0.0 Word 32 a@0.1 Word 32 a@0.2 Word 32 mem Mem 6 a@0.0.0 Word 32 a@0.0.1 Word 32 a@0.1.0 Word 32 a@0.1.1 Word 32 a@0.1.2 Bool mem Mem
# Function: read_obj_pages_in_buf
#    >>Error: atom Fun

Function COGENT.read_obj_pages_in_buf 9 a@0.0 Word 32 a@0.1 Word 32 a@0.2 Word 32 a@0.3 Word 32 a@0.4.0 Word 32 a@0.4.1 Word 32 a@0.4.2 Word 32 a@0.4.3 Word 64 mem Mem 7 a@0.0.0 Word 32 a@0.0.1 Word 32 a@0.0.2 Word 32 a@0.1.0 Word 32 a@0.1.1 Word 32 a@0.1.2 Word 32 mem Mem
# Function: wbuf_read_leb
#    >>Error: atom Fun

Function COGENT.wbuf_read_leb 6 a@0.0 Word 32 a@0.1 Word 32 a@0.2 Word 32 a@0.3 Word 32 a@0.4 Word 32 mem Mem 7 a@0.0.0 Word 32 a@0.0.1 Word 32 a@0.0.2 Word 32 a@0.1.0 Word 32 a@0.1.1 Word 32 a@0.1.2 Word 32 mem Mem
# Function: wbuf_write_buf
#    >>Error: atom Fun

Function COGENT.wbuf_write_buf 8 a@0.0 Word 32 a@0.1 Word 32 a@0.2 Word 32 a@0.3 Word 32 a@0.4 Word 32 a@0.5.0 Word 32 a@0.5.1 Word 32 mem Mem 6 a@0.0.0 Word 32 a@0.0.1 Word 32 a@0.1.0 Word 32 a@0.1.1 Word 32 a@0.1.2 Word 32 mem Mem
# Function: get_obj_oid
#    >>Error: non-32 bit word in aggregate: [("magic",GEGSingle {singleType = GWordT 32}),("crc",GEGSingle {singleType = GWordT 32}),("sqnum",GEGSingle {singleType = GWordT 64}),("offs",GEGSingle {singleType = GWordT 32}),("len",GEGSingle {singleType = GWordT 32}),("trans",GEGSingle {singleType = GWordT 8}),("otype",GEGSingle {singleType = GWordT 8}),("ounion",GEGSum [("TObjData",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("odata",GEGSingle {singleType = GWordT 32})] IsUnboxed),("TObjDel",GEGStruct [("id",GEGSingle {singleType = GWordT 64})] IsUnboxed),("TObjDentarr",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("nb_dentry",GEGSingle {singleType = GWordT 32}),("size",GEGSingle {singleType = GWordT 32}),("entries",GEGSingle {singleType = GWordT 32})] NotUnboxed),("TObjInode",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("size",GEGSingle {singleType = GWordT 64}),("atime_sec",GEGSingle {singleType = GWordT 64}),("ctime_sec",GEGSingle {singleType = GWordT 64}),("mtime_sec",GEGSingle {singleType = GWordT 64}),("nlink",GEGSingle {singleType = GWordT 32}),("uid",GEGSingle {singleType = GWordT 32}),("gid",GEGSingle {singleType = GWordT 32}),("mode",GEGSingle {singleType = GWordT 32}),("flags",GEGSingle {singleType = GWordT 32})] NotUnboxed),("TObjPad",GEGUnit),("TObjSuper",GEGStruct [("nb_eb",GEGSingle {singleType = GWordT 32}),("eb_size",GEGSingle {singleType = GWordT 32}),("io_size",GEGSingle {singleType = GWordT 32}),("nb_reserved_gc",GEGSingle {singleType = GWordT 32}),("nb_reserved_del",GEGSingle {singleType = GWordT 32}),("cur_eb",GEGSingle {singleType = GWordT 32}),("cur_offs",GEGSingle {singleType = GWordT 32}),("last_inum",GEGSingle {singleType = GWordT 32}),("next_sqnum",GEGSingle {singleType = GWordT 64})] NotUnboxed)])]

Function COGENT.get_obj_oid 2 a@0 Word 32 mem Mem 2 a@0 Word 64 mem Mem
# Function: new_delnode_init
#    >>Error: non-32 bit word in aggregate: [("magic",GEGSingle {singleType = GWordT 32}),("crc",GEGSingle {singleType = GWordT 32}),("sqnum",GEGSingle {singleType = GWordT 64}),("offs",GEGSingle {singleType = GWordT 32}),("len",GEGSingle {singleType = GWordT 32}),("trans",GEGSingle {singleType = GWordT 8}),("otype",GEGSingle {singleType = GWordT 8}),("ounion",GEGSum [("TObjData",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("odata",GEGSingle {singleType = GWordT 32})] IsUnboxed),("TObjDel",GEGStruct [("id",GEGSingle {singleType = GWordT 64})] IsUnboxed),("TObjDentarr",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("nb_dentry",GEGSingle {singleType = GWordT 32}),("size",GEGSingle {singleType = GWordT 32}),("entries",GEGSingle {singleType = GWordT 32})] NotUnboxed),("TObjInode",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("size",GEGSingle {singleType = GWordT 64}),("atime_sec",GEGSingle {singleType = GWordT 64}),("ctime_sec",GEGSingle {singleType = GWordT 64}),("mtime_sec",GEGSingle {singleType = GWordT 64}),("nlink",GEGSingle {singleType = GWordT 32}),("uid",GEGSingle {singleType = GWordT 32}),("gid",GEGSingle {singleType = GWordT 32}),("mode",GEGSingle {singleType = GWordT 32}),("flags",GEGSingle {singleType = GWordT 32})] NotUnboxed),("TObjPad",GEGUnit),("TObjSuper",GEGStruct [("nb_eb",GEGSingle {singleType = GWordT 32}),("eb_size",GEGSingle {singleType = GWordT 32}),("io_size",GEGSingle {singleType = GWordT 32}),("nb_reserved_gc",GEGSingle {singleType = GWordT 32}),("nb_reserved_del",GEGSingle {singleType = GWordT 32}),("cur_eb",GEGSingle {singleType = GWordT 32}),("cur_offs",GEGSingle {singleType = GWordT 32}),("last_inum",GEGSingle {singleType = GWordT 32}),("next_sqnum",GEGSingle {singleType = GWordT 64})] NotUnboxed)])]

Function COGENT.new_delnode_init 4 a@0.0 Word 32 a@0.1 Word 32 a@0.2 Word 32 mem Mem 5 a@0.0 Word 32 a@0.1 Word 32 a@0.2.0 Word 32 a@0.2.1 Word 32 mem Mem
# Function: obj_init_default
#    >>Error: non-32 bit word in aggregate: [("magic",GEGSingle {singleType = GWordT 32}),("crc",GEGSingle {singleType = GWordT 32}),("sqnum",GEGSingle {singleType = GWordT 64}),("offs",GEGSingle {singleType = GWordT 32}),("len",GEGSingle {singleType = GWordT 32}),("trans",GEGSingle {singleType = GWordT 8}),("otype",GEGSingle {singleType = GWordT 8}),("ounion",GEGSum [("TObjData",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("odata",GEGSingle {singleType = GWordT 32})] IsUnboxed),("TObjDel",GEGStruct [("id",GEGSingle {singleType = GWordT 64})] IsUnboxed),("TObjDentarr",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("nb_dentry",GEGSingle {singleType = GWordT 32}),("size",GEGSingle {singleType = GWordT 32}),("entries",GEGSingle {singleType = GWordT 32})] NotUnboxed),("TObjInode",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("size",GEGSingle {singleType = GWordT 64}),("atime_sec",GEGSingle {singleType = GWordT 64}),("ctime_sec",GEGSingle {singleType = GWordT 64}),("mtime_sec",GEGSingle {singleType = GWordT 64}),("nlink",GEGSingle {singleType = GWordT 32}),("uid",GEGSingle {singleType = GWordT 32}),("gid",GEGSingle {singleType = GWordT 32}),("mode",GEGSingle {singleType = GWordT 32}),("flags",GEGSingle {singleType = GWordT 32})] NotUnboxed),("TObjPad",GEGUnit),("TObjSuper",GEGStruct [("nb_eb",GEGSingle {singleType = GWordT 32}),("eb_size",GEGSingle {singleType = GWordT 32}),("io_size",GEGSingle {singleType = GWordT 32}),("nb_reserved_gc",GEGSingle {singleType = GWordT 32}),("nb_reserved_del",GEGSingle {singleType = GWordT 32}),("cur_eb",GEGSingle {singleType = GWordT 32}),("cur_offs",GEGSingle {singleType = GWordT 32}),("last_inum",GEGSingle {singleType = GWordT 32}),("next_sqnum",GEGSingle {singleType = GWordT 64})] NotUnboxed)])]

Function COGENT.obj_init_default 3 a@0.0 Word 32 a@0.1 Word 8 mem Mem 2 a@0 Word 32 mem Mem
# Function: obj_data_new
#    >>Error: non-32 bit word in aggregate: [("magic",GEGSingle {singleType = GWordT 32}),("crc",GEGSingle {singleType = GWordT 32}),("sqnum",GEGSingle {singleType = GWordT 64}),("offs",GEGSingle {singleType = GWordT 32}),("len",GEGSingle {singleType = GWordT 32}),("trans",GEGSingle {singleType = GWordT 8}),("otype",GEGSingle {singleType = GWordT 8}),("ounion",GEGSum [("TObjData",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("odata",GEGSingle {singleType = GWordT 32})] IsUnboxed),("TObjDel",GEGStruct [("id",GEGSingle {singleType = GWordT 64})] IsUnboxed),("TObjDentarr",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("nb_dentry",GEGSingle {singleType = GWordT 32}),("size",GEGSingle {singleType = GWordT 32}),("entries",GEGSingle {singleType = GWordT 32})] NotUnboxed),("TObjInode",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("size",GEGSingle {singleType = GWordT 64}),("atime_sec",GEGSingle {singleType = GWordT 64}),("ctime_sec",GEGSingle {singleType = GWordT 64}),("mtime_sec",GEGSingle {singleType = GWordT 64}),("nlink",GEGSingle {singleType = GWordT 32}),("uid",GEGSingle {singleType = GWordT 32}),("gid",GEGSingle {singleType = GWordT 32}),("mode",GEGSingle {singleType = GWordT 32}),("flags",GEGSingle {singleType = GWordT 32})] NotUnboxed),("TObjPad",GEGUnit),("TObjSuper",GEGStruct [("nb_eb",GEGSingle {singleType = GWordT 32}),("eb_size",GEGSingle {singleType = GWordT 32}),("io_size",GEGSingle {singleType = GWordT 32}),("nb_reserved_gc",GEGSingle {singleType = GWordT 32}),("nb_reserved_del",GEGSingle {singleType = GWordT 32}),("cur_eb",GEGSingle {singleType = GWordT 32}),("cur_offs",GEGSingle {singleType = GWordT 32}),("last_inum",GEGSingle {singleType = GWordT 32}),("next_sqnum",GEGSingle {singleType = GWordT 64})] NotUnboxed)])]

Function COGENT.obj_data_new 5 a@0.0 Word 32 a@0.1 Word 64 a@0.2 Word 32 a@0.3 Word 32 mem Mem 6 a@0.0 Word 32 a@0.1.0 Word 32 a@0.1.1.0 Word 32 a@0.1.1.1 Word 32 a@0.1.2 Word 32 mem Mem
# Function: obj_init_super
#    >>Error: non-32 bit word in aggregate: [("magic",GEGSingle {singleType = GWordT 32}),("crc",GEGSingle {singleType = GWordT 32}),("sqnum",GEGSingle {singleType = GWordT 64}),("offs",GEGSingle {singleType = GWordT 32}),("len",GEGSingle {singleType = GWordT 32}),("trans",GEGSingle {singleType = GWordT 8}),("otype",GEGSingle {singleType = GWordT 8}),("ounion",GEGSum [("TObjData",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("odata",GEGSingle {singleType = GWordT 32})] IsUnboxed),("TObjDel",GEGStruct [("id",GEGSingle {singleType = GWordT 64})] IsUnboxed),("TObjDentarr",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("nb_dentry",GEGSingle {singleType = GWordT 32}),("size",GEGSingle {singleType = GWordT 32}),("entries",GEGSingle {singleType = GWordT 32})] NotUnboxed),("TObjInode",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("size",GEGSingle {singleType = GWordT 64}),("atime_sec",GEGSingle {singleType = GWordT 64}),("ctime_sec",GEGSingle {singleType = GWordT 64}),("mtime_sec",GEGSingle {singleType = GWordT 64}),("nlink",GEGSingle {singleType = GWordT 32}),("uid",GEGSingle {singleType = GWordT 32}),("gid",GEGSingle {singleType = GWordT 32}),("mode",GEGSingle {singleType = GWordT 32}),("flags",GEGSingle {singleType = GWordT 32})] NotUnboxed),("TObjPad",GEGUnit),("TObjSuper",GEGStruct [("nb_eb",GEGSingle {singleType = GWordT 32}),("eb_size",GEGSingle {singleType = GWordT 32}),("io_size",GEGSingle {singleType = GWordT 32}),("nb_reserved_gc",GEGSingle {singleType = GWordT 32}),("nb_reserved_del",GEGSingle {singleType = GWordT 32}),("cur_eb",GEGSingle {singleType = GWordT 32}),("cur_offs",GEGSingle {singleType = GWordT 32}),("last_inum",GEGSingle {singleType = GWordT 32}),("next_sqnum",GEGSingle {singleType = GWordT 64})] NotUnboxed)])]

Function COGENT.obj_init_super 4 a@0.0 Word 32 a@0.1 Word 64 a@0.2 Word 32 mem Mem 2 a@0 Word 32 mem Mem
# Function: ostore_update_padding_obj
#    >>Error: non-32 bit word in aggregate: [("magic",GEGSingle {singleType = GWordT 32}),("crc",GEGSingle {singleType = GWordT 32}),("sqnum",GEGSingle {singleType = GWordT 64}),("offs",GEGSingle {singleType = GWordT 32}),("len",GEGSingle {singleType = GWordT 32}),("trans",GEGSingle {singleType = GWordT 8}),("otype",GEGSingle {singleType = GWordT 8}),("ounion",GEGSum [("TObjData",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("odata",GEGSingle {singleType = GWordT 32})] IsUnboxed),("TObjDel",GEGStruct [("id",GEGSingle {singleType = GWordT 64})] IsUnboxed),("TObjDentarr",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("nb_dentry",GEGSingle {singleType = GWordT 32}),("size",GEGSingle {singleType = GWordT 32}),("entries",GEGSingle {singleType = GWordT 32})] NotUnboxed),("TObjInode",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("size",GEGSingle {singleType = GWordT 64}),("atime_sec",GEGSingle {singleType = GWordT 64}),("ctime_sec",GEGSingle {singleType = GWordT 64}),("mtime_sec",GEGSingle {singleType = GWordT 64}),("nlink",GEGSingle {singleType = GWordT 32}),("uid",GEGSingle {singleType = GWordT 32}),("gid",GEGSingle {singleType = GWordT 32}),("mode",GEGSingle {singleType = GWordT 32}),("flags",GEGSingle {singleType = GWordT 32})] NotUnboxed),("TObjPad",GEGUnit),("TObjSuper",GEGStruct [("nb_eb",GEGSingle {singleType = GWordT 32}),("eb_size",GEGSingle {singleType = GWordT 32}),("io_size",GEGSingle {singleType = GWordT 32}),("nb_reserved_gc",GEGSingle {singleType = GWordT 32}),("nb_reserved_del",GEGSingle {singleType = GWordT 32}),("cur_eb",GEGSingle {singleType = GWordT 32}),("cur_offs",GEGSingle {singleType = GWordT 32}),("last_inum",GEGSingle {singleType = GWordT 32}),("next_sqnum",GEGSingle {singleType = GWordT 64})] NotUnboxed)])]

Function COGENT.ostore_update_padding_obj 4 a@0.0 Word 32 a@0.1 Word 64 a@0.2 Word 32 mem Mem 2 a@0 Word 32 mem Mem
# Function: print_obj_type
#    >>Error: non-32 bit word in aggregate: [("magic",GEGSingle {singleType = GWordT 32}),("crc",GEGSingle {singleType = GWordT 32}),("sqnum",GEGSingle {singleType = GWordT 64}),("offs",GEGSingle {singleType = GWordT 32}),("len",GEGSingle {singleType = GWordT 32}),("trans",GEGSingle {singleType = GWordT 8}),("otype",GEGSingle {singleType = GWordT 8}),("ounion",GEGSum [("TObjData",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("odata",GEGSingle {singleType = GWordT 32})] IsUnboxed),("TObjDel",GEGStruct [("id",GEGSingle {singleType = GWordT 64})] IsUnboxed),("TObjDentarr",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("nb_dentry",GEGSingle {singleType = GWordT 32}),("size",GEGSingle {singleType = GWordT 32}),("entries",GEGSingle {singleType = GWordT 32})] NotUnboxed),("TObjInode",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("size",GEGSingle {singleType = GWordT 64}),("atime_sec",GEGSingle {singleType = GWordT 64}),("ctime_sec",GEGSingle {singleType = GWordT 64}),("mtime_sec",GEGSingle {singleType = GWordT 64}),("nlink",GEGSingle {singleType = GWordT 32}),("uid",GEGSingle {singleType = GWordT 32}),("gid",GEGSingle {singleType = GWordT 32}),("mode",GEGSingle {singleType = GWordT 32}),("flags",GEGSingle {singleType = GWordT 32})] NotUnboxed),("TObjPad",GEGUnit),("TObjSuper",GEGStruct [("nb_eb",GEGSingle {singleType = GWordT 32}),("eb_size",GEGSingle {singleType = GWordT 32}),("io_size",GEGSingle {singleType = GWordT 32}),("nb_reserved_gc",GEGSingle {singleType = GWordT 32}),("nb_reserved_del",GEGSingle {singleType = GWordT 32}),("cur_eb",GEGSingle {singleType = GWordT 32}),("cur_offs",GEGSingle {singleType = GWordT 32}),("last_inum",GEGSingle {singleType = GWordT 32}),("next_sqnum",GEGSingle {singleType = GWordT 64})] NotUnboxed)])]

Function COGENT.print_obj_type 2 a@0 Word 32 mem Mem 2 a@0 Word 32 mem Mem
# Function: trans_size_loop_body
#    >>Error: non-32 bit word in aggregate: [("magic",GEGSingle {singleType = GWordT 32}),("crc",GEGSingle {singleType = GWordT 32}),("sqnum",GEGSingle {singleType = GWordT 64}),("offs",GEGSingle {singleType = GWordT 32}),("len",GEGSingle {singleType = GWordT 32}),("trans",GEGSingle {singleType = GWordT 8}),("otype",GEGSingle {singleType = GWordT 8}),("ounion",GEGSum [("TObjData",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("odata",GEGSingle {singleType = GWordT 32})] IsUnboxed),("TObjDel",GEGStruct [("id",GEGSingle {singleType = GWordT 64})] IsUnboxed),("TObjDentarr",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("nb_dentry",GEGSingle {singleType = GWordT 32}),("size",GEGSingle {singleType = GWordT 32}),("entries",GEGSingle {singleType = GWordT 32})] NotUnboxed),("TObjInode",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("size",GEGSingle {singleType = GWordT 64}),("atime_sec",GEGSingle {singleType = GWordT 64}),("ctime_sec",GEGSingle {singleType = GWordT 64}),("mtime_sec",GEGSingle {singleType = GWordT 64}),("nlink",GEGSingle {singleType = GWordT 32}),("uid",GEGSingle {singleType = GWordT 32}),("gid",GEGSingle {singleType = GWordT 32}),("mode",GEGSingle {singleType = GWordT 32}),("flags",GEGSingle {singleType = GWordT 32})] NotUnboxed),("TObjPad",GEGUnit),("TObjSuper",GEGStruct [("nb_eb",GEGSingle {singleType = GWordT 32}),("eb_size",GEGSingle {singleType = GWordT 32}),("io_size",GEGSingle {singleType = GWordT 32}),("nb_reserved_gc",GEGSingle {singleType = GWordT 32}),("nb_reserved_del",GEGSingle {singleType = GWordT 32}),("cur_eb",GEGSingle {singleType = GWordT 32}),("cur_offs",GEGSingle {singleType = GWordT 32}),("last_inum",GEGSingle {singleType = GWordT 32}),("next_sqnum",GEGSingle {singleType = GWordT 64})] NotUnboxed)])]

Function COGENT.trans_size_loop_body 4 a@0.0 Word 32 a@0.1 Word 32 a@0.2 Word 32 mem Mem 2 a@0 Word 32 mem Mem
# Function: deep_freeObjDentarr
#    >>Error: non-32 bit word in aggregate: [("id",GEGSingle {singleType = GWordT 64}),("nb_dentry",GEGSingle {singleType = GWordT 32}),("size",GEGSingle {singleType = GWordT 32}),("entries",GEGSingle {singleType = GWordT 32})]

Function COGENT.deep_freeObjDentarr 3 a@0.0 Word 32 a@0.1 Word 32 mem Mem 2 a@0 Word 32 mem Mem
# Function: deep_freeObjUnion
#    >>Error: non-32 bit word in aggregate: [("id",GEGSingle {singleType = GWordT 64}),("size",GEGSingle {singleType = GWordT 64}),("atime_sec",GEGSingle {singleType = GWordT 64}),("ctime_sec",GEGSingle {singleType = GWordT 64}),("mtime_sec",GEGSingle {singleType = GWordT 64}),("nlink",GEGSingle {singleType = GWordT 32}),("uid",GEGSingle {singleType = GWordT 32}),("gid",GEGSingle {singleType = GWordT 32}),("mode",GEGSingle {singleType = GWordT 32}),("flags",GEGSingle {singleType = GWordT 32})]

Function COGENT.deep_freeObjUnion 10 a@0.0 Word 32 a@0.1.0 Word 32 a@0.1.1.0 Word 64 a@0.1.1.1 Word 32 a@0.1.2.0 Word 64 a@0.1.3 Word 32 a@0.1.4 Word 32 a@0.1.5 Word 32 a@0.1.6 Word 32 mem Mem 2 a@0 Word 32 mem Mem
# Function: deep_freeObj
#    >>Error: non-32 bit word in aggregate: [("magic",GEGSingle {singleType = GWordT 32}),("crc",GEGSingle {singleType = GWordT 32}),("sqnum",GEGSingle {singleType = GWordT 64}),("offs",GEGSingle {singleType = GWordT 32}),("len",GEGSingle {singleType = GWordT 32}),("trans",GEGSingle {singleType = GWordT 8}),("otype",GEGSingle {singleType = GWordT 8}),("ounion",GEGSum [("TObjData",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("odata",GEGSingle {singleType = GWordT 32})] IsUnboxed),("TObjDel",GEGStruct [("id",GEGSingle {singleType = GWordT 64})] IsUnboxed),("TObjDentarr",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("nb_dentry",GEGSingle {singleType = GWordT 32}),("size",GEGSingle {singleType = GWordT 32}),("entries",GEGSingle {singleType = GWordT 32})] NotUnboxed),("TObjInode",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("size",GEGSingle {singleType = GWordT 64}),("atime_sec",GEGSingle {singleType = GWordT 64}),("ctime_sec",GEGSingle {singleType = GWordT 64}),("mtime_sec",GEGSingle {singleType = GWordT 64}),("nlink",GEGSingle {singleType = GWordT 32}),("uid",GEGSingle {singleType = GWordT 32}),("gid",GEGSingle {singleType = GWordT 32}),("mode",GEGSingle {singleType = GWordT 32}),("flags",GEGSingle {singleType = GWordT 32})] NotUnboxed),("TObjPad",GEGUnit),("TObjSuper",GEGStruct [("nb_eb",GEGSingle {singleType = GWordT 32}),("eb_size",GEGSingle {singleType = GWordT 32}),("io_size",GEGSingle {singleType = GWordT 32}),("nb_reserved_gc",GEGSingle {singleType = GWordT 32}),("nb_reserved_del",GEGSingle {singleType = GWordT 32}),("cur_eb",GEGSingle {singleType = GWordT 32}),("cur_offs",GEGSingle {singleType = GWordT 32}),("last_inum",GEGSingle {singleType = GWordT 32}),("next_sqnum",GEGSingle {singleType = GWordT 64})] NotUnboxed)])]

Function COGENT.deep_freeObj 3 a@0.0 Word 32 a@0.1 Word 32 mem Mem 2 a@0 Word 32 mem Mem
# Function: get_data_back
#    >>Error: non-32 bit word in aggregate: [("magic",GEGSingle {singleType = GWordT 32}),("crc",GEGSingle {singleType = GWordT 32}),("sqnum",GEGSingle {singleType = GWordT 64}),("offs",GEGSingle {singleType = GWordT 32}),("len",GEGSingle {singleType = GWordT 32}),("trans",GEGSingle {singleType = GWordT 8}),("otype",GEGSingle {singleType = GWordT 8}),("ounion",GEGSum [("TObjData",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("odata",GEGSingle {singleType = GWordT 32})] IsUnboxed),("TObjDel",GEGStruct [("id",GEGSingle {singleType = GWordT 64})] IsUnboxed),("TObjDentarr",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("nb_dentry",GEGSingle {singleType = GWordT 32}),("size",GEGSingle {singleType = GWordT 32}),("entries",GEGSingle {singleType = GWordT 32})] NotUnboxed),("TObjInode",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("size",GEGSingle {singleType = GWordT 64}),("atime_sec",GEGSingle {singleType = GWordT 64}),("ctime_sec",GEGSingle {singleType = GWordT 64}),("mtime_sec",GEGSingle {singleType = GWordT 64}),("nlink",GEGSingle {singleType = GWordT 32}),("uid",GEGSingle {singleType = GWordT 32}),("gid",GEGSingle {singleType = GWordT 32}),("mode",GEGSingle {singleType = GWordT 32}),("flags",GEGSingle {singleType = GWordT 32})] NotUnboxed),("TObjPad",GEGUnit),("TObjSuper",GEGStruct [("nb_eb",GEGSingle {singleType = GWordT 32}),("eb_size",GEGSingle {singleType = GWordT 32}),("io_size",GEGSingle {singleType = GWordT 32}),("nb_reserved_gc",GEGSingle {singleType = GWordT 32}),("nb_reserved_del",GEGSingle {singleType = GWordT 32}),("cur_eb",GEGSingle {singleType = GWordT 32}),("cur_offs",GEGSingle {singleType = GWordT 32}),("last_inum",GEGSingle {singleType = GWordT 32}),("next_sqnum",GEGSingle {singleType = GWordT 64})] NotUnboxed)])]

Function COGENT.get_data_back 6 a@0.0 Word 32 a@0.1 Word 32 a@0.2.0 Word 32 a@0.2.1 Word 32 a@0.2.2 Word 32 mem Mem 3 a@0.0 Word 32 a@0.1 Word 32 mem Mem
# Function: deserialise_Array_ObjDentry
#    >>Error: atom Fun

Function COGENT.deserialise_Array_ObjDentry 5 a@0.0 Word 32 a@0.1 Word 32 a@0.2 Word 32 a@0.3 Word 32 mem Mem 7 a@0.0 Word 32 a@0.1.0 Word 32 a@0.1.1 Word 32 a@0.2.0 Word 32 a@0.2.1 Word 32 a@0.2.2 Word 32 mem Mem
# Function: deserialise_ObjDentarr
#    >>Error: atom Fun

Function COGENT.deserialise_ObjDentarr 4 a@0.0 Word 32 a@0.1 Word 32 a@0.2 Word 32 mem Mem 7 a@0.0 Word 32 a@0.1.0 Word 32 a@0.1.1 Word 32 a@0.2.0 Word 32 a@0.2.1 Word 32 a@0.2.2 Word 32 mem Mem
# Function: deserialise_Obj
#    >>Error: non-32 bit word in aggregate: [("magic",GEGSingle {singleType = GWordT 32}),("crc",GEGSingle {singleType = GWordT 32}),("sqnum",GEGSingle {singleType = GWordT 64}),("offs",GEGSingle {singleType = GWordT 32}),("len",GEGSingle {singleType = GWordT 32}),("trans",GEGSingle {singleType = GWordT 8}),("otype",GEGSingle {singleType = GWordT 8}),("ounion",GEGSum [("TObjData",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("odata",GEGSingle {singleType = GWordT 32})] IsUnboxed),("TObjDel",GEGStruct [("id",GEGSingle {singleType = GWordT 64})] IsUnboxed),("TObjDentarr",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("nb_dentry",GEGSingle {singleType = GWordT 32}),("size",GEGSingle {singleType = GWordT 32}),("entries",GEGSingle {singleType = GWordT 32})] NotUnboxed),("TObjInode",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("size",GEGSingle {singleType = GWordT 64}),("atime_sec",GEGSingle {singleType = GWordT 64}),("ctime_sec",GEGSingle {singleType = GWordT 64}),("mtime_sec",GEGSingle {singleType = GWordT 64}),("nlink",GEGSingle {singleType = GWordT 32}),("uid",GEGSingle {singleType = GWordT 32}),("gid",GEGSingle {singleType = GWordT 32}),("mode",GEGSingle {singleType = GWordT 32}),("flags",GEGSingle {singleType = GWordT 32})] NotUnboxed),("TObjPad",GEGUnit),("TObjSuper",GEGStruct [("nb_eb",GEGSingle {singleType = GWordT 32}),("eb_size",GEGSingle {singleType = GWordT 32}),("io_size",GEGSingle {singleType = GWordT 32}),("nb_reserved_gc",GEGSingle {singleType = GWordT 32}),("nb_reserved_del",GEGSingle {singleType = GWordT 32}),("cur_eb",GEGSingle {singleType = GWordT 32}),("cur_offs",GEGSingle {singleType = GWordT 32}),("last_inum",GEGSingle {singleType = GWordT 32}),("next_sqnum",GEGSingle {singleType = GWordT 64})] NotUnboxed)])]

Function COGENT.deserialise_Obj 4 a@0.0 Word 32 a@0.1 Word 32 a@0.2 Word 32 mem Mem 7 a@0.0 Word 32 a@0.1.0 Word 32 a@0.1.1 Word 32 a@0.2.0 Word 32 a@0.2.1 Word 32 a@0.2.2 Word 32 mem Mem
# Function: deserialise_Obj_crc
#    >>Error: non-32 bit word in aggregate: [("magic",GEGSingle {singleType = GWordT 32}),("crc",GEGSingle {singleType = GWordT 32}),("sqnum",GEGSingle {singleType = GWordT 64}),("offs",GEGSingle {singleType = GWordT 32}),("len",GEGSingle {singleType = GWordT 32}),("trans",GEGSingle {singleType = GWordT 8}),("otype",GEGSingle {singleType = GWordT 8}),("ounion",GEGSum [("TObjData",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("odata",GEGSingle {singleType = GWordT 32})] IsUnboxed),("TObjDel",GEGStruct [("id",GEGSingle {singleType = GWordT 64})] IsUnboxed),("TObjDentarr",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("nb_dentry",GEGSingle {singleType = GWordT 32}),("size",GEGSingle {singleType = GWordT 32}),("entries",GEGSingle {singleType = GWordT 32})] NotUnboxed),("TObjInode",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("size",GEGSingle {singleType = GWordT 64}),("atime_sec",GEGSingle {singleType = GWordT 64}),("ctime_sec",GEGSingle {singleType = GWordT 64}),("mtime_sec",GEGSingle {singleType = GWordT 64}),("nlink",GEGSingle {singleType = GWordT 32}),("uid",GEGSingle {singleType = GWordT 32}),("gid",GEGSingle {singleType = GWordT 32}),("mode",GEGSingle {singleType = GWordT 32}),("flags",GEGSingle {singleType = GWordT 32})] NotUnboxed),("TObjPad",GEGUnit),("TObjSuper",GEGStruct [("nb_eb",GEGSingle {singleType = GWordT 32}),("eb_size",GEGSingle {singleType = GWordT 32}),("io_size",GEGSingle {singleType = GWordT 32}),("nb_reserved_gc",GEGSingle {singleType = GWordT 32}),("nb_reserved_del",GEGSingle {singleType = GWordT 32}),("cur_eb",GEGSingle {singleType = GWordT 32}),("cur_offs",GEGSingle {singleType = GWordT 32}),("last_inum",GEGSingle {singleType = GWordT 32}),("next_sqnum",GEGSingle {singleType = GWordT 64})] NotUnboxed)])]

Function COGENT.deserialise_Obj_crc 4 a@0.0 Word 32 a@0.1 Word 32 a@0.2 Word 32 mem Mem 7 a@0.0 Word 32 a@0.1.0 Word 32 a@0.1.1 Word 32 a@0.2.0 Word 32 a@0.2.1 Word 32 a@0.2.2 Word 32 mem Mem
# Function: read_super_loop
#    >>Error: non-32 bit word in aggregate: [("magic",GEGSingle {singleType = GWordT 32}),("crc",GEGSingle {singleType = GWordT 32}),("sqnum",GEGSingle {singleType = GWordT 64}),("offs",GEGSingle {singleType = GWordT 32}),("len",GEGSingle {singleType = GWordT 32}),("trans",GEGSingle {singleType = GWordT 8}),("otype",GEGSingle {singleType = GWordT 8}),("ounion",GEGSum [("TObjData",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("odata",GEGSingle {singleType = GWordT 32})] IsUnboxed),("TObjDel",GEGStruct [("id",GEGSingle {singleType = GWordT 64})] IsUnboxed),("TObjDentarr",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("nb_dentry",GEGSingle {singleType = GWordT 32}),("size",GEGSingle {singleType = GWordT 32}),("entries",GEGSingle {singleType = GWordT 32})] NotUnboxed),("TObjInode",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("size",GEGSingle {singleType = GWordT 64}),("atime_sec",GEGSingle {singleType = GWordT 64}),("ctime_sec",GEGSingle {singleType = GWordT 64}),("mtime_sec",GEGSingle {singleType = GWordT 64}),("nlink",GEGSingle {singleType = GWordT 32}),("uid",GEGSingle {singleType = GWordT 32}),("gid",GEGSingle {singleType = GWordT 32}),("mode",GEGSingle {singleType = GWordT 32}),("flags",GEGSingle {singleType = GWordT 32})] NotUnboxed),("TObjPad",GEGUnit),("TObjSuper",GEGStruct [("nb_eb",GEGSingle {singleType = GWordT 32}),("eb_size",GEGSingle {singleType = GWordT 32}),("io_size",GEGSingle {singleType = GWordT 32}),("nb_reserved_gc",GEGSingle {singleType = GWordT 32}),("nb_reserved_del",GEGSingle {singleType = GWordT 32}),("cur_eb",GEGSingle {singleType = GWordT 32}),("cur_offs",GEGSingle {singleType = GWordT 32}),("last_inum",GEGSingle {singleType = GWordT 32}),("next_sqnum",GEGSingle {singleType = GWordT 64})] NotUnboxed)])]

Function COGENT.read_super_loop 7 a@0.0.0 Word 32 a@0.0.1 Word 32 a@0.0.2 Word 32 a@0.1.0 Word 32 a@0.1.1 Word 32 a@0.2 Word 32 mem Mem 7 a@0.0.0 Word 32 a@0.0.1 Word 32 a@0.0.2 Word 32 a@0.1.0 Word 32 a@0.1.1 Word 32 a@0.1.2 Word 32 mem Mem
# Function: scan_trans_obj
#    >>Error: non-32 bit word in aggregate: [("magic",GEGSingle {singleType = GWordT 32}),("crc",GEGSingle {singleType = GWordT 32}),("sqnum",GEGSingle {singleType = GWordT 64}),("offs",GEGSingle {singleType = GWordT 32}),("len",GEGSingle {singleType = GWordT 32}),("trans",GEGSingle {singleType = GWordT 8}),("otype",GEGSingle {singleType = GWordT 8}),("ounion",GEGSum [("TObjData",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("odata",GEGSingle {singleType = GWordT 32})] IsUnboxed),("TObjDel",GEGStruct [("id",GEGSingle {singleType = GWordT 64})] IsUnboxed),("TObjDentarr",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("nb_dentry",GEGSingle {singleType = GWordT 32}),("size",GEGSingle {singleType = GWordT 32}),("entries",GEGSingle {singleType = GWordT 32})] NotUnboxed),("TObjInode",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("size",GEGSingle {singleType = GWordT 64}),("atime_sec",GEGSingle {singleType = GWordT 64}),("ctime_sec",GEGSingle {singleType = GWordT 64}),("mtime_sec",GEGSingle {singleType = GWordT 64}),("nlink",GEGSingle {singleType = GWordT 32}),("uid",GEGSingle {singleType = GWordT 32}),("gid",GEGSingle {singleType = GWordT 32}),("mode",GEGSingle {singleType = GWordT 32}),("flags",GEGSingle {singleType = GWordT 32})] NotUnboxed),("TObjPad",GEGUnit),("TObjSuper",GEGStruct [("nb_eb",GEGSingle {singleType = GWordT 32}),("eb_size",GEGSingle {singleType = GWordT 32}),("io_size",GEGSingle {singleType = GWordT 32}),("nb_reserved_gc",GEGSingle {singleType = GWordT 32}),("nb_reserved_del",GEGSingle {singleType = GWordT 32}),("cur_eb",GEGSingle {singleType = GWordT 32}),("cur_offs",GEGSingle {singleType = GWordT 32}),("last_inum",GEGSingle {singleType = GWordT 32}),("next_sqnum",GEGSingle {singleType = GWordT 64})] NotUnboxed)])]

Function COGENT.scan_trans_obj 8 a@0.0.0 Word 32 a@0.0.1 Word 32 a@0.0.2 Word 32 a@0.1.0 Word 32 a@0.1.1 Word 32 a@0.2.0 Word 32 a@0.2.1 Word 32 mem Mem 15 a@0.0 Word 32 a@0.1.0.0 Word 32 a@0.1.0.1 Word 32 a@0.1.0.2 Word 32 a@0.1.1.0 Word 32 a@0.1.1.1.0 Word 32 a@0.1.1.1.1 Word 32 a@0.1.1.2.0 Word 32 a@0.1.1.2.1 Word 32 a@0.2.0.0 Word 32 a@0.2.0.1 Word 32 a@0.2.0.2 Word 32 a@0.2.1.0 Word 32 a@0.2.1.1 Word 32 mem Mem
# Function: ostore_get_trans_size
#    >>Error: atom Fun

Function COGENT.ostore_get_trans_size 2 a@0 Word 32 mem Mem 2 a@0 Word 32 mem Mem
# Function: serialise_size_Array_ObjDentry
#    >>Error: atom Fun

Function COGENT.serialise_size_Array_ObjDentry 2 a@0 Word 32 mem Mem 2 a@0 Word 32 mem Mem
# Function: dentarr_del_dentry
#    >>Error: non-32 bit word in aggregate: [("id",GEGSingle {singleType = GWordT 64}),("nb_dentry",GEGSingle {singleType = GWordT 32}),("size",GEGSingle {singleType = GWordT 32}),("entries",GEGSingle {singleType = GWordT 32})]

Function COGENT.dentarr_del_dentry 4 a@0.0 Word 32 a@0.1 Word 32 a@0.2 Word 32 mem Mem 3 a@0.0 Word 32 a@0.1 Word 32 mem Mem
# Function: serialise_size_ObjDentarr
#    >>Error: non-32 bit word in aggregate: [("id",GEGSingle {singleType = GWordT 64}),("nb_dentry",GEGSingle {singleType = GWordT 32}),("size",GEGSingle {singleType = GWordT 32}),("entries",GEGSingle {singleType = GWordT 32})]

Function COGENT.serialise_size_ObjDentarr 2 a@0 Word 32 mem Mem 2 a@0 Word 32 mem Mem
# Function: obj_dentarr_or_del_new
#    >>Error: non-32 bit word in aggregate: [("id",GEGSingle {singleType = GWordT 64}),("nb_dentry",GEGSingle {singleType = GWordT 32}),("size",GEGSingle {singleType = GWordT 32}),("entries",GEGSingle {singleType = GWordT 32})]

Function COGENT.obj_dentarr_or_del_new 4 a@0.0 Word 32 a@0.1 Word 32 a@0.2 Word 32 mem Mem 6 a@0.0 Word 32 a@0.1.0 Word 32 a@0.1.1 Word 32 a@0.2.0 Word 32 a@0.2.1 Word 32 mem Mem
# Function: serialise_size_Obj
#    >>Error: non-32 bit word in aggregate: [("magic",GEGSingle {singleType = GWordT 32}),("crc",GEGSingle {singleType = GWordT 32}),("sqnum",GEGSingle {singleType = GWordT 64}),("offs",GEGSingle {singleType = GWordT 32}),("len",GEGSingle {singleType = GWordT 32}),("trans",GEGSingle {singleType = GWordT 8}),("otype",GEGSingle {singleType = GWordT 8}),("ounion",GEGSum [("TObjData",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("odata",GEGSingle {singleType = GWordT 32})] IsUnboxed),("TObjDel",GEGStruct [("id",GEGSingle {singleType = GWordT 64})] IsUnboxed),("TObjDentarr",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("nb_dentry",GEGSingle {singleType = GWordT 32}),("size",GEGSingle {singleType = GWordT 32}),("entries",GEGSingle {singleType = GWordT 32})] NotUnboxed),("TObjInode",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("size",GEGSingle {singleType = GWordT 64}),("atime_sec",GEGSingle {singleType = GWordT 64}),("ctime_sec",GEGSingle {singleType = GWordT 64}),("mtime_sec",GEGSingle {singleType = GWordT 64}),("nlink",GEGSingle {singleType = GWordT 32}),("uid",GEGSingle {singleType = GWordT 32}),("gid",GEGSingle {singleType = GWordT 32}),("mode",GEGSingle {singleType = GWordT 32}),("flags",GEGSingle {singleType = GWordT 32})] NotUnboxed),("TObjPad",GEGUnit),("TObjSuper",GEGStruct [("nb_eb",GEGSingle {singleType = GWordT 32}),("eb_size",GEGSingle {singleType = GWordT 32}),("io_size",GEGSingle {singleType = GWordT 32}),("nb_reserved_gc",GEGSingle {singleType = GWordT 32}),("nb_reserved_del",GEGSingle {singleType = GWordT 32}),("cur_eb",GEGSingle {singleType = GWordT 32}),("cur_offs",GEGSingle {singleType = GWordT 32}),("last_inum",GEGSingle {singleType = GWordT 32}),("next_sqnum",GEGSingle {singleType = GWordT 64})] NotUnboxed)])]

Function COGENT.serialise_size_Obj 2 a@0 Word 32 mem Mem 2 a@0 Word 32 mem Mem
# Function: dentarr_calculate_sz_change
#    >>Error: non-32 bit word in aggregate: [("magic",GEGSingle {singleType = GWordT 32}),("crc",GEGSingle {singleType = GWordT 32}),("sqnum",GEGSingle {singleType = GWordT 64}),("offs",GEGSingle {singleType = GWordT 32}),("len",GEGSingle {singleType = GWordT 32}),("trans",GEGSingle {singleType = GWordT 8}),("otype",GEGSingle {singleType = GWordT 8}),("ounion",GEGSum [("TObjData",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("odata",GEGSingle {singleType = GWordT 32})] IsUnboxed),("TObjDel",GEGStruct [("id",GEGSingle {singleType = GWordT 64})] IsUnboxed),("TObjDentarr",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("nb_dentry",GEGSingle {singleType = GWordT 32}),("size",GEGSingle {singleType = GWordT 32}),("entries",GEGSingle {singleType = GWordT 32})] NotUnboxed),("TObjInode",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("size",GEGSingle {singleType = GWordT 64}),("atime_sec",GEGSingle {singleType = GWordT 64}),("ctime_sec",GEGSingle {singleType = GWordT 64}),("mtime_sec",GEGSingle {singleType = GWordT 64}),("nlink",GEGSingle {singleType = GWordT 32}),("uid",GEGSingle {singleType = GWordT 32}),("gid",GEGSingle {singleType = GWordT 32}),("mode",GEGSingle {singleType = GWordT 32}),("flags",GEGSingle {singleType = GWordT 32})] NotUnboxed),("TObjPad",GEGUnit),("TObjSuper",GEGStruct [("nb_eb",GEGSingle {singleType = GWordT 32}),("eb_size",GEGSingle {singleType = GWordT 32}),("io_size",GEGSingle {singleType = GWordT 32}),("nb_reserved_gc",GEGSingle {singleType = GWordT 32}),("nb_reserved_del",GEGSingle {singleType = GWordT 32}),("cur_eb",GEGSingle {singleType = GWordT 32}),("cur_offs",GEGSingle {singleType = GWordT 32}),("last_inum",GEGSingle {singleType = GWordT 32}),("next_sqnum",GEGSingle {singleType = GWordT 64})] NotUnboxed)])]

Function COGENT.dentarr_calculate_sz_change 3 a@0.0 Bool a@0.1 Word 32 mem Mem 5 a@0.0 Word 32 a@0.1.0 Word 32 a@0.1.1 Word 32 a@0.1.2 Word 32 mem Mem
# Function: dentarr_del_calculate_sz_change
#    >>Error: non-32 bit word in aggregate: [("id",GEGSingle {singleType = GWordT 64}),("nb_dentry",GEGSingle {singleType = GWordT 32}),("size",GEGSingle {singleType = GWordT 32}),("entries",GEGSingle {singleType = GWordT 32})]

Function COGENT.dentarr_del_calculate_sz_change 4 a@0.0 Word 32 a@0.1 Word 32 a@0.2 Word 32 mem Mem 6 a@0.0.0 Word 32 a@0.0.1 Word 32 a@0.1.0 Word 32 a@0.1.1 Word 32 a@0.1.2 Word 32 mem Mem
# Function: obj_del_new
#    >>Error: non-32 bit word in aggregate: [("magic",GEGSingle {singleType = GWordT 32}),("crc",GEGSingle {singleType = GWordT 32}),("sqnum",GEGSingle {singleType = GWordT 64}),("offs",GEGSingle {singleType = GWordT 32}),("len",GEGSingle {singleType = GWordT 32}),("trans",GEGSingle {singleType = GWordT 8}),("otype",GEGSingle {singleType = GWordT 8}),("ounion",GEGSum [("TObjData",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("odata",GEGSingle {singleType = GWordT 32})] IsUnboxed),("TObjDel",GEGStruct [("id",GEGSingle {singleType = GWordT 64})] IsUnboxed),("TObjDentarr",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("nb_dentry",GEGSingle {singleType = GWordT 32}),("size",GEGSingle {singleType = GWordT 32}),("entries",GEGSingle {singleType = GWordT 32})] NotUnboxed),("TObjInode",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("size",GEGSingle {singleType = GWordT 64}),("atime_sec",GEGSingle {singleType = GWordT 64}),("ctime_sec",GEGSingle {singleType = GWordT 64}),("mtime_sec",GEGSingle {singleType = GWordT 64}),("nlink",GEGSingle {singleType = GWordT 32}),("uid",GEGSingle {singleType = GWordT 32}),("gid",GEGSingle {singleType = GWordT 32}),("mode",GEGSingle {singleType = GWordT 32}),("flags",GEGSingle {singleType = GWordT 32})] NotUnboxed),("TObjPad",GEGUnit),("TObjSuper",GEGStruct [("nb_eb",GEGSingle {singleType = GWordT 32}),("eb_size",GEGSingle {singleType = GWordT 32}),("io_size",GEGSingle {singleType = GWordT 32}),("nb_reserved_gc",GEGSingle {singleType = GWordT 32}),("nb_reserved_del",GEGSingle {singleType = GWordT 32}),("cur_eb",GEGSingle {singleType = GWordT 32}),("cur_offs",GEGSingle {singleType = GWordT 32}),("last_inum",GEGSingle {singleType = GWordT 32}),("next_sqnum",GEGSingle {singleType = GWordT 64})] NotUnboxed)])]

Function COGENT.obj_del_new 3 a@0.0 Word 32 a@0.1 Word 64 mem Mem 5 a@0.0 Word 32 a@0.1.0 Word 32 a@0.1.1 Word 32 a@0.1.2 Word 32 mem Mem
# Function: arrayobj_create2
#    >>Error: atom Fun

Function COGENT.arrayobj_create2 4 a@0.0 Word 32 a@0.1 Word 32 a@0.2 Word 32 mem Mem 6 a@0.0 Word 32 a@0.1.0 Word 32 a@0.1.1 Word 32 a@0.2.0 Word 32 a@0.2.1 Word 32 mem Mem
# Function: truncate_arrayobj_create
#    >>Error: atom Fun

Function COGENT.truncate_arrayobj_create 9 a@0.0 Word 32 a@0.1.0 Word 32 a@0.1.1 Word 32 a@0.1.2 Word 32 a@0.2.0 Word 32 a@0.2.1 Word 32 a@0.2.2 Word 32 a@0.3 Word 32 mem Mem 5 a@0.0 Word 32 a@0.1 Word 32 a@0.2.0 Word 32 a@0.2.1 Word 32 mem Mem
# Function: fsm_mark_ebnum_dirty
#    >>Error: atom Fun

Function COGENT.fsm_mark_ebnum_dirty 4 a@0.0 Word 32 a@0.1 Word 32 a@0.2 Word 32 mem Mem 2 a@0 Word 32 mem Mem
# Function: fsm_mark_dirty_recycle
#    >>Error: atom Fun

Function COGENT.fsm_mark_dirty_recycle 10 a@0.0 Word 32 a@0.1 Word 32 a@0.2 Word 32 a@0.3 Word 64 a@0.4.0 Word 32 a@0.4.1 Word 32 a@0.4.2 Word 32 a@0.4.3 Word 64 a@0.5 Word 32 mem Mem 3 a@0.0 Word 32 a@0.1 Word 32 mem Mem
# Function: fsm_mark_used
#    >>Error: atom Fun

Function COGENT.fsm_mark_used 4 a@0.0 Word 32 a@0.1 Word 32 a@0.2 Word 32 mem Mem 2 a@0 Word 32 mem Mem
# Function: fsm_alloc_eb
#    >>Error: atom Fun

Function COGENT.fsm_alloc_eb 4 a@0.0 Word 32 a@0.1 Word 32 a@0.2 Word 32 mem Mem 5 a@0.0 Word 32 a@0.1.0 Word 32 a@0.1.1 Word 32 a@0.1.2 Word 32 mem Mem
# Function: serialise_u8
#    >>Error: atom Fun

Function COGENT.serialise_u8 4 a@0.0 Word 32 a@0.1 Word 32 a@0.2 Word 8 mem Mem 2 a@0 Word 32 mem Mem
# Function: serialise_ObjDentry
#    >>Error: non-32 bit word in aggregate: [("ino",GEGSingle {singleType = GWordT 32}),("dtype",GEGSingle {singleType = GWordT 8}),("nlen",GEGSingle {singleType = GWordT 16}),("name",GEGSingle {singleType = GWordT 32})]

Function COGENT.serialise_ObjDentry 4 a@0.0 Word 32 a@0.1 Word 32 a@0.2 Word 32 mem Mem 3 a@0.0 Word 32 a@0.1 Word 32 mem Mem
# Function: serialise_Array_ObjDentry
#    >>Error: atom Fun

Function COGENT.serialise_Array_ObjDentry 4 a@0.0 Word 32 a@0.1 Word 32 a@0.2 Word 32 mem Mem 3 a@0.0 Word 32 a@0.1 Word 32 mem Mem
# Function: serialise_ObjDentarr
#    >>Error: non-32 bit word in aggregate: [("id",GEGSingle {singleType = GWordT 64}),("nb_dentry",GEGSingle {singleType = GWordT 32}),("size",GEGSingle {singleType = GWordT 32}),("entries",GEGSingle {singleType = GWordT 32})]

Function COGENT.serialise_ObjDentarr 4 a@0.0 Word 32 a@0.1 Word 32 a@0.2 Word 32 mem Mem 3 a@0.0 Word 32 a@0.1 Word 32 mem Mem
# Function: serialise_ObjHeader
#    >>Error: non-32 bit word in aggregate: [("magic",GEGSingle {singleType = GWordT 32}),("crc",GEGSingle {singleType = GWordT 32}),("sqnum",GEGSingle {singleType = GWordT 64}),("offs",GEGSingle {singleType = GWordT 32}),("len",GEGSingle {singleType = GWordT 32}),("trans",GEGSingle {singleType = GWordT 8}),("otype",GEGSingle {singleType = GWordT 8}),("ounion",GEGSum [("TObjData",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("odata",GEGSingle {singleType = GWordT 32})] IsUnboxed),("TObjDel",GEGStruct [("id",GEGSingle {singleType = GWordT 64})] IsUnboxed),("TObjDentarr",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("nb_dentry",GEGSingle {singleType = GWordT 32}),("size",GEGSingle {singleType = GWordT 32}),("entries",GEGSingle {singleType = GWordT 32})] NotUnboxed),("TObjInode",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("size",GEGSingle {singleType = GWordT 64}),("atime_sec",GEGSingle {singleType = GWordT 64}),("ctime_sec",GEGSingle {singleType = GWordT 64}),("mtime_sec",GEGSingle {singleType = GWordT 64}),("nlink",GEGSingle {singleType = GWordT 32}),("uid",GEGSingle {singleType = GWordT 32}),("gid",GEGSingle {singleType = GWordT 32}),("mode",GEGSingle {singleType = GWordT 32}),("flags",GEGSingle {singleType = GWordT 32})] NotUnboxed),("TObjPad",GEGUnit),("TObjSuper",GEGStruct [("nb_eb",GEGSingle {singleType = GWordT 32}),("eb_size",GEGSingle {singleType = GWordT 32}),("io_size",GEGSingle {singleType = GWordT 32}),("nb_reserved_gc",GEGSingle {singleType = GWordT 32}),("nb_reserved_del",GEGSingle {singleType = GWordT 32}),("cur_eb",GEGSingle {singleType = GWordT 32}),("cur_offs",GEGSingle {singleType = GWordT 32}),("last_inum",GEGSingle {singleType = GWordT 32}),("next_sqnum",GEGSingle {singleType = GWordT 64})] NotUnboxed)])]

Function COGENT.serialise_ObjHeader 4 a@0.0 Word 32 a@0.1 Word 32 a@0.2 Word 32 mem Mem 3 a@0.0 Word 32 a@0.1 Word 32 mem Mem
# Function: serialise_ObjInode
#    >>Error: non-32 bit word in aggregate: [("id",GEGSingle {singleType = GWordT 64}),("size",GEGSingle {singleType = GWordT 64}),("atime_sec",GEGSingle {singleType = GWordT 64}),("ctime_sec",GEGSingle {singleType = GWordT 64}),("mtime_sec",GEGSingle {singleType = GWordT 64}),("nlink",GEGSingle {singleType = GWordT 32}),("uid",GEGSingle {singleType = GWordT 32}),("gid",GEGSingle {singleType = GWordT 32}),("mode",GEGSingle {singleType = GWordT 32}),("flags",GEGSingle {singleType = GWordT 32})]

Function COGENT.serialise_ObjInode 4 a@0.0 Word 32 a@0.1 Word 32 a@0.2 Word 32 mem Mem 3 a@0.0 Word 32 a@0.1 Word 32 mem Mem
# Function: serialise_Obj
#    >>Error: non-32 bit word in aggregate: [("magic",GEGSingle {singleType = GWordT 32}),("crc",GEGSingle {singleType = GWordT 32}),("sqnum",GEGSingle {singleType = GWordT 64}),("offs",GEGSingle {singleType = GWordT 32}),("len",GEGSingle {singleType = GWordT 32}),("trans",GEGSingle {singleType = GWordT 8}),("otype",GEGSingle {singleType = GWordT 8}),("ounion",GEGSum [("TObjData",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("odata",GEGSingle {singleType = GWordT 32})] IsUnboxed),("TObjDel",GEGStruct [("id",GEGSingle {singleType = GWordT 64})] IsUnboxed),("TObjDentarr",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("nb_dentry",GEGSingle {singleType = GWordT 32}),("size",GEGSingle {singleType = GWordT 32}),("entries",GEGSingle {singleType = GWordT 32})] NotUnboxed),("TObjInode",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("size",GEGSingle {singleType = GWordT 64}),("atime_sec",GEGSingle {singleType = GWordT 64}),("ctime_sec",GEGSingle {singleType = GWordT 64}),("mtime_sec",GEGSingle {singleType = GWordT 64}),("nlink",GEGSingle {singleType = GWordT 32}),("uid",GEGSingle {singleType = GWordT 32}),("gid",GEGSingle {singleType = GWordT 32}),("mode",GEGSingle {singleType = GWordT 32}),("flags",GEGSingle {singleType = GWordT 32})] NotUnboxed),("TObjPad",GEGUnit),("TObjSuper",GEGStruct [("nb_eb",GEGSingle {singleType = GWordT 32}),("eb_size",GEGSingle {singleType = GWordT 32}),("io_size",GEGSingle {singleType = GWordT 32}),("nb_reserved_gc",GEGSingle {singleType = GWordT 32}),("nb_reserved_del",GEGSingle {singleType = GWordT 32}),("cur_eb",GEGSingle {singleType = GWordT 32}),("cur_offs",GEGSingle {singleType = GWordT 32}),("last_inum",GEGSingle {singleType = GWordT 32}),("next_sqnum",GEGSingle {singleType = GWordT 64})] NotUnboxed)])]

Function COGENT.serialise_Obj 4 a@0.0 Word 32 a@0.1 Word 32 a@0.2 Word 32 mem Mem 3 a@0.0 Word 32 a@0.1 Word 32 mem Mem
# Function: write_objects_loop_body
#    >>Error: non-32 bit word in aggregate: [("magic",GEGSingle {singleType = GWordT 32}),("crc",GEGSingle {singleType = GWordT 32}),("sqnum",GEGSingle {singleType = GWordT 64}),("offs",GEGSingle {singleType = GWordT 32}),("len",GEGSingle {singleType = GWordT 32}),("trans",GEGSingle {singleType = GWordT 8}),("otype",GEGSingle {singleType = GWordT 8}),("ounion",GEGSum [("TObjData",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("odata",GEGSingle {singleType = GWordT 32})] IsUnboxed),("TObjDel",GEGStruct [("id",GEGSingle {singleType = GWordT 64})] IsUnboxed),("TObjDentarr",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("nb_dentry",GEGSingle {singleType = GWordT 32}),("size",GEGSingle {singleType = GWordT 32}),("entries",GEGSingle {singleType = GWordT 32})] NotUnboxed),("TObjInode",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("size",GEGSingle {singleType = GWordT 64}),("atime_sec",GEGSingle {singleType = GWordT 64}),("ctime_sec",GEGSingle {singleType = GWordT 64}),("mtime_sec",GEGSingle {singleType = GWordT 64}),("nlink",GEGSingle {singleType = GWordT 32}),("uid",GEGSingle {singleType = GWordT 32}),("gid",GEGSingle {singleType = GWordT 32}),("mode",GEGSingle {singleType = GWordT 32}),("flags",GEGSingle {singleType = GWordT 32})] NotUnboxed),("TObjPad",GEGUnit),("TObjSuper",GEGStruct [("nb_eb",GEGSingle {singleType = GWordT 32}),("eb_size",GEGSingle {singleType = GWordT 32}),("io_size",GEGSingle {singleType = GWordT 32}),("nb_reserved_gc",GEGSingle {singleType = GWordT 32}),("nb_reserved_del",GEGSingle {singleType = GWordT 32}),("cur_eb",GEGSingle {singleType = GWordT 32}),("cur_offs",GEGSingle {singleType = GWordT 32}),("last_inum",GEGSingle {singleType = GWordT 32}),("next_sqnum",GEGSingle {singleType = GWordT 64})] NotUnboxed)])]

Function COGENT.write_objects_loop_body 7 a@0.0 Word 32 a@0.1.0 Word 32 a@0.1.1 Word 32 a@0.1.2 Word 64 a@0.1.3 Word 32 a@0.2 Word 32 mem Mem 10 a@0.0 Word 32 a@0.1.0 Word 32 a@0.1.1.0 Word 32 a@0.1.1.1 Word 32 a@0.2.0 Word 32 a@0.2.1.0 Word 32 a@0.2.1.1 Word 32 a@0.2.1.2 Word 64 a@0.2.1.3 Word 32 mem Mem
# Function: write_objects
#    >>Error: atom Fun

Function COGENT.write_objects 5 a@0.0 Word 32 a@0.1 Word 32 a@0.2 Word 64 a@0.3 Word 32 mem Mem 7 a@0.0.0 Word 32 a@0.0.1 Word 32 a@0.0.2 Word 32 a@0.1.0 Word 32 a@0.1.1 Word 32 a@0.1.2 Word 64 mem Mem
# Function: serialise_Obj_Super_crc
#    >>Error: non-32 bit word in aggregate: [("magic",GEGSingle {singleType = GWordT 32}),("crc",GEGSingle {singleType = GWordT 32}),("sqnum",GEGSingle {singleType = GWordT 64}),("offs",GEGSingle {singleType = GWordT 32}),("len",GEGSingle {singleType = GWordT 32}),("trans",GEGSingle {singleType = GWordT 8}),("otype",GEGSingle {singleType = GWordT 8}),("ounion",GEGSum [("TObjData",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("odata",GEGSingle {singleType = GWordT 32})] IsUnboxed),("TObjDel",GEGStruct [("id",GEGSingle {singleType = GWordT 64})] IsUnboxed),("TObjDentarr",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("nb_dentry",GEGSingle {singleType = GWordT 32}),("size",GEGSingle {singleType = GWordT 32}),("entries",GEGSingle {singleType = GWordT 32})] NotUnboxed),("TObjInode",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("size",GEGSingle {singleType = GWordT 64}),("atime_sec",GEGSingle {singleType = GWordT 64}),("ctime_sec",GEGSingle {singleType = GWordT 64}),("mtime_sec",GEGSingle {singleType = GWordT 64}),("nlink",GEGSingle {singleType = GWordT 32}),("uid",GEGSingle {singleType = GWordT 32}),("gid",GEGSingle {singleType = GWordT 32}),("mode",GEGSingle {singleType = GWordT 32}),("flags",GEGSingle {singleType = GWordT 32})] NotUnboxed),("TObjPad",GEGUnit),("TObjSuper",GEGStruct [("nb_eb",GEGSingle {singleType = GWordT 32}),("eb_size",GEGSingle {singleType = GWordT 32}),("io_size",GEGSingle {singleType = GWordT 32}),("nb_reserved_gc",GEGSingle {singleType = GWordT 32}),("nb_reserved_del",GEGSingle {singleType = GWordT 32}),("cur_eb",GEGSingle {singleType = GWordT 32}),("cur_offs",GEGSingle {singleType = GWordT 32}),("last_inum",GEGSingle {singleType = GWordT 32}),("next_sqnum",GEGSingle {singleType = GWordT 64})] NotUnboxed)])]

Function COGENT.serialise_Obj_Super_crc 6 a@0.0 Word 32 a@0.1 Word 32 a@0.2 Word 32 a@0.3 Word 32 a@0.4 Word 32 mem Mem 5 a@0.0 Word 32 a@0.1 Word 32 a@0.2 Word 32 a@0.3 Word 32 mem Mem
# Function: mount_read_super
#    >>Error: non-32 bit word in aggregate: [("next_inum",GEGSingle {singleType = GWordT 32}),("next_sqnum",GEGSingle {singleType = GWordT 64}),("rbuf",GEGStruct [("data",GEGSingle {singleType = GWordT 32}),("bound",GEGSingle {singleType = GWordT 32})] NotUnboxed),("wbuf_eb",GEGSingle {singleType = GWordT 32}),("wbuf",GEGStruct [("data",GEGSingle {singleType = GWordT 32}),("bound",GEGSingle {singleType = GWordT 32})] NotUnboxed),("used",GEGSingle {singleType = GWordT 32}),("sync_offs",GEGSingle {singleType = GWordT 32}),("opad",GEGStruct [("magic",GEGSingle {singleType = GWordT 32}),("crc",GEGSingle {singleType = GWordT 32}),("sqnum",GEGSingle {singleType = GWordT 64}),("offs",GEGSingle {singleType = GWordT 32}),("len",GEGSingle {singleType = GWordT 32}),("trans",GEGSingle {singleType = GWordT 8}),("otype",GEGSingle {singleType = GWordT 8}),("ounion",GEGSum [("TObjData",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("odata",GEGSingle {singleType = GWordT 32})] IsUnboxed),("TObjDel",GEGStruct [("id",GEGSingle {singleType = GWordT 64})] IsUnboxed),("TObjDentarr",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("nb_dentry",GEGSingle {singleType = GWordT 32}),("size",GEGSingle {singleType = GWordT 32}),("entries",GEGSingle {singleType = GWordT 32})] NotUnboxed),("TObjInode",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("size",GEGSingle {singleType = GWordT 64}),("atime_sec",GEGSingle {singleType = GWordT 64}),("ctime_sec",GEGSingle {singleType = GWordT 64}),("mtime_sec",GEGSingle {singleType = GWordT 64}),("nlink",GEGSingle {singleType = GWordT 32}),("uid",GEGSingle {singleType = GWordT 32}),("gid",GEGSingle {singleType = GWordT 32}),("mode",GEGSingle {singleType = GWordT 32}),("flags",GEGSingle {singleType = GWordT 32})] NotUnboxed),("TObjPad",GEGUnit),("TObjSuper",GEGStruct [("nb_eb",GEGSingle {singleType = GWordT 32}),("eb_size",GEGSingle {singleType = GWordT 32}),("io_size",GEGSingle {singleType = GWordT 32}),("nb_reserved_gc",GEGSingle {singleType = GWordT 32}),("nb_reserved_del",GEGSingle {singleType = GWordT 32}),("cur_eb",GEGSingle {singleType = GWordT 32}),("cur_offs",GEGSingle {singleType = GWordT 32}),("last_inum",GEGSingle {singleType = GWordT 32}),("next_sqnum",GEGSingle {singleType = GWordT 64})] NotUnboxed)])] NotUnboxed),("pools",GEGStruct [("idx",GEGSingle {singleType = GWordT 32}),("gim",GEGSingle {singleType = GWordT 32})] IsUnboxed),("oaddr",GEGStruct [("ebnum",GEGSingle {singleType = GWordT 32}),("offs",GEGSingle {singleType = GWordT 32}),("len",GEGSingle {singleType = GWordT 32}),("sqnum",GEGSingle {singleType = GWordT 64})] IsUnboxed),("fsm_st",GEGStruct [("nb_free_eb",GEGSingle {singleType = GWordT 32}),("used_eb",GEGSingle {singleType = GWordT 32}),("dirty_space",GEGSingle {singleType = GWordT 32}),("gim",GEGSingle {singleType = GWordT 32})] NotUnboxed),("index_st",GEGStruct [("addrs",GEGSingle {singleType = GWordT 32})] IsUnboxed),("ubi_vol",GEGSingle {singleType = GWordT 32})]

Function COGENT.mount_read_super 4 a@0.0 Word 32 a@0.1 Word 32 a@0.2 Word 32 mem Mem 7 a@0.0.0 Word 32 a@0.0.1 Word 32 a@0.0.2 Word 32 a@0.1.0 Word 32 a@0.1.1 Word 32 a@0.1.2 Word 32 mem Mem
# Function: ostore_new_wbuf
#    >>Error: non-32 bit word in aggregate: [("next_inum",GEGSingle {singleType = GWordT 32}),("next_sqnum",GEGSingle {singleType = GWordT 64}),("rbuf",GEGStruct [("data",GEGSingle {singleType = GWordT 32}),("bound",GEGSingle {singleType = GWordT 32})] NotUnboxed),("wbuf_eb",GEGSingle {singleType = GWordT 32}),("wbuf",GEGStruct [("data",GEGSingle {singleType = GWordT 32}),("bound",GEGSingle {singleType = GWordT 32})] NotUnboxed),("used",GEGSingle {singleType = GWordT 32}),("sync_offs",GEGSingle {singleType = GWordT 32}),("opad",GEGStruct [("magic",GEGSingle {singleType = GWordT 32}),("crc",GEGSingle {singleType = GWordT 32}),("sqnum",GEGSingle {singleType = GWordT 64}),("offs",GEGSingle {singleType = GWordT 32}),("len",GEGSingle {singleType = GWordT 32}),("trans",GEGSingle {singleType = GWordT 8}),("otype",GEGSingle {singleType = GWordT 8}),("ounion",GEGSum [("TObjData",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("odata",GEGSingle {singleType = GWordT 32})] IsUnboxed),("TObjDel",GEGStruct [("id",GEGSingle {singleType = GWordT 64})] IsUnboxed),("TObjDentarr",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("nb_dentry",GEGSingle {singleType = GWordT 32}),("size",GEGSingle {singleType = GWordT 32}),("entries",GEGSingle {singleType = GWordT 32})] NotUnboxed),("TObjInode",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("size",GEGSingle {singleType = GWordT 64}),("atime_sec",GEGSingle {singleType = GWordT 64}),("ctime_sec",GEGSingle {singleType = GWordT 64}),("mtime_sec",GEGSingle {singleType = GWordT 64}),("nlink",GEGSingle {singleType = GWordT 32}),("uid",GEGSingle {singleType = GWordT 32}),("gid",GEGSingle {singleType = GWordT 32}),("mode",GEGSingle {singleType = GWordT 32}),("flags",GEGSingle {singleType = GWordT 32})] NotUnboxed),("TObjPad",GEGUnit),("TObjSuper",GEGStruct [("nb_eb",GEGSingle {singleType = GWordT 32}),("eb_size",GEGSingle {singleType = GWordT 32}),("io_size",GEGSingle {singleType = GWordT 32}),("nb_reserved_gc",GEGSingle {singleType = GWordT 32}),("nb_reserved_del",GEGSingle {singleType = GWordT 32}),("cur_eb",GEGSingle {singleType = GWordT 32}),("cur_offs",GEGSingle {singleType = GWordT 32}),("last_inum",GEGSingle {singleType = GWordT 32}),("next_sqnum",GEGSingle {singleType = GWordT 64})] NotUnboxed)])] NotUnboxed),("pools",GEGStruct [("idx",GEGSingle {singleType = GWordT 32}),("gim",GEGSingle {singleType = GWordT 32})] IsUnboxed),("oaddr",GEGStruct [("ebnum",GEGSingle {singleType = GWordT 32}),("offs",GEGSingle {singleType = GWordT 32}),("len",GEGSingle {singleType = GWordT 32}),("sqnum",GEGSingle {singleType = GWordT 64})] IsUnboxed),("fsm_st",GEGStruct [("nb_free_eb",GEGSingle {singleType = GWordT 32}),("used_eb",GEGSingle {singleType = GWordT 32}),("dirty_space",GEGSingle {singleType = GWordT 32}),("gim",GEGSingle {singleType = GWordT 32})] NotUnboxed),("index_st",GEGStruct [("addrs",GEGSingle {singleType = GWordT 32})] IsUnboxed),("ubi_vol",GEGSingle {singleType = GWordT 32})]

Function COGENT.ostore_new_wbuf 4 a@0.0 Word 32 a@0.1 Word 32 a@0.2 Word 32 mem Mem 5 a@0.0 Word 32 a@0.1.0 Word 32 a@0.1.1 Word 32 a@0.1.2 Word 32 mem Mem
# Function: ostore_next_obj_id
#    >>Error: non-32 bit word in aggregate: [("next_inum",GEGSingle {singleType = GWordT 32}),("next_sqnum",GEGSingle {singleType = GWordT 64}),("rbuf",GEGStruct [("data",GEGSingle {singleType = GWordT 32}),("bound",GEGSingle {singleType = GWordT 32})] NotUnboxed),("wbuf_eb",GEGSingle {singleType = GWordT 32}),("wbuf",GEGStruct [("data",GEGSingle {singleType = GWordT 32}),("bound",GEGSingle {singleType = GWordT 32})] NotUnboxed),("used",GEGSingle {singleType = GWordT 32}),("sync_offs",GEGSingle {singleType = GWordT 32}),("opad",GEGStruct [("magic",GEGSingle {singleType = GWordT 32}),("crc",GEGSingle {singleType = GWordT 32}),("sqnum",GEGSingle {singleType = GWordT 64}),("offs",GEGSingle {singleType = GWordT 32}),("len",GEGSingle {singleType = GWordT 32}),("trans",GEGSingle {singleType = GWordT 8}),("otype",GEGSingle {singleType = GWordT 8}),("ounion",GEGSum [("TObjData",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("odata",GEGSingle {singleType = GWordT 32})] IsUnboxed),("TObjDel",GEGStruct [("id",GEGSingle {singleType = GWordT 64})] IsUnboxed),("TObjDentarr",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("nb_dentry",GEGSingle {singleType = GWordT 32}),("size",GEGSingle {singleType = GWordT 32}),("entries",GEGSingle {singleType = GWordT 32})] NotUnboxed),("TObjInode",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("size",GEGSingle {singleType = GWordT 64}),("atime_sec",GEGSingle {singleType = GWordT 64}),("ctime_sec",GEGSingle {singleType = GWordT 64}),("mtime_sec",GEGSingle {singleType = GWordT 64}),("nlink",GEGSingle {singleType = GWordT 32}),("uid",GEGSingle {singleType = GWordT 32}),("gid",GEGSingle {singleType = GWordT 32}),("mode",GEGSingle {singleType = GWordT 32}),("flags",GEGSingle {singleType = GWordT 32})] NotUnboxed),("TObjPad",GEGUnit),("TObjSuper",GEGStruct [("nb_eb",GEGSingle {singleType = GWordT 32}),("eb_size",GEGSingle {singleType = GWordT 32}),("io_size",GEGSingle {singleType = GWordT 32}),("nb_reserved_gc",GEGSingle {singleType = GWordT 32}),("nb_reserved_del",GEGSingle {singleType = GWordT 32}),("cur_eb",GEGSingle {singleType = GWordT 32}),("cur_offs",GEGSingle {singleType = GWordT 32}),("last_inum",GEGSingle {singleType = GWordT 32}),("next_sqnum",GEGSingle {singleType = GWordT 64})] NotUnboxed)])] NotUnboxed),("pools",GEGStruct [("idx",GEGSingle {singleType = GWordT 32}),("gim",GEGSingle {singleType = GWordT 32})] IsUnboxed),("oaddr",GEGStruct [("ebnum",GEGSingle {singleType = GWordT 32}),("offs",GEGSingle {singleType = GWordT 32}),("len",GEGSingle {singleType = GWordT 32}),("sqnum",GEGSingle {singleType = GWordT 64})] IsUnboxed),("fsm_st",GEGStruct [("nb_free_eb",GEGSingle {singleType = GWordT 32}),("used_eb",GEGSingle {singleType = GWordT 32}),("dirty_space",GEGSingle {singleType = GWordT 32}),("gim",GEGSingle {singleType = GWordT 32})] NotUnboxed),("index_st",GEGStruct [("addrs",GEGSingle {singleType = GWordT 32})] IsUnboxed),("ubi_vol",GEGSingle {singleType = GWordT 32})]

Function COGENT.ostore_next_obj_id 4 a@0.0 Word 32 a@0.1 Word 32 a@0.2 Word 64 mem Mem 4 a@0.0 Word 32 a@0.1 Word 32 a@0.2 Word 64 mem Mem
# Function: ostore_read
#    >>Error: non-32 bit word in aggregate: [("next_inum",GEGSingle {singleType = GWordT 32}),("next_sqnum",GEGSingle {singleType = GWordT 64}),("rbuf",GEGStruct [("data",GEGSingle {singleType = GWordT 32}),("bound",GEGSingle {singleType = GWordT 32})] NotUnboxed),("wbuf_eb",GEGSingle {singleType = GWordT 32}),("wbuf",GEGStruct [("data",GEGSingle {singleType = GWordT 32}),("bound",GEGSingle {singleType = GWordT 32})] NotUnboxed),("used",GEGSingle {singleType = GWordT 32}),("sync_offs",GEGSingle {singleType = GWordT 32}),("opad",GEGStruct [("magic",GEGSingle {singleType = GWordT 32}),("crc",GEGSingle {singleType = GWordT 32}),("sqnum",GEGSingle {singleType = GWordT 64}),("offs",GEGSingle {singleType = GWordT 32}),("len",GEGSingle {singleType = GWordT 32}),("trans",GEGSingle {singleType = GWordT 8}),("otype",GEGSingle {singleType = GWordT 8}),("ounion",GEGSum [("TObjData",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("odata",GEGSingle {singleType = GWordT 32})] IsUnboxed),("TObjDel",GEGStruct [("id",GEGSingle {singleType = GWordT 64})] IsUnboxed),("TObjDentarr",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("nb_dentry",GEGSingle {singleType = GWordT 32}),("size",GEGSingle {singleType = GWordT 32}),("entries",GEGSingle {singleType = GWordT 32})] NotUnboxed),("TObjInode",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("size",GEGSingle {singleType = GWordT 64}),("atime_sec",GEGSingle {singleType = GWordT 64}),("ctime_sec",GEGSingle {singleType = GWordT 64}),("mtime_sec",GEGSingle {singleType = GWordT 64}),("nlink",GEGSingle {singleType = GWordT 32}),("uid",GEGSingle {singleType = GWordT 32}),("gid",GEGSingle {singleType = GWordT 32}),("mode",GEGSingle {singleType = GWordT 32}),("flags",GEGSingle {singleType = GWordT 32})] NotUnboxed),("TObjPad",GEGUnit),("TObjSuper",GEGStruct [("nb_eb",GEGSingle {singleType = GWordT 32}),("eb_size",GEGSingle {singleType = GWordT 32}),("io_size",GEGSingle {singleType = GWordT 32}),("nb_reserved_gc",GEGSingle {singleType = GWordT 32}),("nb_reserved_del",GEGSingle {singleType = GWordT 32}),("cur_eb",GEGSingle {singleType = GWordT 32}),("cur_offs",GEGSingle {singleType = GWordT 32}),("last_inum",GEGSingle {singleType = GWordT 32}),("next_sqnum",GEGSingle {singleType = GWordT 64})] NotUnboxed)])] NotUnboxed),("pools",GEGStruct [("idx",GEGSingle {singleType = GWordT 32}),("gim",GEGSingle {singleType = GWordT 32})] IsUnboxed),("oaddr",GEGStruct [("ebnum",GEGSingle {singleType = GWordT 32}),("offs",GEGSingle {singleType = GWordT 32}),("len",GEGSingle {singleType = GWordT 32}),("sqnum",GEGSingle {singleType = GWordT 64})] IsUnboxed),("fsm_st",GEGStruct [("nb_free_eb",GEGSingle {singleType = GWordT 32}),("used_eb",GEGSingle {singleType = GWordT 32}),("dirty_space",GEGSingle {singleType = GWordT 32}),("gim",GEGSingle {singleType = GWordT 32})] NotUnboxed),("index_st",GEGStruct [("addrs",GEGSingle {singleType = GWordT 32})] IsUnboxed),("ubi_vol",GEGSingle {singleType = GWordT 32})]

Function COGENT.ostore_read 5 a@0.0 Word 32 a@0.1 Word 32 a@0.2 Word 32 a@0.3 Word 64 mem Mem 6 a@0.0.0 Word 32 a@0.0.1 Word 32 a@0.1.0 Word 32 a@0.1.1 Word 32 a@0.1.2 Word 32 mem Mem
# Function: ostore_write_buf
#    >>Error: non-32 bit word in aggregate: [("next_inum",GEGSingle {singleType = GWordT 32}),("next_sqnum",GEGSingle {singleType = GWordT 64}),("rbuf",GEGStruct [("data",GEGSingle {singleType = GWordT 32}),("bound",GEGSingle {singleType = GWordT 32})] NotUnboxed),("wbuf_eb",GEGSingle {singleType = GWordT 32}),("wbuf",GEGStruct [("data",GEGSingle {singleType = GWordT 32}),("bound",GEGSingle {singleType = GWordT 32})] NotUnboxed),("used",GEGSingle {singleType = GWordT 32}),("sync_offs",GEGSingle {singleType = GWordT 32}),("opad",GEGStruct [("magic",GEGSingle {singleType = GWordT 32}),("crc",GEGSingle {singleType = GWordT 32}),("sqnum",GEGSingle {singleType = GWordT 64}),("offs",GEGSingle {singleType = GWordT 32}),("len",GEGSingle {singleType = GWordT 32}),("trans",GEGSingle {singleType = GWordT 8}),("otype",GEGSingle {singleType = GWordT 8}),("ounion",GEGSum [("TObjData",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("odata",GEGSingle {singleType = GWordT 32})] IsUnboxed),("TObjDel",GEGStruct [("id",GEGSingle {singleType = GWordT 64})] IsUnboxed),("TObjDentarr",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("nb_dentry",GEGSingle {singleType = GWordT 32}),("size",GEGSingle {singleType = GWordT 32}),("entries",GEGSingle {singleType = GWordT 32})] NotUnboxed),("TObjInode",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("size",GEGSingle {singleType = GWordT 64}),("atime_sec",GEGSingle {singleType = GWordT 64}),("ctime_sec",GEGSingle {singleType = GWordT 64}),("mtime_sec",GEGSingle {singleType = GWordT 64}),("nlink",GEGSingle {singleType = GWordT 32}),("uid",GEGSingle {singleType = GWordT 32}),("gid",GEGSingle {singleType = GWordT 32}),("mode",GEGSingle {singleType = GWordT 32}),("flags",GEGSingle {singleType = GWordT 32})] NotUnboxed),("TObjPad",GEGUnit),("TObjSuper",GEGStruct [("nb_eb",GEGSingle {singleType = GWordT 32}),("eb_size",GEGSingle {singleType = GWordT 32}),("io_size",GEGSingle {singleType = GWordT 32}),("nb_reserved_gc",GEGSingle {singleType = GWordT 32}),("nb_reserved_del",GEGSingle {singleType = GWordT 32}),("cur_eb",GEGSingle {singleType = GWordT 32}),("cur_offs",GEGSingle {singleType = GWordT 32}),("last_inum",GEGSingle {singleType = GWordT 32}),("next_sqnum",GEGSingle {singleType = GWordT 64})] NotUnboxed)])] NotUnboxed),("pools",GEGStruct [("idx",GEGSingle {singleType = GWordT 32}),("gim",GEGSingle {singleType = GWordT 32})] IsUnboxed),("oaddr",GEGStruct [("ebnum",GEGSingle {singleType = GWordT 32}),("offs",GEGSingle {singleType = GWordT 32}),("len",GEGSingle {singleType = GWordT 32}),("sqnum",GEGSingle {singleType = GWordT 64})] IsUnboxed),("fsm_st",GEGStruct [("nb_free_eb",GEGSingle {singleType = GWordT 32}),("used_eb",GEGSingle {singleType = GWordT 32}),("dirty_space",GEGSingle {singleType = GWordT 32}),("gim",GEGSingle {singleType = GWordT 32})] NotUnboxed),("index_st",GEGStruct [("addrs",GEGSingle {singleType = GWordT 32})] IsUnboxed),("ubi_vol",GEGSingle {singleType = GWordT 32})]

Function COGENT.ostore_write_buf 7 a@0.0 Word 32 a@0.1 Word 32 a@0.2 Word 32 a@0.3 Word 32 a@0.4 Word 32 a@0.5 Word 32 mem Mem 6 a@0.0.0 Word 32 a@0.0.1 Word 32 a@0.1.0 Word 32 a@0.1.1 Word 32 a@0.1.2 Word 32 mem Mem
# Function: prepare_wbuf
#    >>Error: non-32 bit word in aggregate: [("next_inum",GEGSingle {singleType = GWordT 32}),("next_sqnum",GEGSingle {singleType = GWordT 64}),("rbuf",GEGStruct [("data",GEGSingle {singleType = GWordT 32}),("bound",GEGSingle {singleType = GWordT 32})] NotUnboxed),("wbuf_eb",GEGSingle {singleType = GWordT 32}),("wbuf",GEGStruct [("data",GEGSingle {singleType = GWordT 32}),("bound",GEGSingle {singleType = GWordT 32})] NotUnboxed),("used",GEGSingle {singleType = GWordT 32}),("sync_offs",GEGSingle {singleType = GWordT 32}),("opad",GEGStruct [("magic",GEGSingle {singleType = GWordT 32}),("crc",GEGSingle {singleType = GWordT 32}),("sqnum",GEGSingle {singleType = GWordT 64}),("offs",GEGSingle {singleType = GWordT 32}),("len",GEGSingle {singleType = GWordT 32}),("trans",GEGSingle {singleType = GWordT 8}),("otype",GEGSingle {singleType = GWordT 8}),("ounion",GEGSum [("TObjData",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("odata",GEGSingle {singleType = GWordT 32})] IsUnboxed),("TObjDel",GEGStruct [("id",GEGSingle {singleType = GWordT 64})] IsUnboxed),("TObjDentarr",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("nb_dentry",GEGSingle {singleType = GWordT 32}),("size",GEGSingle {singleType = GWordT 32}),("entries",GEGSingle {singleType = GWordT 32})] NotUnboxed),("TObjInode",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("size",GEGSingle {singleType = GWordT 64}),("atime_sec",GEGSingle {singleType = GWordT 64}),("ctime_sec",GEGSingle {singleType = GWordT 64}),("mtime_sec",GEGSingle {singleType = GWordT 64}),("nlink",GEGSingle {singleType = GWordT 32}),("uid",GEGSingle {singleType = GWordT 32}),("gid",GEGSingle {singleType = GWordT 32}),("mode",GEGSingle {singleType = GWordT 32}),("flags",GEGSingle {singleType = GWordT 32})] NotUnboxed),("TObjPad",GEGUnit),("TObjSuper",GEGStruct [("nb_eb",GEGSingle {singleType = GWordT 32}),("eb_size",GEGSingle {singleType = GWordT 32}),("io_size",GEGSingle {singleType = GWordT 32}),("nb_reserved_gc",GEGSingle {singleType = GWordT 32}),("nb_reserved_del",GEGSingle {singleType = GWordT 32}),("cur_eb",GEGSingle {singleType = GWordT 32}),("cur_offs",GEGSingle {singleType = GWordT 32}),("last_inum",GEGSingle {singleType = GWordT 32}),("next_sqnum",GEGSingle {singleType = GWordT 64})] NotUnboxed)])] NotUnboxed),("pools",GEGStruct [("idx",GEGSingle {singleType = GWordT 32}),("gim",GEGSingle {singleType = GWordT 32})] IsUnboxed),("oaddr",GEGStruct [("ebnum",GEGSingle {singleType = GWordT 32}),("offs",GEGSingle {singleType = GWordT 32}),("len",GEGSingle {singleType = GWordT 32}),("sqnum",GEGSingle {singleType = GWordT 64})] IsUnboxed),("fsm_st",GEGStruct [("nb_free_eb",GEGSingle {singleType = GWordT 32}),("used_eb",GEGSingle {singleType = GWordT 32}),("dirty_space",GEGSingle {singleType = GWordT 32}),("gim",GEGSingle {singleType = GWordT 32})] NotUnboxed),("index_st",GEGStruct [("addrs",GEGSingle {singleType = GWordT 32})] IsUnboxed),("ubi_vol",GEGSingle {singleType = GWordT 32})]

Function COGENT.prepare_wbuf 4 a@0.0 Word 32 a@0.1 Word 32 a@0.2 Word 32 mem Mem 5 a@0.0 Word 32 a@0.1.0 Word 32 a@0.1.1 Word 32 a@0.1.2 Word 32 mem Mem
# Function: mount_recover
#    >>Error: non-32 bit word in aggregate: [("next_inum",GEGSingle {singleType = GWordT 32}),("next_sqnum",GEGSingle {singleType = GWordT 64}),("rbuf",GEGStruct [("data",GEGSingle {singleType = GWordT 32}),("bound",GEGSingle {singleType = GWordT 32})] NotUnboxed),("wbuf_eb",GEGSingle {singleType = GWordT 32}),("wbuf",GEGStruct [("data",GEGSingle {singleType = GWordT 32}),("bound",GEGSingle {singleType = GWordT 32})] NotUnboxed),("used",GEGSingle {singleType = GWordT 32}),("sync_offs",GEGSingle {singleType = GWordT 32}),("opad",GEGStruct [("magic",GEGSingle {singleType = GWordT 32}),("crc",GEGSingle {singleType = GWordT 32}),("sqnum",GEGSingle {singleType = GWordT 64}),("offs",GEGSingle {singleType = GWordT 32}),("len",GEGSingle {singleType = GWordT 32}),("trans",GEGSingle {singleType = GWordT 8}),("otype",GEGSingle {singleType = GWordT 8}),("ounion",GEGSum [("TObjData",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("odata",GEGSingle {singleType = GWordT 32})] IsUnboxed),("TObjDel",GEGStruct [("id",GEGSingle {singleType = GWordT 64})] IsUnboxed),("TObjDentarr",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("nb_dentry",GEGSingle {singleType = GWordT 32}),("size",GEGSingle {singleType = GWordT 32}),("entries",GEGSingle {singleType = GWordT 32})] NotUnboxed),("TObjInode",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("size",GEGSingle {singleType = GWordT 64}),("atime_sec",GEGSingle {singleType = GWordT 64}),("ctime_sec",GEGSingle {singleType = GWordT 64}),("mtime_sec",GEGSingle {singleType = GWordT 64}),("nlink",GEGSingle {singleType = GWordT 32}),("uid",GEGSingle {singleType = GWordT 32}),("gid",GEGSingle {singleType = GWordT 32}),("mode",GEGSingle {singleType = GWordT 32}),("flags",GEGSingle {singleType = GWordT 32})] NotUnboxed),("TObjPad",GEGUnit),("TObjSuper",GEGStruct [("nb_eb",GEGSingle {singleType = GWordT 32}),("eb_size",GEGSingle {singleType = GWordT 32}),("io_size",GEGSingle {singleType = GWordT 32}),("nb_reserved_gc",GEGSingle {singleType = GWordT 32}),("nb_reserved_del",GEGSingle {singleType = GWordT 32}),("cur_eb",GEGSingle {singleType = GWordT 32}),("cur_offs",GEGSingle {singleType = GWordT 32}),("last_inum",GEGSingle {singleType = GWordT 32}),("next_sqnum",GEGSingle {singleType = GWordT 64})] NotUnboxed)])] NotUnboxed),("pools",GEGStruct [("idx",GEGSingle {singleType = GWordT 32}),("gim",GEGSingle {singleType = GWordT 32})] IsUnboxed),("oaddr",GEGStruct [("ebnum",GEGSingle {singleType = GWordT 32}),("offs",GEGSingle {singleType = GWordT 32}),("len",GEGSingle {singleType = GWordT 32}),("sqnum",GEGSingle {singleType = GWordT 64})] IsUnboxed),("fsm_st",GEGStruct [("nb_free_eb",GEGSingle {singleType = GWordT 32}),("used_eb",GEGSingle {singleType = GWordT 32}),("dirty_space",GEGSingle {singleType = GWordT 32}),("gim",GEGSingle {singleType = GWordT 32})] NotUnboxed),("index_st",GEGStruct [("addrs",GEGSingle {singleType = GWordT 32})] IsUnboxed),("ubi_vol",GEGSingle {singleType = GWordT 32})]

Function COGENT.mount_recover 4 a@0.0 Word 32 a@0.1 Word 32 a@0.2 Word 32 mem Mem 7 a@0.0.0 Word 32 a@0.0.1 Word 32 a@0.0.2 Word 32 a@0.1.0 Word 32 a@0.1.1 Word 32 a@0.1.2 Bool mem Mem
# Function: ostore_sync
#    >>Error: non-32 bit word in aggregate: [("next_inum",GEGSingle {singleType = GWordT 32}),("next_sqnum",GEGSingle {singleType = GWordT 64}),("rbuf",GEGStruct [("data",GEGSingle {singleType = GWordT 32}),("bound",GEGSingle {singleType = GWordT 32})] NotUnboxed),("wbuf_eb",GEGSingle {singleType = GWordT 32}),("wbuf",GEGStruct [("data",GEGSingle {singleType = GWordT 32}),("bound",GEGSingle {singleType = GWordT 32})] NotUnboxed),("used",GEGSingle {singleType = GWordT 32}),("sync_offs",GEGSingle {singleType = GWordT 32}),("opad",GEGStruct [("magic",GEGSingle {singleType = GWordT 32}),("crc",GEGSingle {singleType = GWordT 32}),("sqnum",GEGSingle {singleType = GWordT 64}),("offs",GEGSingle {singleType = GWordT 32}),("len",GEGSingle {singleType = GWordT 32}),("trans",GEGSingle {singleType = GWordT 8}),("otype",GEGSingle {singleType = GWordT 8}),("ounion",GEGSum [("TObjData",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("odata",GEGSingle {singleType = GWordT 32})] IsUnboxed),("TObjDel",GEGStruct [("id",GEGSingle {singleType = GWordT 64})] IsUnboxed),("TObjDentarr",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("nb_dentry",GEGSingle {singleType = GWordT 32}),("size",GEGSingle {singleType = GWordT 32}),("entries",GEGSingle {singleType = GWordT 32})] NotUnboxed),("TObjInode",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("size",GEGSingle {singleType = GWordT 64}),("atime_sec",GEGSingle {singleType = GWordT 64}),("ctime_sec",GEGSingle {singleType = GWordT 64}),("mtime_sec",GEGSingle {singleType = GWordT 64}),("nlink",GEGSingle {singleType = GWordT 32}),("uid",GEGSingle {singleType = GWordT 32}),("gid",GEGSingle {singleType = GWordT 32}),("mode",GEGSingle {singleType = GWordT 32}),("flags",GEGSingle {singleType = GWordT 32})] NotUnboxed),("TObjPad",GEGUnit),("TObjSuper",GEGStruct [("nb_eb",GEGSingle {singleType = GWordT 32}),("eb_size",GEGSingle {singleType = GWordT 32}),("io_size",GEGSingle {singleType = GWordT 32}),("nb_reserved_gc",GEGSingle {singleType = GWordT 32}),("nb_reserved_del",GEGSingle {singleType = GWordT 32}),("cur_eb",GEGSingle {singleType = GWordT 32}),("cur_offs",GEGSingle {singleType = GWordT 32}),("last_inum",GEGSingle {singleType = GWordT 32}),("next_sqnum",GEGSingle {singleType = GWordT 64})] NotUnboxed)])] NotUnboxed),("pools",GEGStruct [("idx",GEGSingle {singleType = GWordT 32}),("gim",GEGSingle {singleType = GWordT 32})] IsUnboxed),("oaddr",GEGStruct [("ebnum",GEGSingle {singleType = GWordT 32}),("offs",GEGSingle {singleType = GWordT 32}),("len",GEGSingle {singleType = GWordT 32}),("sqnum",GEGSingle {singleType = GWordT 64})] IsUnboxed),("fsm_st",GEGStruct [("nb_free_eb",GEGSingle {singleType = GWordT 32}),("used_eb",GEGSingle {singleType = GWordT 32}),("dirty_space",GEGSingle {singleType = GWordT 32}),("gim",GEGSingle {singleType = GWordT 32})] NotUnboxed),("index_st",GEGStruct [("addrs",GEGSingle {singleType = GWordT 32})] IsUnboxed),("ubi_vol",GEGSingle {singleType = GWordT 32})]

Function COGENT.ostore_sync 5 a@0.0 Word 32 a@0.1 Word 32 a@0.2 Word 32 a@0.3 Word 32 mem Mem 6 a@0.0.0 Word 32 a@0.0.1 Word 32 a@0.1.0 Word 32 a@0.1.1 Word 32 a@0.1.2 Word 32 mem Mem
# Function: ostore_write_super
#    >>Error: non-32 bit word in aggregate: [("next_inum",GEGSingle {singleType = GWordT 32}),("next_sqnum",GEGSingle {singleType = GWordT 64}),("rbuf",GEGStruct [("data",GEGSingle {singleType = GWordT 32}),("bound",GEGSingle {singleType = GWordT 32})] NotUnboxed),("wbuf_eb",GEGSingle {singleType = GWordT 32}),("wbuf",GEGStruct [("data",GEGSingle {singleType = GWordT 32}),("bound",GEGSingle {singleType = GWordT 32})] NotUnboxed),("used",GEGSingle {singleType = GWordT 32}),("sync_offs",GEGSingle {singleType = GWordT 32}),("opad",GEGStruct [("magic",GEGSingle {singleType = GWordT 32}),("crc",GEGSingle {singleType = GWordT 32}),("sqnum",GEGSingle {singleType = GWordT 64}),("offs",GEGSingle {singleType = GWordT 32}),("len",GEGSingle {singleType = GWordT 32}),("trans",GEGSingle {singleType = GWordT 8}),("otype",GEGSingle {singleType = GWordT 8}),("ounion",GEGSum [("TObjData",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("odata",GEGSingle {singleType = GWordT 32})] IsUnboxed),("TObjDel",GEGStruct [("id",GEGSingle {singleType = GWordT 64})] IsUnboxed),("TObjDentarr",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("nb_dentry",GEGSingle {singleType = GWordT 32}),("size",GEGSingle {singleType = GWordT 32}),("entries",GEGSingle {singleType = GWordT 32})] NotUnboxed),("TObjInode",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("size",GEGSingle {singleType = GWordT 64}),("atime_sec",GEGSingle {singleType = GWordT 64}),("ctime_sec",GEGSingle {singleType = GWordT 64}),("mtime_sec",GEGSingle {singleType = GWordT 64}),("nlink",GEGSingle {singleType = GWordT 32}),("uid",GEGSingle {singleType = GWordT 32}),("gid",GEGSingle {singleType = GWordT 32}),("mode",GEGSingle {singleType = GWordT 32}),("flags",GEGSingle {singleType = GWordT 32})] NotUnboxed),("TObjPad",GEGUnit),("TObjSuper",GEGStruct [("nb_eb",GEGSingle {singleType = GWordT 32}),("eb_size",GEGSingle {singleType = GWordT 32}),("io_size",GEGSingle {singleType = GWordT 32}),("nb_reserved_gc",GEGSingle {singleType = GWordT 32}),("nb_reserved_del",GEGSingle {singleType = GWordT 32}),("cur_eb",GEGSingle {singleType = GWordT 32}),("cur_offs",GEGSingle {singleType = GWordT 32}),("last_inum",GEGSingle {singleType = GWordT 32}),("next_sqnum",GEGSingle {singleType = GWordT 64})] NotUnboxed)])] NotUnboxed),("pools",GEGStruct [("idx",GEGSingle {singleType = GWordT 32}),("gim",GEGSingle {singleType = GWordT 32})] IsUnboxed),("oaddr",GEGStruct [("ebnum",GEGSingle {singleType = GWordT 32}),("offs",GEGSingle {singleType = GWordT 32}),("len",GEGSingle {singleType = GWordT 32}),("sqnum",GEGSingle {singleType = GWordT 64})] IsUnboxed),("fsm_st",GEGStruct [("nb_free_eb",GEGSingle {singleType = GWordT 32}),("used_eb",GEGSingle {singleType = GWordT 32}),("dirty_space",GEGSingle {singleType = GWordT 32}),("gim",GEGSingle {singleType = GWordT 32})] NotUnboxed),("index_st",GEGStruct [("addrs",GEGSingle {singleType = GWordT 32})] IsUnboxed),("ubi_vol",GEGSingle {singleType = GWordT 32})]

Function COGENT.ostore_write_super 4 a@0.0 Word 32 a@0.1 Word 32 a@0.2 Word 32 mem Mem 7 a@0.0.0 Word 32 a@0.0.1 Word 32 a@0.0.2 Word 32 a@0.1.0 Word 32 a@0.1.1 Word 32 a@0.1.2 Word 32 mem Mem
# Function: read_next_dentry
#    >>Error: non-32 bit word in aggregate: [("id",GEGSingle {singleType = GWordT 64}),("nb_dentry",GEGSingle {singleType = GWordT 32}),("size",GEGSingle {singleType = GWordT 32}),("entries",GEGSingle {singleType = GWordT 32})]

Function COGENT.read_next_dentry 5 a@0.0 Word 32 a@0.1 Word 32 a@0.2 Word 32 a@0.3 Word 32 mem Mem 7 a@0.0.0 Word 32 a@0.0.1 Word 32 a@0.0.2 Word 32 a@0.1.0 Word 32 a@0.1.1 Word 32 a@0.1.2 Bool mem Mem
# Function: readdir_loop
#    >>Error: atom Fun

Function COGENT.readdir_loop 7 a@0.0.0 Word 32 a@0.0.1 Word 32 a@0.0.2 Word 32 a@0.0.3 Word 32 a@0.1 Word 32 a@0.2 Word 64 mem Mem 10 a@0.0.0 Word 32 a@0.0.1 Word 32 a@0.0.2 Word 32 a@0.0.3 Word 32 a@0.1.0 Word 32 a@0.1.1.0 Word 32 a@0.1.1.1 Word 32 a@0.1.1.2 Bool a@0.1.2 Word 32 mem Mem
# Function: read_or_create_dentarr
#    >>Error: non-32 bit word in aggregate: [("magic",GEGSingle {singleType = GWordT 32}),("crc",GEGSingle {singleType = GWordT 32}),("sqnum",GEGSingle {singleType = GWordT 64}),("offs",GEGSingle {singleType = GWordT 32}),("len",GEGSingle {singleType = GWordT 32}),("trans",GEGSingle {singleType = GWordT 8}),("otype",GEGSingle {singleType = GWordT 8}),("ounion",GEGSum [("TObjData",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("odata",GEGSingle {singleType = GWordT 32})] IsUnboxed),("TObjDel",GEGStruct [("id",GEGSingle {singleType = GWordT 64})] IsUnboxed),("TObjDentarr",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("nb_dentry",GEGSingle {singleType = GWordT 32}),("size",GEGSingle {singleType = GWordT 32}),("entries",GEGSingle {singleType = GWordT 32})] NotUnboxed),("TObjInode",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("size",GEGSingle {singleType = GWordT 64}),("atime_sec",GEGSingle {singleType = GWordT 64}),("ctime_sec",GEGSingle {singleType = GWordT 64}),("mtime_sec",GEGSingle {singleType = GWordT 64}),("nlink",GEGSingle {singleType = GWordT 32}),("uid",GEGSingle {singleType = GWordT 32}),("gid",GEGSingle {singleType = GWordT 32}),("mode",GEGSingle {singleType = GWordT 32}),("flags",GEGSingle {singleType = GWordT 32})] NotUnboxed),("TObjPad",GEGUnit),("TObjSuper",GEGStruct [("nb_eb",GEGSingle {singleType = GWordT 32}),("eb_size",GEGSingle {singleType = GWordT 32}),("io_size",GEGSingle {singleType = GWordT 32}),("nb_reserved_gc",GEGSingle {singleType = GWordT 32}),("nb_reserved_del",GEGSingle {singleType = GWordT 32}),("cur_eb",GEGSingle {singleType = GWordT 32}),("cur_offs",GEGSingle {singleType = GWordT 32}),("last_inum",GEGSingle {singleType = GWordT 32}),("next_sqnum",GEGSingle {singleType = GWordT 64})] NotUnboxed)])]

Function COGENT.read_or_create_dentarr 5 a@0.0 Word 32 a@0.1 Word 32 a@0.2 Word 32 a@0.3 Word 64 mem Mem 8 a@0.0.0 Word 32 a@0.0.1 Word 32 a@0.1.0 Word 32 a@0.1.1 Word 32 a@0.1.2.0 Word 32 a@0.1.2.1 Word 32 a@0.1.2.2 Bool mem Mem
# Function: rename_read_or_create_dentarrs
#    >>Error: non-32 bit word in aggregate: [("magic",GEGSingle {singleType = GWordT 32}),("crc",GEGSingle {singleType = GWordT 32}),("sqnum",GEGSingle {singleType = GWordT 64}),("offs",GEGSingle {singleType = GWordT 32}),("len",GEGSingle {singleType = GWordT 32}),("trans",GEGSingle {singleType = GWordT 8}),("otype",GEGSingle {singleType = GWordT 8}),("ounion",GEGSum [("TObjData",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("odata",GEGSingle {singleType = GWordT 32})] IsUnboxed),("TObjDel",GEGStruct [("id",GEGSingle {singleType = GWordT 64})] IsUnboxed),("TObjDentarr",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("nb_dentry",GEGSingle {singleType = GWordT 32}),("size",GEGSingle {singleType = GWordT 32}),("entries",GEGSingle {singleType = GWordT 32})] NotUnboxed),("TObjInode",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("size",GEGSingle {singleType = GWordT 64}),("atime_sec",GEGSingle {singleType = GWordT 64}),("ctime_sec",GEGSingle {singleType = GWordT 64}),("mtime_sec",GEGSingle {singleType = GWordT 64}),("nlink",GEGSingle {singleType = GWordT 32}),("uid",GEGSingle {singleType = GWordT 32}),("gid",GEGSingle {singleType = GWordT 32}),("mode",GEGSingle {singleType = GWordT 32}),("flags",GEGSingle {singleType = GWordT 32})] NotUnboxed),("TObjPad",GEGUnit),("TObjSuper",GEGStruct [("nb_eb",GEGSingle {singleType = GWordT 32}),("eb_size",GEGSingle {singleType = GWordT 32}),("io_size",GEGSingle {singleType = GWordT 32}),("nb_reserved_gc",GEGSingle {singleType = GWordT 32}),("nb_reserved_del",GEGSingle {singleType = GWordT 32}),("cur_eb",GEGSingle {singleType = GWordT 32}),("cur_offs",GEGSingle {singleType = GWordT 32}),("last_inum",GEGSingle {singleType = GWordT 32}),("next_sqnum",GEGSingle {singleType = GWordT 64})] NotUnboxed)])]

Function COGENT.rename_read_or_create_dentarrs 6 a@0.0 Word 32 a@0.1 Word 32 a@0.2 Word 32 a@0.3 Word 64 a@0.4 Word 64 mem Mem 11 a@0.0.0 Word 32 a@0.0.1 Word 32 a@0.1.0 Word 32 a@0.1.1 Word 32 a@0.1.2.0 Word 32 a@0.1.2.1 Word 32 a@0.1.2.2 Word 32 a@0.1.2.3 Word 32 a@0.1.2.4 Word 32 a@0.1.2.5 Word 32 mem Mem
# Function: sync_if_trans_too_big
#    >>Error: non-32 bit word in aggregate: [("next_inum",GEGSingle {singleType = GWordT 32}),("next_sqnum",GEGSingle {singleType = GWordT 64}),("rbuf",GEGStruct [("data",GEGSingle {singleType = GWordT 32}),("bound",GEGSingle {singleType = GWordT 32})] NotUnboxed),("wbuf_eb",GEGSingle {singleType = GWordT 32}),("wbuf",GEGStruct [("data",GEGSingle {singleType = GWordT 32}),("bound",GEGSingle {singleType = GWordT 32})] NotUnboxed),("used",GEGSingle {singleType = GWordT 32}),("sync_offs",GEGSingle {singleType = GWordT 32}),("opad",GEGStruct [("magic",GEGSingle {singleType = GWordT 32}),("crc",GEGSingle {singleType = GWordT 32}),("sqnum",GEGSingle {singleType = GWordT 64}),("offs",GEGSingle {singleType = GWordT 32}),("len",GEGSingle {singleType = GWordT 32}),("trans",GEGSingle {singleType = GWordT 8}),("otype",GEGSingle {singleType = GWordT 8}),("ounion",GEGSum [("TObjData",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("odata",GEGSingle {singleType = GWordT 32})] IsUnboxed),("TObjDel",GEGStruct [("id",GEGSingle {singleType = GWordT 64})] IsUnboxed),("TObjDentarr",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("nb_dentry",GEGSingle {singleType = GWordT 32}),("size",GEGSingle {singleType = GWordT 32}),("entries",GEGSingle {singleType = GWordT 32})] NotUnboxed),("TObjInode",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("size",GEGSingle {singleType = GWordT 64}),("atime_sec",GEGSingle {singleType = GWordT 64}),("ctime_sec",GEGSingle {singleType = GWordT 64}),("mtime_sec",GEGSingle {singleType = GWordT 64}),("nlink",GEGSingle {singleType = GWordT 32}),("uid",GEGSingle {singleType = GWordT 32}),("gid",GEGSingle {singleType = GWordT 32}),("mode",GEGSingle {singleType = GWordT 32}),("flags",GEGSingle {singleType = GWordT 32})] NotUnboxed),("TObjPad",GEGUnit),("TObjSuper",GEGStruct [("nb_eb",GEGSingle {singleType = GWordT 32}),("eb_size",GEGSingle {singleType = GWordT 32}),("io_size",GEGSingle {singleType = GWordT 32}),("nb_reserved_gc",GEGSingle {singleType = GWordT 32}),("nb_reserved_del",GEGSingle {singleType = GWordT 32}),("cur_eb",GEGSingle {singleType = GWordT 32}),("cur_offs",GEGSingle {singleType = GWordT 32}),("last_inum",GEGSingle {singleType = GWordT 32}),("next_sqnum",GEGSingle {singleType = GWordT 64})] NotUnboxed)])] NotUnboxed),("pools",GEGStruct [("idx",GEGSingle {singleType = GWordT 32}),("gim",GEGSingle {singleType = GWordT 32})] IsUnboxed),("oaddr",GEGStruct [("ebnum",GEGSingle {singleType = GWordT 32}),("offs",GEGSingle {singleType = GWordT 32}),("len",GEGSingle {singleType = GWordT 32}),("sqnum",GEGSingle {singleType = GWordT 64})] IsUnboxed),("fsm_st",GEGStruct [("nb_free_eb",GEGSingle {singleType = GWordT 32}),("used_eb",GEGSingle {singleType = GWordT 32}),("dirty_space",GEGSingle {singleType = GWordT 32}),("gim",GEGSingle {singleType = GWordT 32})] NotUnboxed),("index_st",GEGStruct [("addrs",GEGSingle {singleType = GWordT 32})] IsUnboxed),("ubi_vol",GEGSingle {singleType = GWordT 32})]

Function COGENT.sync_if_trans_too_big 6 a@0.0 Word 32 a@0.1 Word 32 a@0.2 Word 32 a@0.3 Word 32 a@0.4 Word 32 mem Mem 6 a@0.0.0 Word 32 a@0.0.1 Word 32 a@0.1.0 Word 32 a@0.1.1 Word 32 a@0.1.2 Word 32 mem Mem
# Function: ostore_free_pools
#    >>Error: non-32 bit word in aggregate: [("next_inum",GEGSingle {singleType = GWordT 32}),("next_sqnum",GEGSingle {singleType = GWordT 64}),("rbuf",GEGStruct [("data",GEGSingle {singleType = GWordT 32}),("bound",GEGSingle {singleType = GWordT 32})] NotUnboxed),("wbuf_eb",GEGSingle {singleType = GWordT 32}),("wbuf",GEGStruct [("data",GEGSingle {singleType = GWordT 32}),("bound",GEGSingle {singleType = GWordT 32})] NotUnboxed),("used",GEGSingle {singleType = GWordT 32}),("sync_offs",GEGSingle {singleType = GWordT 32}),("opad",GEGStruct [("magic",GEGSingle {singleType = GWordT 32}),("crc",GEGSingle {singleType = GWordT 32}),("sqnum",GEGSingle {singleType = GWordT 64}),("offs",GEGSingle {singleType = GWordT 32}),("len",GEGSingle {singleType = GWordT 32}),("trans",GEGSingle {singleType = GWordT 8}),("otype",GEGSingle {singleType = GWordT 8}),("ounion",GEGSum [("TObjData",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("odata",GEGSingle {singleType = GWordT 32})] IsUnboxed),("TObjDel",GEGStruct [("id",GEGSingle {singleType = GWordT 64})] IsUnboxed),("TObjDentarr",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("nb_dentry",GEGSingle {singleType = GWordT 32}),("size",GEGSingle {singleType = GWordT 32}),("entries",GEGSingle {singleType = GWordT 32})] NotUnboxed),("TObjInode",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("size",GEGSingle {singleType = GWordT 64}),("atime_sec",GEGSingle {singleType = GWordT 64}),("ctime_sec",GEGSingle {singleType = GWordT 64}),("mtime_sec",GEGSingle {singleType = GWordT 64}),("nlink",GEGSingle {singleType = GWordT 32}),("uid",GEGSingle {singleType = GWordT 32}),("gid",GEGSingle {singleType = GWordT 32}),("mode",GEGSingle {singleType = GWordT 32}),("flags",GEGSingle {singleType = GWordT 32})] NotUnboxed),("TObjPad",GEGUnit),("TObjSuper",GEGStruct [("nb_eb",GEGSingle {singleType = GWordT 32}),("eb_size",GEGSingle {singleType = GWordT 32}),("io_size",GEGSingle {singleType = GWordT 32}),("nb_reserved_gc",GEGSingle {singleType = GWordT 32}),("nb_reserved_del",GEGSingle {singleType = GWordT 32}),("cur_eb",GEGSingle {singleType = GWordT 32}),("cur_offs",GEGSingle {singleType = GWordT 32}),("last_inum",GEGSingle {singleType = GWordT 32}),("next_sqnum",GEGSingle {singleType = GWordT 64})] NotUnboxed)])] NotUnboxed),("pools",GEGStruct [("idx",GEGSingle {singleType = GWordT 32}),("gim",GEGSingle {singleType = GWordT 32})] IsUnboxed),("oaddr",GEGStruct [("ebnum",GEGSingle {singleType = GWordT 32}),("offs",GEGSingle {singleType = GWordT 32}),("len",GEGSingle {singleType = GWordT 32}),("sqnum",GEGSingle {singleType = GWordT 64})] IsUnboxed),("fsm_st",GEGStruct [("nb_free_eb",GEGSingle {singleType = GWordT 32}),("used_eb",GEGSingle {singleType = GWordT 32}),("dirty_space",GEGSingle {singleType = GWordT 32}),("gim",GEGSingle {singleType = GWordT 32})] NotUnboxed),("index_st",GEGStruct [("addrs",GEGSingle {singleType = GWordT 32})] IsUnboxed),("ubi_vol",GEGSingle {singleType = GWordT 32})]

Function COGENT.ostore_free_pools 3 a@0.0 Word 32 a@0.1 Word 32 mem Mem 3 a@0.0 Word 32 a@0.1 Word 32 mem Mem
# Function: ostore_clean
#    >>Error: non-32 bit word in aggregate: [("next_inum",GEGSingle {singleType = GWordT 32}),("next_sqnum",GEGSingle {singleType = GWordT 64}),("rbuf",GEGStruct [("data",GEGSingle {singleType = GWordT 32}),("bound",GEGSingle {singleType = GWordT 32})] NotUnboxed),("wbuf_eb",GEGSingle {singleType = GWordT 32}),("wbuf",GEGStruct [("data",GEGSingle {singleType = GWordT 32}),("bound",GEGSingle {singleType = GWordT 32})] NotUnboxed),("used",GEGSingle {singleType = GWordT 32}),("sync_offs",GEGSingle {singleType = GWordT 32}),("opad",GEGStruct [("magic",GEGSingle {singleType = GWordT 32}),("crc",GEGSingle {singleType = GWordT 32}),("sqnum",GEGSingle {singleType = GWordT 64}),("offs",GEGSingle {singleType = GWordT 32}),("len",GEGSingle {singleType = GWordT 32}),("trans",GEGSingle {singleType = GWordT 8}),("otype",GEGSingle {singleType = GWordT 8}),("ounion",GEGSum [("TObjData",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("odata",GEGSingle {singleType = GWordT 32})] IsUnboxed),("TObjDel",GEGStruct [("id",GEGSingle {singleType = GWordT 64})] IsUnboxed),("TObjDentarr",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("nb_dentry",GEGSingle {singleType = GWordT 32}),("size",GEGSingle {singleType = GWordT 32}),("entries",GEGSingle {singleType = GWordT 32})] NotUnboxed),("TObjInode",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("size",GEGSingle {singleType = GWordT 64}),("atime_sec",GEGSingle {singleType = GWordT 64}),("ctime_sec",GEGSingle {singleType = GWordT 64}),("mtime_sec",GEGSingle {singleType = GWordT 64}),("nlink",GEGSingle {singleType = GWordT 32}),("uid",GEGSingle {singleType = GWordT 32}),("gid",GEGSingle {singleType = GWordT 32}),("mode",GEGSingle {singleType = GWordT 32}),("flags",GEGSingle {singleType = GWordT 32})] NotUnboxed),("TObjPad",GEGUnit),("TObjSuper",GEGStruct [("nb_eb",GEGSingle {singleType = GWordT 32}),("eb_size",GEGSingle {singleType = GWordT 32}),("io_size",GEGSingle {singleType = GWordT 32}),("nb_reserved_gc",GEGSingle {singleType = GWordT 32}),("nb_reserved_del",GEGSingle {singleType = GWordT 32}),("cur_eb",GEGSingle {singleType = GWordT 32}),("cur_offs",GEGSingle {singleType = GWordT 32}),("last_inum",GEGSingle {singleType = GWordT 32}),("next_sqnum",GEGSingle {singleType = GWordT 64})] NotUnboxed)])] NotUnboxed),("pools",GEGStruct [("idx",GEGSingle {singleType = GWordT 32}),("gim",GEGSingle {singleType = GWordT 32})] IsUnboxed),("oaddr",GEGStruct [("ebnum",GEGSingle {singleType = GWordT 32}),("offs",GEGSingle {singleType = GWordT 32}),("len",GEGSingle {singleType = GWordT 32}),("sqnum",GEGSingle {singleType = GWordT 64})] IsUnboxed),("fsm_st",GEGStruct [("nb_free_eb",GEGSingle {singleType = GWordT 32}),("used_eb",GEGSingle {singleType = GWordT 32}),("dirty_space",GEGSingle {singleType = GWordT 32}),("gim",GEGSingle {singleType = GWordT 32})] NotUnboxed),("index_st",GEGStruct [("addrs",GEGSingle {singleType = GWordT 32})] IsUnboxed),("ubi_vol",GEGSingle {singleType = GWordT 32})]

Function COGENT.ostore_clean 3 a@0.0 Word 32 a@0.1 Word 32 mem Mem 2 a@0 Word 32 mem Mem
# Function: fsop_clean
#    >>Error: non-32 bit word in aggregate: [("magic",GEGSingle {singleType = GWordT 32}),("crc",GEGSingle {singleType = GWordT 32}),("sqnum",GEGSingle {singleType = GWordT 64}),("offs",GEGSingle {singleType = GWordT 32}),("len",GEGSingle {singleType = GWordT 32}),("trans",GEGSingle {singleType = GWordT 8}),("otype",GEGSingle {singleType = GWordT 8}),("ounion",GEGSum [("TObjData",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("odata",GEGSingle {singleType = GWordT 32})] IsUnboxed),("TObjDel",GEGStruct [("id",GEGSingle {singleType = GWordT 64})] IsUnboxed),("TObjDentarr",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("nb_dentry",GEGSingle {singleType = GWordT 32}),("size",GEGSingle {singleType = GWordT 32}),("entries",GEGSingle {singleType = GWordT 32})] NotUnboxed),("TObjInode",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("size",GEGSingle {singleType = GWordT 64}),("atime_sec",GEGSingle {singleType = GWordT 64}),("ctime_sec",GEGSingle {singleType = GWordT 64}),("mtime_sec",GEGSingle {singleType = GWordT 64}),("nlink",GEGSingle {singleType = GWordT 32}),("uid",GEGSingle {singleType = GWordT 32}),("gid",GEGSingle {singleType = GWordT 32}),("mode",GEGSingle {singleType = GWordT 32}),("flags",GEGSingle {singleType = GWordT 32})] NotUnboxed),("TObjPad",GEGUnit),("TObjSuper",GEGStruct [("nb_eb",GEGSingle {singleType = GWordT 32}),("eb_size",GEGSingle {singleType = GWordT 32}),("io_size",GEGSingle {singleType = GWordT 32}),("nb_reserved_gc",GEGSingle {singleType = GWordT 32}),("nb_reserved_del",GEGSingle {singleType = GWordT 32}),("cur_eb",GEGSingle {singleType = GWordT 32}),("cur_offs",GEGSingle {singleType = GWordT 32}),("last_inum",GEGSingle {singleType = GWordT 32}),("next_sqnum",GEGSingle {singleType = GWordT 64})] NotUnboxed)])]

Function COGENT.fsop_clean 3 a@0.0 Word 32 a@0.1 Word 32 mem Mem 2 a@0 Word 32 mem Mem
# Function: ostore_init
#    >>Error: non-32 bit word in aggregate: [("magic",GEGSingle {singleType = GWordT 32}),("crc",GEGSingle {singleType = GWordT 32}),("sqnum",GEGSingle {singleType = GWordT 64}),("offs",GEGSingle {singleType = GWordT 32}),("len",GEGSingle {singleType = GWordT 32}),("trans",GEGSingle {singleType = GWordT 8}),("otype",GEGSingle {singleType = GWordT 8}),("ounion",GEGSum [("TObjData",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("odata",GEGSingle {singleType = GWordT 32})] IsUnboxed),("TObjDel",GEGStruct [("id",GEGSingle {singleType = GWordT 64})] IsUnboxed),("TObjDentarr",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("nb_dentry",GEGSingle {singleType = GWordT 32}),("size",GEGSingle {singleType = GWordT 32}),("entries",GEGSingle {singleType = GWordT 32})] NotUnboxed),("TObjInode",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("size",GEGSingle {singleType = GWordT 64}),("atime_sec",GEGSingle {singleType = GWordT 64}),("ctime_sec",GEGSingle {singleType = GWordT 64}),("mtime_sec",GEGSingle {singleType = GWordT 64}),("nlink",GEGSingle {singleType = GWordT 32}),("uid",GEGSingle {singleType = GWordT 32}),("gid",GEGSingle {singleType = GWordT 32}),("mode",GEGSingle {singleType = GWordT 32}),("flags",GEGSingle {singleType = GWordT 32})] NotUnboxed),("TObjPad",GEGUnit),("TObjSuper",GEGStruct [("nb_eb",GEGSingle {singleType = GWordT 32}),("eb_size",GEGSingle {singleType = GWordT 32}),("io_size",GEGSingle {singleType = GWordT 32}),("nb_reserved_gc",GEGSingle {singleType = GWordT 32}),("nb_reserved_del",GEGSingle {singleType = GWordT 32}),("cur_eb",GEGSingle {singleType = GWordT 32}),("cur_offs",GEGSingle {singleType = GWordT 32}),("last_inum",GEGSingle {singleType = GWordT 32}),("next_sqnum",GEGSingle {singleType = GWordT 64})] NotUnboxed)])]

Function COGENT.ostore_init 4 a@0.0 Word 32 a@0.1 Word 32 a@0.2 Word 32 mem Mem 7 a@0.0 Word 32 a@0.1.0 Word 32 a@0.1.1 Word 32 a@0.1.2 Word 32 a@0.2.0 Word 32 a@0.2.1 Word 32 mem Mem
# Function: fsop_init
#    >>Error: non-32 bit word in aggregate: [("magic",GEGSingle {singleType = GWordT 32}),("crc",GEGSingle {singleType = GWordT 32}),("sqnum",GEGSingle {singleType = GWordT 64}),("offs",GEGSingle {singleType = GWordT 32}),("len",GEGSingle {singleType = GWordT 32}),("trans",GEGSingle {singleType = GWordT 8}),("otype",GEGSingle {singleType = GWordT 8}),("ounion",GEGSum [("TObjData",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("odata",GEGSingle {singleType = GWordT 32})] IsUnboxed),("TObjDel",GEGStruct [("id",GEGSingle {singleType = GWordT 64})] IsUnboxed),("TObjDentarr",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("nb_dentry",GEGSingle {singleType = GWordT 32}),("size",GEGSingle {singleType = GWordT 32}),("entries",GEGSingle {singleType = GWordT 32})] NotUnboxed),("TObjInode",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("size",GEGSingle {singleType = GWordT 64}),("atime_sec",GEGSingle {singleType = GWordT 64}),("ctime_sec",GEGSingle {singleType = GWordT 64}),("mtime_sec",GEGSingle {singleType = GWordT 64}),("nlink",GEGSingle {singleType = GWordT 32}),("uid",GEGSingle {singleType = GWordT 32}),("gid",GEGSingle {singleType = GWordT 32}),("mode",GEGSingle {singleType = GWordT 32}),("flags",GEGSingle {singleType = GWordT 32})] NotUnboxed),("TObjPad",GEGUnit),("TObjSuper",GEGStruct [("nb_eb",GEGSingle {singleType = GWordT 32}),("eb_size",GEGSingle {singleType = GWordT 32}),("io_size",GEGSingle {singleType = GWordT 32}),("nb_reserved_gc",GEGSingle {singleType = GWordT 32}),("nb_reserved_del",GEGSingle {singleType = GWordT 32}),("cur_eb",GEGSingle {singleType = GWordT 32}),("cur_offs",GEGSingle {singleType = GWordT 32}),("last_inum",GEGSingle {singleType = GWordT 32}),("next_sqnum",GEGSingle {singleType = GWordT 64})] NotUnboxed)])]

Function COGENT.fsop_init 4 a@0.0 Word 32 a@0.1 Word 32 a@0.2 Word 32 mem Mem 7 a@0.0 Word 32 a@0.1.0 Word 32 a@0.1.1 Word 32 a@0.1.2 Word 32 a@0.2.0 Word 32 a@0.2.1 Word 32 mem Mem
# Function: ostore_alloc_pools
#    >>Error: non-32 bit word in aggregate: [("next_inum",GEGSingle {singleType = GWordT 32}),("next_sqnum",GEGSingle {singleType = GWordT 64}),("rbuf",GEGStruct [("data",GEGSingle {singleType = GWordT 32}),("bound",GEGSingle {singleType = GWordT 32})] NotUnboxed),("wbuf_eb",GEGSingle {singleType = GWordT 32}),("wbuf",GEGStruct [("data",GEGSingle {singleType = GWordT 32}),("bound",GEGSingle {singleType = GWordT 32})] NotUnboxed),("used",GEGSingle {singleType = GWordT 32}),("sync_offs",GEGSingle {singleType = GWordT 32}),("opad",GEGStruct [("magic",GEGSingle {singleType = GWordT 32}),("crc",GEGSingle {singleType = GWordT 32}),("sqnum",GEGSingle {singleType = GWordT 64}),("offs",GEGSingle {singleType = GWordT 32}),("len",GEGSingle {singleType = GWordT 32}),("trans",GEGSingle {singleType = GWordT 8}),("otype",GEGSingle {singleType = GWordT 8}),("ounion",GEGSum [("TObjData",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("odata",GEGSingle {singleType = GWordT 32})] IsUnboxed),("TObjDel",GEGStruct [("id",GEGSingle {singleType = GWordT 64})] IsUnboxed),("TObjDentarr",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("nb_dentry",GEGSingle {singleType = GWordT 32}),("size",GEGSingle {singleType = GWordT 32}),("entries",GEGSingle {singleType = GWordT 32})] NotUnboxed),("TObjInode",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("size",GEGSingle {singleType = GWordT 64}),("atime_sec",GEGSingle {singleType = GWordT 64}),("ctime_sec",GEGSingle {singleType = GWordT 64}),("mtime_sec",GEGSingle {singleType = GWordT 64}),("nlink",GEGSingle {singleType = GWordT 32}),("uid",GEGSingle {singleType = GWordT 32}),("gid",GEGSingle {singleType = GWordT 32}),("mode",GEGSingle {singleType = GWordT 32}),("flags",GEGSingle {singleType = GWordT 32})] NotUnboxed),("TObjPad",GEGUnit),("TObjSuper",GEGStruct [("nb_eb",GEGSingle {singleType = GWordT 32}),("eb_size",GEGSingle {singleType = GWordT 32}),("io_size",GEGSingle {singleType = GWordT 32}),("nb_reserved_gc",GEGSingle {singleType = GWordT 32}),("nb_reserved_del",GEGSingle {singleType = GWordT 32}),("cur_eb",GEGSingle {singleType = GWordT 32}),("cur_offs",GEGSingle {singleType = GWordT 32}),("last_inum",GEGSingle {singleType = GWordT 32}),("next_sqnum",GEGSingle {singleType = GWordT 64})] NotUnboxed)])] NotUnboxed),("pools",GEGStruct [("idx",GEGSingle {singleType = GWordT 32}),("gim",GEGSingle {singleType = GWordT 32})] IsUnboxed),("oaddr",GEGStruct [("ebnum",GEGSingle {singleType = GWordT 32}),("offs",GEGSingle {singleType = GWordT 32}),("len",GEGSingle {singleType = GWordT 32}),("sqnum",GEGSingle {singleType = GWordT 64})] IsUnboxed),("fsm_st",GEGStruct [("nb_free_eb",GEGSingle {singleType = GWordT 32}),("used_eb",GEGSingle {singleType = GWordT 32}),("dirty_space",GEGSingle {singleType = GWordT 32}),("gim",GEGSingle {singleType = GWordT 32})] NotUnboxed),("index_st",GEGStruct [("addrs",GEGSingle {singleType = GWordT 32})] IsUnboxed),("ubi_vol",GEGSingle {singleType = GWordT 32})]

Function COGENT.ostore_alloc_pools 4 a@0.0 Word 32 a@0.1 Word 32 a@0.2 Word 32 mem Mem 6 a@0.0.0 Word 32 a@0.0.1 Word 32 a@0.1.0 Word 32 a@0.1.1 Word 32 a@0.1.2 Word 32 mem Mem
# Function: fsm_mark_dirty
#    >>Error: atom Fun

Function COGENT.fsm_mark_dirty 10 a@0.0 Word 32 a@0.1 Word 32 a@0.2 Word 32 a@0.3 Word 32 a@0.4 Word 64 a@0.5.0 Word 32 a@0.5.1 Word 32 a@0.5.2 Word 32 a@0.5.3 Word 64 mem Mem 4 a@0.0 Word 32 a@0.1 Word 32 a@0.2 Word 32 mem Mem
# Function: delete_obj
#    >>Error: non-32 bit word in aggregate: [("next_inum",GEGSingle {singleType = GWordT 32}),("next_sqnum",GEGSingle {singleType = GWordT 64}),("rbuf",GEGStruct [("data",GEGSingle {singleType = GWordT 32}),("bound",GEGSingle {singleType = GWordT 32})] NotUnboxed),("wbuf_eb",GEGSingle {singleType = GWordT 32}),("wbuf",GEGStruct [("data",GEGSingle {singleType = GWordT 32}),("bound",GEGSingle {singleType = GWordT 32})] NotUnboxed),("used",GEGSingle {singleType = GWordT 32}),("sync_offs",GEGSingle {singleType = GWordT 32}),("opad",GEGStruct [("magic",GEGSingle {singleType = GWordT 32}),("crc",GEGSingle {singleType = GWordT 32}),("sqnum",GEGSingle {singleType = GWordT 64}),("offs",GEGSingle {singleType = GWordT 32}),("len",GEGSingle {singleType = GWordT 32}),("trans",GEGSingle {singleType = GWordT 8}),("otype",GEGSingle {singleType = GWordT 8}),("ounion",GEGSum [("TObjData",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("odata",GEGSingle {singleType = GWordT 32})] IsUnboxed),("TObjDel",GEGStruct [("id",GEGSingle {singleType = GWordT 64})] IsUnboxed),("TObjDentarr",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("nb_dentry",GEGSingle {singleType = GWordT 32}),("size",GEGSingle {singleType = GWordT 32}),("entries",GEGSingle {singleType = GWordT 32})] NotUnboxed),("TObjInode",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("size",GEGSingle {singleType = GWordT 64}),("atime_sec",GEGSingle {singleType = GWordT 64}),("ctime_sec",GEGSingle {singleType = GWordT 64}),("mtime_sec",GEGSingle {singleType = GWordT 64}),("nlink",GEGSingle {singleType = GWordT 32}),("uid",GEGSingle {singleType = GWordT 32}),("gid",GEGSingle {singleType = GWordT 32}),("mode",GEGSingle {singleType = GWordT 32}),("flags",GEGSingle {singleType = GWordT 32})] NotUnboxed),("TObjPad",GEGUnit),("TObjSuper",GEGStruct [("nb_eb",GEGSingle {singleType = GWordT 32}),("eb_size",GEGSingle {singleType = GWordT 32}),("io_size",GEGSingle {singleType = GWordT 32}),("nb_reserved_gc",GEGSingle {singleType = GWordT 32}),("nb_reserved_del",GEGSingle {singleType = GWordT 32}),("cur_eb",GEGSingle {singleType = GWordT 32}),("cur_offs",GEGSingle {singleType = GWordT 32}),("last_inum",GEGSingle {singleType = GWordT 32}),("next_sqnum",GEGSingle {singleType = GWordT 64})] NotUnboxed)])] NotUnboxed),("pools",GEGStruct [("idx",GEGSingle {singleType = GWordT 32}),("gim",GEGSingle {singleType = GWordT 32})] IsUnboxed),("oaddr",GEGStruct [("ebnum",GEGSingle {singleType = GWordT 32}),("offs",GEGSingle {singleType = GWordT 32}),("len",GEGSingle {singleType = GWordT 32}),("sqnum",GEGSingle {singleType = GWordT 64})] IsUnboxed),("fsm_st",GEGStruct [("nb_free_eb",GEGSingle {singleType = GWordT 32}),("used_eb",GEGSingle {singleType = GWordT 32}),("dirty_space",GEGSingle {singleType = GWordT 32}),("gim",GEGSingle {singleType = GWordT 32})] NotUnboxed),("index_st",GEGStruct [("addrs",GEGSingle {singleType = GWordT 32})] IsUnboxed),("ubi_vol",GEGSingle {singleType = GWordT 32})]

Function COGENT.delete_obj 9 a@0.0 Word 32 a@0.1 Word 32 a@0.2 Word 32 a@0.3 Word 64 a@0.4.0 Word 32 a@0.4.1 Word 32 a@0.4.2 Word 32 a@0.4.3 Word 64 mem Mem 3 a@0.0 Word 32 a@0.1 Word 32 mem Mem
# Function: fold_delete_obj
#    >>Error: non-32 bit word in aggregate: [("next_inum",GEGSingle {singleType = GWordT 32}),("next_sqnum",GEGSingle {singleType = GWordT 64}),("rbuf",GEGStruct [("data",GEGSingle {singleType = GWordT 32}),("bound",GEGSingle {singleType = GWordT 32})] NotUnboxed),("wbuf_eb",GEGSingle {singleType = GWordT 32}),("wbuf",GEGStruct [("data",GEGSingle {singleType = GWordT 32}),("bound",GEGSingle {singleType = GWordT 32})] NotUnboxed),("used",GEGSingle {singleType = GWordT 32}),("sync_offs",GEGSingle {singleType = GWordT 32}),("opad",GEGStruct [("magic",GEGSingle {singleType = GWordT 32}),("crc",GEGSingle {singleType = GWordT 32}),("sqnum",GEGSingle {singleType = GWordT 64}),("offs",GEGSingle {singleType = GWordT 32}),("len",GEGSingle {singleType = GWordT 32}),("trans",GEGSingle {singleType = GWordT 8}),("otype",GEGSingle {singleType = GWordT 8}),("ounion",GEGSum [("TObjData",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("odata",GEGSingle {singleType = GWordT 32})] IsUnboxed),("TObjDel",GEGStruct [("id",GEGSingle {singleType = GWordT 64})] IsUnboxed),("TObjDentarr",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("nb_dentry",GEGSingle {singleType = GWordT 32}),("size",GEGSingle {singleType = GWordT 32}),("entries",GEGSingle {singleType = GWordT 32})] NotUnboxed),("TObjInode",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("size",GEGSingle {singleType = GWordT 64}),("atime_sec",GEGSingle {singleType = GWordT 64}),("ctime_sec",GEGSingle {singleType = GWordT 64}),("mtime_sec",GEGSingle {singleType = GWordT 64}),("nlink",GEGSingle {singleType = GWordT 32}),("uid",GEGSingle {singleType = GWordT 32}),("gid",GEGSingle {singleType = GWordT 32}),("mode",GEGSingle {singleType = GWordT 32}),("flags",GEGSingle {singleType = GWordT 32})] NotUnboxed),("TObjPad",GEGUnit),("TObjSuper",GEGStruct [("nb_eb",GEGSingle {singleType = GWordT 32}),("eb_size",GEGSingle {singleType = GWordT 32}),("io_size",GEGSingle {singleType = GWordT 32}),("nb_reserved_gc",GEGSingle {singleType = GWordT 32}),("nb_reserved_del",GEGSingle {singleType = GWordT 32}),("cur_eb",GEGSingle {singleType = GWordT 32}),("cur_offs",GEGSingle {singleType = GWordT 32}),("last_inum",GEGSingle {singleType = GWordT 32}),("next_sqnum",GEGSingle {singleType = GWordT 64})] NotUnboxed)])] NotUnboxed),("pools",GEGStruct [("idx",GEGSingle {singleType = GWordT 32}),("gim",GEGSingle {singleType = GWordT 32})] IsUnboxed),("oaddr",GEGStruct [("ebnum",GEGSingle {singleType = GWordT 32}),("offs",GEGSingle {singleType = GWordT 32}),("len",GEGSingle {singleType = GWordT 32}),("sqnum",GEGSingle {singleType = GWordT 64})] IsUnboxed),("fsm_st",GEGStruct [("nb_free_eb",GEGSingle {singleType = GWordT 32}),("used_eb",GEGSingle {singleType = GWordT 32}),("dirty_space",GEGSingle {singleType = GWordT 32}),("gim",GEGSingle {singleType = GWordT 32})] NotUnboxed),("index_st",GEGStruct [("addrs",GEGSingle {singleType = GWordT 32})] IsUnboxed),("ubi_vol",GEGSingle {singleType = GWordT 32})]

Function COGENT.fold_delete_obj 5 a@0.0 Word 32 a@0.1.0 Word 32 a@0.1.1 Word 32 a@0.2 Word 32 mem Mem 3 a@0.0 Word 32 a@0.1 Word 32 mem Mem
# Function: proc_objsdel
#    >>Error: atom Fun

Function COGENT.proc_objsdel 5 a@0.0 Word 32 a@0.1 Word 32 a@0.2 Word 32 a@0.3 Word 32 mem Mem 3 a@0.0 Word 32 a@0.1 Word 32 mem Mem
# Function: update_obj_pad
#    >>Error: non-32 bit word in aggregate: [("next_inum",GEGSingle {singleType = GWordT 32}),("next_sqnum",GEGSingle {singleType = GWordT 64}),("rbuf",GEGStruct [("data",GEGSingle {singleType = GWordT 32}),("bound",GEGSingle {singleType = GWordT 32})] NotUnboxed),("wbuf_eb",GEGSingle {singleType = GWordT 32}),("wbuf",GEGStruct [("data",GEGSingle {singleType = GWordT 32}),("bound",GEGSingle {singleType = GWordT 32})] NotUnboxed),("used",GEGSingle {singleType = GWordT 32}),("sync_offs",GEGSingle {singleType = GWordT 32}),("opad",GEGStruct [("magic",GEGSingle {singleType = GWordT 32}),("crc",GEGSingle {singleType = GWordT 32}),("sqnum",GEGSingle {singleType = GWordT 64}),("offs",GEGSingle {singleType = GWordT 32}),("len",GEGSingle {singleType = GWordT 32}),("trans",GEGSingle {singleType = GWordT 8}),("otype",GEGSingle {singleType = GWordT 8}),("ounion",GEGSum [("TObjData",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("odata",GEGSingle {singleType = GWordT 32})] IsUnboxed),("TObjDel",GEGStruct [("id",GEGSingle {singleType = GWordT 64})] IsUnboxed),("TObjDentarr",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("nb_dentry",GEGSingle {singleType = GWordT 32}),("size",GEGSingle {singleType = GWordT 32}),("entries",GEGSingle {singleType = GWordT 32})] NotUnboxed),("TObjInode",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("size",GEGSingle {singleType = GWordT 64}),("atime_sec",GEGSingle {singleType = GWordT 64}),("ctime_sec",GEGSingle {singleType = GWordT 64}),("mtime_sec",GEGSingle {singleType = GWordT 64}),("nlink",GEGSingle {singleType = GWordT 32}),("uid",GEGSingle {singleType = GWordT 32}),("gid",GEGSingle {singleType = GWordT 32}),("mode",GEGSingle {singleType = GWordT 32}),("flags",GEGSingle {singleType = GWordT 32})] NotUnboxed),("TObjPad",GEGUnit),("TObjSuper",GEGStruct [("nb_eb",GEGSingle {singleType = GWordT 32}),("eb_size",GEGSingle {singleType = GWordT 32}),("io_size",GEGSingle {singleType = GWordT 32}),("nb_reserved_gc",GEGSingle {singleType = GWordT 32}),("nb_reserved_del",GEGSingle {singleType = GWordT 32}),("cur_eb",GEGSingle {singleType = GWordT 32}),("cur_offs",GEGSingle {singleType = GWordT 32}),("last_inum",GEGSingle {singleType = GWordT 32}),("next_sqnum",GEGSingle {singleType = GWordT 64})] NotUnboxed)])] NotUnboxed),("pools",GEGStruct [("idx",GEGSingle {singleType = GWordT 32}),("gim",GEGSingle {singleType = GWordT 32})] IsUnboxed),("oaddr",GEGStruct [("ebnum",GEGSingle {singleType = GWordT 32}),("offs",GEGSingle {singleType = GWordT 32}),("len",GEGSingle {singleType = GWordT 32}),("sqnum",GEGSingle {singleType = GWordT 64})] IsUnboxed),("fsm_st",GEGStruct [("nb_free_eb",GEGSingle {singleType = GWordT 32}),("used_eb",GEGSingle {singleType = GWordT 32}),("dirty_space",GEGSingle {singleType = GWordT 32}),("gim",GEGSingle {singleType = GWordT 32})] NotUnboxed),("index_st",GEGStruct [("addrs",GEGSingle {singleType = GWordT 32})] IsUnboxed),("ubi_vol",GEGSingle {singleType = GWordT 32})]

Function COGENT.update_obj_pad 8 a@0.0 Word 32 a@0.1 Word 32 a@0.2 Word 32 a@0.3.0 Word 32 a@0.3.1 Word 32 a@0.3.2 Word 32 a@0.3.3 Word 64 mem Mem 3 a@0.0 Word 32 a@0.1 Word 32 mem Mem
# Function: update_obj_use
#    >>Error: atom Fun

Function COGENT.update_obj_use 12 a@0.0 Word 32 a@0.1.0 Word 32 a@0.1.1 Word 32 a@0.1.2 Word 32 a@0.1.3 Word 32 a@0.2.0 Word 32 a@0.2.1 Word 64 a@0.2.2.0 Word 32 a@0.2.2.1 Word 32 a@0.2.2.2 Word 32 a@0.2.2.3 Word 64 mem Mem 5 a@0.0 Word 32 a@0.1 Word 32 a@0.2 Word 32 a@0.3 Word 32 mem Mem
# Function: update_obj
#    >>Error: non-32 bit word in aggregate: [("next_inum",GEGSingle {singleType = GWordT 32}),("next_sqnum",GEGSingle {singleType = GWordT 64}),("rbuf",GEGStruct [("data",GEGSingle {singleType = GWordT 32}),("bound",GEGSingle {singleType = GWordT 32})] NotUnboxed),("wbuf_eb",GEGSingle {singleType = GWordT 32}),("wbuf",GEGStruct [("data",GEGSingle {singleType = GWordT 32}),("bound",GEGSingle {singleType = GWordT 32})] NotUnboxed),("used",GEGSingle {singleType = GWordT 32}),("sync_offs",GEGSingle {singleType = GWordT 32}),("opad",GEGStruct [("magic",GEGSingle {singleType = GWordT 32}),("crc",GEGSingle {singleType = GWordT 32}),("sqnum",GEGSingle {singleType = GWordT 64}),("offs",GEGSingle {singleType = GWordT 32}),("len",GEGSingle {singleType = GWordT 32}),("trans",GEGSingle {singleType = GWordT 8}),("otype",GEGSingle {singleType = GWordT 8}),("ounion",GEGSum [("TObjData",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("odata",GEGSingle {singleType = GWordT 32})] IsUnboxed),("TObjDel",GEGStruct [("id",GEGSingle {singleType = GWordT 64})] IsUnboxed),("TObjDentarr",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("nb_dentry",GEGSingle {singleType = GWordT 32}),("size",GEGSingle {singleType = GWordT 32}),("entries",GEGSingle {singleType = GWordT 32})] NotUnboxed),("TObjInode",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("size",GEGSingle {singleType = GWordT 64}),("atime_sec",GEGSingle {singleType = GWordT 64}),("ctime_sec",GEGSingle {singleType = GWordT 64}),("mtime_sec",GEGSingle {singleType = GWordT 64}),("nlink",GEGSingle {singleType = GWordT 32}),("uid",GEGSingle {singleType = GWordT 32}),("gid",GEGSingle {singleType = GWordT 32}),("mode",GEGSingle {singleType = GWordT 32}),("flags",GEGSingle {singleType = GWordT 32})] NotUnboxed),("TObjPad",GEGUnit),("TObjSuper",GEGStruct [("nb_eb",GEGSingle {singleType = GWordT 32}),("eb_size",GEGSingle {singleType = GWordT 32}),("io_size",GEGSingle {singleType = GWordT 32}),("nb_reserved_gc",GEGSingle {singleType = GWordT 32}),("nb_reserved_del",GEGSingle {singleType = GWordT 32}),("cur_eb",GEGSingle {singleType = GWordT 32}),("cur_offs",GEGSingle {singleType = GWordT 32}),("last_inum",GEGSingle {singleType = GWordT 32}),("next_sqnum",GEGSingle {singleType = GWordT 64})] NotUnboxed)])] NotUnboxed),("pools",GEGStruct [("idx",GEGSingle {singleType = GWordT 32}),("gim",GEGSingle {singleType = GWordT 32})] IsUnboxed),("oaddr",GEGStruct [("ebnum",GEGSingle {singleType = GWordT 32}),("offs",GEGSingle {singleType = GWordT 32}),("len",GEGSingle {singleType = GWordT 32}),("sqnum",GEGSingle {singleType = GWordT 64})] IsUnboxed),("fsm_st",GEGStruct [("nb_free_eb",GEGSingle {singleType = GWordT 32}),("used_eb",GEGSingle {singleType = GWordT 32}),("dirty_space",GEGSingle {singleType = GWordT 32}),("gim",GEGSingle {singleType = GWordT 32})] NotUnboxed),("index_st",GEGStruct [("addrs",GEGSingle {singleType = GWordT 32})] IsUnboxed),("ubi_vol",GEGSingle {singleType = GWordT 32})]

Function COGENT.update_obj 9 a@0.0 Word 32 a@0.1 Word 32 a@0.2 Word 32 a@0.3 Word 64 a@0.4.0 Word 32 a@0.4.1 Word 32 a@0.4.2 Word 32 a@0.4.3 Word 64 mem Mem 3 a@0.0 Word 32 a@0.1 Word 32 mem Mem
# Function: proc_obj
#    >>Error: non-32 bit word in aggregate: [("next_inum",GEGSingle {singleType = GWordT 32}),("next_sqnum",GEGSingle {singleType = GWordT 64}),("rbuf",GEGStruct [("data",GEGSingle {singleType = GWordT 32}),("bound",GEGSingle {singleType = GWordT 32})] NotUnboxed),("wbuf_eb",GEGSingle {singleType = GWordT 32}),("wbuf",GEGStruct [("data",GEGSingle {singleType = GWordT 32}),("bound",GEGSingle {singleType = GWordT 32})] NotUnboxed),("used",GEGSingle {singleType = GWordT 32}),("sync_offs",GEGSingle {singleType = GWordT 32}),("opad",GEGStruct [("magic",GEGSingle {singleType = GWordT 32}),("crc",GEGSingle {singleType = GWordT 32}),("sqnum",GEGSingle {singleType = GWordT 64}),("offs",GEGSingle {singleType = GWordT 32}),("len",GEGSingle {singleType = GWordT 32}),("trans",GEGSingle {singleType = GWordT 8}),("otype",GEGSingle {singleType = GWordT 8}),("ounion",GEGSum [("TObjData",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("odata",GEGSingle {singleType = GWordT 32})] IsUnboxed),("TObjDel",GEGStruct [("id",GEGSingle {singleType = GWordT 64})] IsUnboxed),("TObjDentarr",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("nb_dentry",GEGSingle {singleType = GWordT 32}),("size",GEGSingle {singleType = GWordT 32}),("entries",GEGSingle {singleType = GWordT 32})] NotUnboxed),("TObjInode",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("size",GEGSingle {singleType = GWordT 64}),("atime_sec",GEGSingle {singleType = GWordT 64}),("ctime_sec",GEGSingle {singleType = GWordT 64}),("mtime_sec",GEGSingle {singleType = GWordT 64}),("nlink",GEGSingle {singleType = GWordT 32}),("uid",GEGSingle {singleType = GWordT 32}),("gid",GEGSingle {singleType = GWordT 32}),("mode",GEGSingle {singleType = GWordT 32}),("flags",GEGSingle {singleType = GWordT 32})] NotUnboxed),("TObjPad",GEGUnit),("TObjSuper",GEGStruct [("nb_eb",GEGSingle {singleType = GWordT 32}),("eb_size",GEGSingle {singleType = GWordT 32}),("io_size",GEGSingle {singleType = GWordT 32}),("nb_reserved_gc",GEGSingle {singleType = GWordT 32}),("nb_reserved_del",GEGSingle {singleType = GWordT 32}),("cur_eb",GEGSingle {singleType = GWordT 32}),("cur_offs",GEGSingle {singleType = GWordT 32}),("last_inum",GEGSingle {singleType = GWordT 32}),("next_sqnum",GEGSingle {singleType = GWordT 64})] NotUnboxed)])] NotUnboxed),("pools",GEGStruct [("idx",GEGSingle {singleType = GWordT 32}),("gim",GEGSingle {singleType = GWordT 32})] IsUnboxed),("oaddr",GEGStruct [("ebnum",GEGSingle {singleType = GWordT 32}),("offs",GEGSingle {singleType = GWordT 32}),("len",GEGSingle {singleType = GWordT 32}),("sqnum",GEGSingle {singleType = GWordT 64})] IsUnboxed),("fsm_st",GEGStruct [("nb_free_eb",GEGSingle {singleType = GWordT 32}),("used_eb",GEGSingle {singleType = GWordT 32}),("dirty_space",GEGSingle {singleType = GWordT 32}),("gim",GEGSingle {singleType = GWordT 32})] NotUnboxed),("index_st",GEGStruct [("addrs",GEGSingle {singleType = GWordT 32})] IsUnboxed),("ubi_vol",GEGSingle {singleType = GWordT 32})]

Function COGENT.proc_obj 6 a@0.0 Word 32 a@0.1 Word 32 a@0.2 Word 32 a@0.3 Word 32 a@0.4 Word 32 mem Mem 3 a@0.0 Word 32 a@0.1 Word 32 mem Mem
# Function: ostore_update_loop_body
#    >>Error: non-32 bit word in aggregate: [("next_inum",GEGSingle {singleType = GWordT 32}),("next_sqnum",GEGSingle {singleType = GWordT 64}),("rbuf",GEGStruct [("data",GEGSingle {singleType = GWordT 32}),("bound",GEGSingle {singleType = GWordT 32})] NotUnboxed),("wbuf_eb",GEGSingle {singleType = GWordT 32}),("wbuf",GEGStruct [("data",GEGSingle {singleType = GWordT 32}),("bound",GEGSingle {singleType = GWordT 32})] NotUnboxed),("used",GEGSingle {singleType = GWordT 32}),("sync_offs",GEGSingle {singleType = GWordT 32}),("opad",GEGStruct [("magic",GEGSingle {singleType = GWordT 32}),("crc",GEGSingle {singleType = GWordT 32}),("sqnum",GEGSingle {singleType = GWordT 64}),("offs",GEGSingle {singleType = GWordT 32}),("len",GEGSingle {singleType = GWordT 32}),("trans",GEGSingle {singleType = GWordT 8}),("otype",GEGSingle {singleType = GWordT 8}),("ounion",GEGSum [("TObjData",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("odata",GEGSingle {singleType = GWordT 32})] IsUnboxed),("TObjDel",GEGStruct [("id",GEGSingle {singleType = GWordT 64})] IsUnboxed),("TObjDentarr",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("nb_dentry",GEGSingle {singleType = GWordT 32}),("size",GEGSingle {singleType = GWordT 32}),("entries",GEGSingle {singleType = GWordT 32})] NotUnboxed),("TObjInode",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("size",GEGSingle {singleType = GWordT 64}),("atime_sec",GEGSingle {singleType = GWordT 64}),("ctime_sec",GEGSingle {singleType = GWordT 64}),("mtime_sec",GEGSingle {singleType = GWordT 64}),("nlink",GEGSingle {singleType = GWordT 32}),("uid",GEGSingle {singleType = GWordT 32}),("gid",GEGSingle {singleType = GWordT 32}),("mode",GEGSingle {singleType = GWordT 32}),("flags",GEGSingle {singleType = GWordT 32})] NotUnboxed),("TObjPad",GEGUnit),("TObjSuper",GEGStruct [("nb_eb",GEGSingle {singleType = GWordT 32}),("eb_size",GEGSingle {singleType = GWordT 32}),("io_size",GEGSingle {singleType = GWordT 32}),("nb_reserved_gc",GEGSingle {singleType = GWordT 32}),("nb_reserved_del",GEGSingle {singleType = GWordT 32}),("cur_eb",GEGSingle {singleType = GWordT 32}),("cur_offs",GEGSingle {singleType = GWordT 32}),("last_inum",GEGSingle {singleType = GWordT 32}),("next_sqnum",GEGSingle {singleType = GWordT 64})] NotUnboxed)])] NotUnboxed),("pools",GEGStruct [("idx",GEGSingle {singleType = GWordT 32}),("gim",GEGSingle {singleType = GWordT 32})] IsUnboxed),("oaddr",GEGStruct [("ebnum",GEGSingle {singleType = GWordT 32}),("offs",GEGSingle {singleType = GWordT 32}),("len",GEGSingle {singleType = GWordT 32}),("sqnum",GEGSingle {singleType = GWordT 64})] IsUnboxed),("fsm_st",GEGStruct [("nb_free_eb",GEGSingle {singleType = GWordT 32}),("used_eb",GEGSingle {singleType = GWordT 32}),("dirty_space",GEGSingle {singleType = GWordT 32}),("gim",GEGSingle {singleType = GWordT 32})] NotUnboxed),("index_st",GEGStruct [("addrs",GEGSingle {singleType = GWordT 32})] IsUnboxed),("ubi_vol",GEGSingle {singleType = GWordT 32})]

Function COGENT.ostore_update_loop_body 5 a@0.0 Word 32 a@0.1.0 Word 32 a@0.1.1 Word 32 a@0.2 Word 32 mem Mem 3 a@0.0 Word 32 a@0.1 Word 32 mem Mem
# Function: ostore_update
#    >>Error: atom Fun

Function COGENT.ostore_update 5 a@0.0 Word 32 a@0.1 Word 32 a@0.2 Word 32 a@0.3 Word 32 mem Mem 3 a@0.0 Word 32 a@0.1 Word 32 mem Mem
# Function: ostore_write
#    >>Error: non-32 bit word in aggregate: [("next_inum",GEGSingle {singleType = GWordT 32}),("next_sqnum",GEGSingle {singleType = GWordT 64}),("rbuf",GEGStruct [("data",GEGSingle {singleType = GWordT 32}),("bound",GEGSingle {singleType = GWordT 32})] NotUnboxed),("wbuf_eb",GEGSingle {singleType = GWordT 32}),("wbuf",GEGStruct [("data",GEGSingle {singleType = GWordT 32}),("bound",GEGSingle {singleType = GWordT 32})] NotUnboxed),("used",GEGSingle {singleType = GWordT 32}),("sync_offs",GEGSingle {singleType = GWordT 32}),("opad",GEGStruct [("magic",GEGSingle {singleType = GWordT 32}),("crc",GEGSingle {singleType = GWordT 32}),("sqnum",GEGSingle {singleType = GWordT 64}),("offs",GEGSingle {singleType = GWordT 32}),("len",GEGSingle {singleType = GWordT 32}),("trans",GEGSingle {singleType = GWordT 8}),("otype",GEGSingle {singleType = GWordT 8}),("ounion",GEGSum [("TObjData",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("odata",GEGSingle {singleType = GWordT 32})] IsUnboxed),("TObjDel",GEGStruct [("id",GEGSingle {singleType = GWordT 64})] IsUnboxed),("TObjDentarr",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("nb_dentry",GEGSingle {singleType = GWordT 32}),("size",GEGSingle {singleType = GWordT 32}),("entries",GEGSingle {singleType = GWordT 32})] NotUnboxed),("TObjInode",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("size",GEGSingle {singleType = GWordT 64}),("atime_sec",GEGSingle {singleType = GWordT 64}),("ctime_sec",GEGSingle {singleType = GWordT 64}),("mtime_sec",GEGSingle {singleType = GWordT 64}),("nlink",GEGSingle {singleType = GWordT 32}),("uid",GEGSingle {singleType = GWordT 32}),("gid",GEGSingle {singleType = GWordT 32}),("mode",GEGSingle {singleType = GWordT 32}),("flags",GEGSingle {singleType = GWordT 32})] NotUnboxed),("TObjPad",GEGUnit),("TObjSuper",GEGStruct [("nb_eb",GEGSingle {singleType = GWordT 32}),("eb_size",GEGSingle {singleType = GWordT 32}),("io_size",GEGSingle {singleType = GWordT 32}),("nb_reserved_gc",GEGSingle {singleType = GWordT 32}),("nb_reserved_del",GEGSingle {singleType = GWordT 32}),("cur_eb",GEGSingle {singleType = GWordT 32}),("cur_offs",GEGSingle {singleType = GWordT 32}),("last_inum",GEGSingle {singleType = GWordT 32}),("next_sqnum",GEGSingle {singleType = GWordT 64})] NotUnboxed)])] NotUnboxed),("pools",GEGStruct [("idx",GEGSingle {singleType = GWordT 32}),("gim",GEGSingle {singleType = GWordT 32})] IsUnboxed),("oaddr",GEGStruct [("ebnum",GEGSingle {singleType = GWordT 32}),("offs",GEGSingle {singleType = GWordT 32}),("len",GEGSingle {singleType = GWordT 32}),("sqnum",GEGSingle {singleType = GWordT 64})] IsUnboxed),("fsm_st",GEGStruct [("nb_free_eb",GEGSingle {singleType = GWordT 32}),("used_eb",GEGSingle {singleType = GWordT 32}),("dirty_space",GEGSingle {singleType = GWordT 32}),("gim",GEGSingle {singleType = GWordT 32})] NotUnboxed),("index_st",GEGStruct [("addrs",GEGSingle {singleType = GWordT 32})] IsUnboxed),("ubi_vol",GEGSingle {singleType = GWordT 32})]

Function COGENT.ostore_write 6 a@0.0 Word 32 a@0.1 Word 32 a@0.2 Word 32 a@0.3 Word 32 a@0.4 Word 32 mem Mem 7 a@0.0.0 Word 32 a@0.0.1 Word 32 a@0.0.2 Word 32 a@0.1.0 Word 32 a@0.1.1 Word 32 a@0.1.2 Word 32 mem Mem
# Function: proc_obj_or_objsdel_loop
#    >>Error: non-32 bit word in aggregate: [("magic",GEGSingle {singleType = GWordT 32}),("crc",GEGSingle {singleType = GWordT 32}),("sqnum",GEGSingle {singleType = GWordT 64}),("offs",GEGSingle {singleType = GWordT 32}),("len",GEGSingle {singleType = GWordT 32}),("trans",GEGSingle {singleType = GWordT 8}),("otype",GEGSingle {singleType = GWordT 8}),("ounion",GEGSum [("TObjData",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("odata",GEGSingle {singleType = GWordT 32})] IsUnboxed),("TObjDel",GEGStruct [("id",GEGSingle {singleType = GWordT 64})] IsUnboxed),("TObjDentarr",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("nb_dentry",GEGSingle {singleType = GWordT 32}),("size",GEGSingle {singleType = GWordT 32}),("entries",GEGSingle {singleType = GWordT 32})] NotUnboxed),("TObjInode",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("size",GEGSingle {singleType = GWordT 64}),("atime_sec",GEGSingle {singleType = GWordT 64}),("ctime_sec",GEGSingle {singleType = GWordT 64}),("mtime_sec",GEGSingle {singleType = GWordT 64}),("nlink",GEGSingle {singleType = GWordT 32}),("uid",GEGSingle {singleType = GWordT 32}),("gid",GEGSingle {singleType = GWordT 32}),("mode",GEGSingle {singleType = GWordT 32}),("flags",GEGSingle {singleType = GWordT 32})] NotUnboxed),("TObjPad",GEGUnit),("TObjSuper",GEGStruct [("nb_eb",GEGSingle {singleType = GWordT 32}),("eb_size",GEGSingle {singleType = GWordT 32}),("io_size",GEGSingle {singleType = GWordT 32}),("nb_reserved_gc",GEGSingle {singleType = GWordT 32}),("nb_reserved_del",GEGSingle {singleType = GWordT 32}),("cur_eb",GEGSingle {singleType = GWordT 32}),("cur_offs",GEGSingle {singleType = GWordT 32}),("last_inum",GEGSingle {singleType = GWordT 32}),("next_sqnum",GEGSingle {singleType = GWordT 64})] NotUnboxed)])]

Function COGENT.proc_obj_or_objsdel_loop 7 a@0.0 Word 32 a@0.1.0 Word 32 a@0.1.1 Word 32 a@0.1.2 Word 32 a@0.2.0 Word 32 a@0.2.1 Word 32 mem Mem 8 a@0.0 Word 32 a@0.1.0 Word 32 a@0.1.1 Word 32 a@0.1.2 Word 32 a@0.2.0 Word 32 a@0.2.1 Word 32 a@0.2.2 Word 32 mem Mem
# Function: scan_transaction
#    >>Error: atom Fun

Function COGENT.scan_transaction 8 a@0.0 Word 32 a@0.1 Word 32 a@0.2 Word 32 a@0.3 Word 32 a@0.4 Word 32 a@0.5 Word 32 a@0.6 Word 32 mem Mem 8 a@0.0.0 Word 32 a@0.0.1 Word 32 a@0.0.2 Word 32 a@0.0.3 Word 32 a@0.1.0 Word 32 a@0.1.1 Word 32 a@0.1.2 Word 32 mem Mem
# Function: scan_transaction_loop
#    >>Error: atom Fun

Function COGENT.scan_transaction_loop 9 a@0.0.0 Word 32 a@0.0.1 Word 32 a@0.0.2 Word 32 a@0.0.3 Word 32 a@0.0.4 Word 32 a@0.1.0 Word 32 a@0.1.1 Word 32 a@0.2 Word 32 mem Mem 11 a@0.0.0 Word 32 a@0.0.1 Word 32 a@0.0.2 Word 32 a@0.0.3 Word 32 a@0.0.4 Word 32 a@0.1.0 Word 32 a@0.1.1.0 Word 32 a@0.1.1.1 Word 32 a@0.1.1.2 Word 32 a@0.1.2 Word 32 mem Mem
# Function: mount_scan_rbuf
#    >>Error: atom Fun

Function COGENT.mount_scan_rbuf 7 a@0.0 Word 32 a@0.1 Word 32 a@0.2 Word 32 a@0.3 Word 32 a@0.4 Word 32 a@0.5 Word 32 mem Mem 9 a@0.0.0 Word 32 a@0.0.1 Word 32 a@0.0.2 Word 32 a@0.0.3 Word 32 a@0.1.0 Word 32 a@0.1.1.0 Word 32 a@0.1.1.1 Word 32 a@0.1.2 Word 32 mem Mem
# Function: mount_scan_loop
#    >>Error: non-32 bit word in aggregate: [("next_inum",GEGSingle {singleType = GWordT 32}),("next_sqnum",GEGSingle {singleType = GWordT 64}),("rbuf",GEGStruct [("data",GEGSingle {singleType = GWordT 32}),("bound",GEGSingle {singleType = GWordT 32})] NotUnboxed),("wbuf_eb",GEGSingle {singleType = GWordT 32}),("wbuf",GEGStruct [("data",GEGSingle {singleType = GWordT 32}),("bound",GEGSingle {singleType = GWordT 32})] NotUnboxed),("used",GEGSingle {singleType = GWordT 32}),("sync_offs",GEGSingle {singleType = GWordT 32}),("opad",GEGStruct [("magic",GEGSingle {singleType = GWordT 32}),("crc",GEGSingle {singleType = GWordT 32}),("sqnum",GEGSingle {singleType = GWordT 64}),("offs",GEGSingle {singleType = GWordT 32}),("len",GEGSingle {singleType = GWordT 32}),("trans",GEGSingle {singleType = GWordT 8}),("otype",GEGSingle {singleType = GWordT 8}),("ounion",GEGSum [("TObjData",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("odata",GEGSingle {singleType = GWordT 32})] IsUnboxed),("TObjDel",GEGStruct [("id",GEGSingle {singleType = GWordT 64})] IsUnboxed),("TObjDentarr",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("nb_dentry",GEGSingle {singleType = GWordT 32}),("size",GEGSingle {singleType = GWordT 32}),("entries",GEGSingle {singleType = GWordT 32})] NotUnboxed),("TObjInode",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("size",GEGSingle {singleType = GWordT 64}),("atime_sec",GEGSingle {singleType = GWordT 64}),("ctime_sec",GEGSingle {singleType = GWordT 64}),("mtime_sec",GEGSingle {singleType = GWordT 64}),("nlink",GEGSingle {singleType = GWordT 32}),("uid",GEGSingle {singleType = GWordT 32}),("gid",GEGSingle {singleType = GWordT 32}),("mode",GEGSingle {singleType = GWordT 32}),("flags",GEGSingle {singleType = GWordT 32})] NotUnboxed),("TObjPad",GEGUnit),("TObjSuper",GEGStruct [("nb_eb",GEGSingle {singleType = GWordT 32}),("eb_size",GEGSingle {singleType = GWordT 32}),("io_size",GEGSingle {singleType = GWordT 32}),("nb_reserved_gc",GEGSingle {singleType = GWordT 32}),("nb_reserved_del",GEGSingle {singleType = GWordT 32}),("cur_eb",GEGSingle {singleType = GWordT 32}),("cur_offs",GEGSingle {singleType = GWordT 32}),("last_inum",GEGSingle {singleType = GWordT 32}),("next_sqnum",GEGSingle {singleType = GWordT 64})] NotUnboxed)])] NotUnboxed),("pools",GEGStruct [("idx",GEGSingle {singleType = GWordT 32}),("gim",GEGSingle {singleType = GWordT 32})] IsUnboxed),("oaddr",GEGStruct [("ebnum",GEGSingle {singleType = GWordT 32}),("offs",GEGSingle {singleType = GWordT 32}),("len",GEGSingle {singleType = GWordT 32}),("sqnum",GEGSingle {singleType = GWordT 64})] IsUnboxed),("fsm_st",GEGStruct [("nb_free_eb",GEGSingle {singleType = GWordT 32}),("used_eb",GEGSingle {singleType = GWordT 32}),("dirty_space",GEGSingle {singleType = GWordT 32}),("gim",GEGSingle {singleType = GWordT 32})] NotUnboxed),("index_st",GEGStruct [("addrs",GEGSingle {singleType = GWordT 32})] IsUnboxed),("ubi_vol",GEGSingle {singleType = GWordT 32})]

Function COGENT.mount_scan_loop 8 a@0.0.0 Word 32 a@0.0.1 Word 32 a@0.0.2 Word 32 a@0.0.3 Word 32 a@0.0.4 Word 32 a@0.1 Word 32 a@0.2 Word 32 mem Mem 9 a@0.0.0 Word 32 a@0.0.1 Word 32 a@0.0.2 Word 32 a@0.0.3 Word 32 a@0.0.4 Word 32 a@0.1.0 Word 32 a@0.1.1 Word 32 a@0.1.2 Word 32 mem Mem
# Function: mount_scan
#    >>Error: atom Fun

Function COGENT.mount_scan 4 a@0.0 Word 32 a@0.1 Word 32 a@0.2 Word 32 mem Mem 7 a@0.0.0 Word 32 a@0.0.1 Word 32 a@0.0.2 Word 32 a@0.1.0 Word 32 a@0.1.1 Word 32 a@0.1.2 Bool mem Mem
# Function: ostore_mount
#    >>Error: non-32 bit word in aggregate: [("next_inum",GEGSingle {singleType = GWordT 32}),("next_sqnum",GEGSingle {singleType = GWordT 64}),("rbuf",GEGStruct [("data",GEGSingle {singleType = GWordT 32}),("bound",GEGSingle {singleType = GWordT 32})] NotUnboxed),("wbuf_eb",GEGSingle {singleType = GWordT 32}),("wbuf",GEGStruct [("data",GEGSingle {singleType = GWordT 32}),("bound",GEGSingle {singleType = GWordT 32})] NotUnboxed),("used",GEGSingle {singleType = GWordT 32}),("sync_offs",GEGSingle {singleType = GWordT 32}),("opad",GEGStruct [("magic",GEGSingle {singleType = GWordT 32}),("crc",GEGSingle {singleType = GWordT 32}),("sqnum",GEGSingle {singleType = GWordT 64}),("offs",GEGSingle {singleType = GWordT 32}),("len",GEGSingle {singleType = GWordT 32}),("trans",GEGSingle {singleType = GWordT 8}),("otype",GEGSingle {singleType = GWordT 8}),("ounion",GEGSum [("TObjData",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("odata",GEGSingle {singleType = GWordT 32})] IsUnboxed),("TObjDel",GEGStruct [("id",GEGSingle {singleType = GWordT 64})] IsUnboxed),("TObjDentarr",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("nb_dentry",GEGSingle {singleType = GWordT 32}),("size",GEGSingle {singleType = GWordT 32}),("entries",GEGSingle {singleType = GWordT 32})] NotUnboxed),("TObjInode",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("size",GEGSingle {singleType = GWordT 64}),("atime_sec",GEGSingle {singleType = GWordT 64}),("ctime_sec",GEGSingle {singleType = GWordT 64}),("mtime_sec",GEGSingle {singleType = GWordT 64}),("nlink",GEGSingle {singleType = GWordT 32}),("uid",GEGSingle {singleType = GWordT 32}),("gid",GEGSingle {singleType = GWordT 32}),("mode",GEGSingle {singleType = GWordT 32}),("flags",GEGSingle {singleType = GWordT 32})] NotUnboxed),("TObjPad",GEGUnit),("TObjSuper",GEGStruct [("nb_eb",GEGSingle {singleType = GWordT 32}),("eb_size",GEGSingle {singleType = GWordT 32}),("io_size",GEGSingle {singleType = GWordT 32}),("nb_reserved_gc",GEGSingle {singleType = GWordT 32}),("nb_reserved_del",GEGSingle {singleType = GWordT 32}),("cur_eb",GEGSingle {singleType = GWordT 32}),("cur_offs",GEGSingle {singleType = GWordT 32}),("last_inum",GEGSingle {singleType = GWordT 32}),("next_sqnum",GEGSingle {singleType = GWordT 64})] NotUnboxed)])] NotUnboxed),("pools",GEGStruct [("idx",GEGSingle {singleType = GWordT 32}),("gim",GEGSingle {singleType = GWordT 32})] IsUnboxed),("oaddr",GEGStruct [("ebnum",GEGSingle {singleType = GWordT 32}),("offs",GEGSingle {singleType = GWordT 32}),("len",GEGSingle {singleType = GWordT 32}),("sqnum",GEGSingle {singleType = GWordT 64})] IsUnboxed),("fsm_st",GEGStruct [("nb_free_eb",GEGSingle {singleType = GWordT 32}),("used_eb",GEGSingle {singleType = GWordT 32}),("dirty_space",GEGSingle {singleType = GWordT 32}),("gim",GEGSingle {singleType = GWordT 32})] NotUnboxed),("index_st",GEGStruct [("addrs",GEGSingle {singleType = GWordT 32})] IsUnboxed),("ubi_vol",GEGSingle {singleType = GWordT 32})]

Function COGENT.ostore_mount 4 a@0.0 Word 32 a@0.1 Word 32 a@0.2 Word 32 mem Mem 7 a@0.0.0 Word 32 a@0.0.1 Word 32 a@0.0.2 Word 32 a@0.1.0 Word 32 a@0.1.1 Word 32 a@0.1.2 Word 32 mem Mem

# ==Failed Typed Functions==
# Function: opt_vnode_set_nlink
#    >>Error: graphType: no repr known for: TCon "VfsInodeAbstract" [] Unboxed

# Function: deep_freeVfsInode
#    >>Error: graphType: no repr known for: TCon "VfsInodeAbstract" [] Unboxed

# Function: free_opt_VfsInode
#    >>Error: graphType: no repr known for: TCon "VfsInodeAbstract" [] Unboxed

# Function: vnode_init_perm
#    >>Error: graphType: no repr known for: TCon "VfsInodeAbstract" [] Unboxed

# Function: get_rdctx
#    >>Error: graphType: no repr known for: TCon "VfsInodeAbstract" [] Unboxed

# Function: obj_inode_new
#    >>Error: graphType: no repr known for: TCon "VfsInodeAbstract" [] Unboxed

# Function: dentarr_add_dentry
#    >>Error: graphType: no repr known for: TCon "VfsInodeAbstract" [] Unboxed

# Function: fsop_getattr
#    >>Error: graphType: no repr known for: TCon "VfsInodeAbstract" [] Unboxed

# Function: truncate_deletion_obj
#    >>Error: graphType: no repr known for: TCon "VfsInodeAbstract" [] Unboxed

# Function: init_vnode
#    >>Error: graphType: no repr known for: TCon "VfsInodeAbstract" [] Unboxed

# Function: check_dir_empty
#    >>Error: graphType: no repr known for: TCon "VfsInodeAbstract" [] Unboxed

# Function: dentarr_read_and_del
#    >>Error: graphType: no repr known for: TCon "VfsInodeAbstract" [] Unboxed

# Function: fsop_iget
#    >>Error: graphType: no repr known for: TCon "VfsInodeAbstract" [] Unboxed

# Function: fsop_lookup
#    >>Error: graphType: no repr known for: TCon "VfsInodeAbstract" [] Unboxed

# Function: read_block
#    >>Error: graphType: no repr known for: TCon "VfsInodeAbstract" [] Unboxed

# Function: fsop_follow_link
#    >>Error: graphType: no repr known for: TCon "VfsInodeAbstract" [] Unboxed

# Function: fsop_readpage
#    >>Error: graphType: no repr known for: TCon "VfsInodeAbstract" [] Unboxed

# Function: fsop_write_begin
#    >>Error: graphType: no repr known for: TCon "VfsInodeAbstract" [] Unboxed

# Function: truncate_last_block
#    >>Error: graphType: no repr known for: TCon "VfsInodeAbstract" [] Unboxed

# Function: fsop_readdir
#    >>Error: graphType: no repr known for: TCon "VfsInodeAbstract" [] Unboxed

# Function: dentarr_read_and_add
#    >>Error: graphType: no repr known for: TCon "VfsInodeAbstract" [] Unboxed

# Function: move_read_or_create_dentarrs
#    >>Error: graphType: no repr known for: TCon "VfsInodeAbstract" [] Unboxed

# Function: fsop_create
#    >>Error: graphType: no repr known for: TCon "VfsInodeAbstract" [] Unboxed

# Function: fsop_do_move_helper
#    >>Error: graphType: no repr known for: TCon "VfsInodeAbstract" [] Unboxed

# Function: fsop_do_move
#    >>Error: graphType: no repr known for: TCon "VfsInodeAbstract" [] Unboxed

# Function: fsop_do_move_del
#    >>Error: graphType: no repr known for: TCon "VfsInodeAbstract" [] Unboxed

# Function: fsop_move
#    >>Error: graphType: no repr known for: TCon "VfsInodeAbstract" [] Unboxed

# Function: fsop_do_rename_helper
#    >>Error: graphType: no repr known for: TCon "VfsInodeAbstract" [] Unboxed

# Function: fsop_do_rename_helper1
#    >>Error: graphType: no repr known for: TCon "VfsInodeAbstract" [] Unboxed

# Function: fsop_do_rename
#    >>Error: graphType: no repr known for: TCon "VfsInodeAbstract" [] Unboxed

# Function: fsop_do_rename_del
#    >>Error: graphType: no repr known for: TCon "VfsInodeAbstract" [] Unboxed

# Function: fsop_rename
#    >>Error: graphType: no repr known for: TCon "VfsInodeAbstract" [] Unboxed

# Function: fsop_do_truncate
#    >>Error: graphType: no repr known for: TCon "VfsInodeAbstract" [] Unboxed

# Function: fsop_evict_inode
#    >>Error: graphType: no repr known for: TCon "VfsInodeAbstract" [] Unboxed

# Function: fsop_link
#    >>Error: graphType: no repr known for: TCon "VfsInodeAbstract" [] Unboxed

# Function: fsop_mkdir
#    >>Error: graphType: no repr known for: TCon "VfsInodeAbstract" [] Unboxed

# Function: fsop_rmdir
#    >>Error: graphType: no repr known for: TCon "VfsInodeAbstract" [] Unboxed

# Function: fsop_symlink
#    >>Error: graphType: no repr known for: TCon "VfsInodeAbstract" [] Unboxed

# Function: fsop_unlink
#    >>Error: graphType: no repr known for: TCon "VfsInodeAbstract" [] Unboxed

# Function: fsop_write_end
#    >>Error: graphType: no repr known for: TCon "VfsInodeAbstract" [] Unboxed

# Function: fsop_write_inode
#    >>Error: graphType: no repr known for: TCon "VfsInodeAbstract" [] Unboxed

# Function: fsop_do_setattr
#    >>Error: graphType: no repr known for: TCon "VfsInodeAbstract" [] Unboxed

# Function: fsop_setattr
#    >>Error: graphType: no repr known for: TCon "VfsInodeAbstract" [] Unboxed

# Function: fsop_format_default
#    >>Error: graphType: no repr known for: TCon "VfsInodeAbstract" [] Unboxed

# Function: fsop_fill_super
#    >>Error: graphType: no repr known for: TCon "VfsInodeAbstract" [] Unboxed

#== Failure Report ==

# Error atom Fun
(0 type failures, 36 body failures)
# Error graphType: no repr known for: TCon "VfsInodeAbstract" [] Unboxed
(45 type failures, 0 body failures)
# Error non-32 bit word in aggregate: [("id",GEGSingle {singleType = GWordT 64}),("nb_dentry",GEGSingle {singleType = GWordT 32}),("size",GEGSingle {singleType = GWordT 32}),("entries",GEGSingle {singleType = GWordT 32})]
(0 type failures, 7 body failures)
# Error non-32 bit word in aggregate: [("id",GEGSingle {singleType = GWordT 64}),("size",GEGSingle {singleType = GWordT 64}),("atime_sec",GEGSingle {singleType = GWordT 64}),("ctime_sec",GEGSingle {singleType = GWordT 64}),("mtime_sec",GEGSingle {singleType = GWordT 64}),("nlink",GEGSingle {singleType = GWordT 32}),("uid",GEGSingle {singleType = GWordT 32}),("gid",GEGSingle {singleType = GWordT 32}),("mode",GEGSingle {singleType = GWordT 32}),("flags",GEGSingle {singleType = GWordT 32})]
(0 type failures, 4 body failures)
# Error non-32 bit word in aggregate: [("ino",GEGSingle {singleType = GWordT 32}),("dtype",GEGSingle {singleType = GWordT 8}),("nlen",GEGSingle {singleType = GWordT 16}),("name",GEGSingle {singleType = GWordT 32})]
(0 type failures, 8 body failures)
# Error non-32 bit word in aggregate: [("magic",GEGSingle {singleType = GWordT 32}),("crc",GEGSingle {singleType = GWordT 32}),("sqnum",GEGSingle {singleType = GWordT 64}),("offs",GEGSingle {singleType = GWordT 32}),("len",GEGSingle {singleType = GWordT 32}),("trans",GEGSingle {singleType = GWordT 8}),("otype",GEGSingle {singleType = GWordT 8}),("ounion",GEGSum [("TObjData",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("odata",GEGSingle {singleType = GWordT 32})] IsUnboxed),("TObjDel",GEGStruct [("id",GEGSingle {singleType = GWordT 64})] IsUnboxed),("TObjDentarr",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("nb_dentry",GEGSingle {singleType = GWordT 32}),("size",GEGSingle {singleType = GWordT 32}),("entries",GEGSingle {singleType = GWordT 32})] NotUnboxed),("TObjInode",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("size",GEGSingle {singleType = GWordT 64}),("atime_sec",GEGSingle {singleType = GWordT 64}),("ctime_sec",GEGSingle {singleType = GWordT 64}),("mtime_sec",GEGSingle {singleType = GWordT 64}),("nlink",GEGSingle {singleType = GWordT 32}),("uid",GEGSingle {singleType = GWordT 32}),("gid",GEGSingle {singleType = GWordT 32}),("mode",GEGSingle {singleType = GWordT 32}),("flags",GEGSingle {singleType = GWordT 32})] NotUnboxed),("TObjPad",GEGUnit),("TObjSuper",GEGStruct [("nb_eb",GEGSingle {singleType = GWordT 32}),("eb_size",GEGSingle {singleType = GWordT 32}),("io_size",GEGSingle {singleType = GWordT 32}),("nb_reserved_gc",GEGSingle {singleType = GWordT 32}),("nb_reserved_del",GEGSingle {singleType = GWordT 32}),("cur_eb",GEGSingle {singleType = GWordT 32}),("cur_offs",GEGSingle {singleType = GWordT 32}),("last_inum",GEGSingle {singleType = GWordT 32}),("next_sqnum",GEGSingle {singleType = GWordT 64})] NotUnboxed)])]
(0 type failures, 27 body failures)
# Error non-32 bit word in aggregate: [("next_inum",GEGSingle {singleType = GWordT 32}),("next_sqnum",GEGSingle {singleType = GWordT 64}),("rbuf",GEGStruct [("data",GEGSingle {singleType = GWordT 32}),("bound",GEGSingle {singleType = GWordT 32})] NotUnboxed),("wbuf_eb",GEGSingle {singleType = GWordT 32}),("wbuf",GEGStruct [("data",GEGSingle {singleType = GWordT 32}),("bound",GEGSingle {singleType = GWordT 32})] NotUnboxed),("used",GEGSingle {singleType = GWordT 32}),("sync_offs",GEGSingle {singleType = GWordT 32}),("opad",GEGStruct [("magic",GEGSingle {singleType = GWordT 32}),("crc",GEGSingle {singleType = GWordT 32}),("sqnum",GEGSingle {singleType = GWordT 64}),("offs",GEGSingle {singleType = GWordT 32}),("len",GEGSingle {singleType = GWordT 32}),("trans",GEGSingle {singleType = GWordT 8}),("otype",GEGSingle {singleType = GWordT 8}),("ounion",GEGSum [("TObjData",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("odata",GEGSingle {singleType = GWordT 32})] IsUnboxed),("TObjDel",GEGStruct [("id",GEGSingle {singleType = GWordT 64})] IsUnboxed),("TObjDentarr",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("nb_dentry",GEGSingle {singleType = GWordT 32}),("size",GEGSingle {singleType = GWordT 32}),("entries",GEGSingle {singleType = GWordT 32})] NotUnboxed),("TObjInode",GEGStruct [("id",GEGSingle {singleType = GWordT 64}),("size",GEGSingle {singleType = GWordT 64}),("atime_sec",GEGSingle {singleType = GWordT 64}),("ctime_sec",GEGSingle {singleType = GWordT 64}),("mtime_sec",GEGSingle {singleType = GWordT 64}),("nlink",GEGSingle {singleType = GWordT 32}),("uid",GEGSingle {singleType = GWordT 32}),("gid",GEGSingle {singleType = GWordT 32}),("mode",GEGSingle {singleType = GWordT 32}),("flags",GEGSingle {singleType = GWordT 32})] NotUnboxed),("TObjPad",GEGUnit),("TObjSuper",GEGStruct [("nb_eb",GEGSingle {singleType = GWordT 32}),("eb_size",GEGSingle {singleType = GWordT 32}),("io_size",GEGSingle {singleType = GWordT 32}),("nb_reserved_gc",GEGSingle {singleType = GWordT 32}),("nb_reserved_del",GEGSingle {singleType = GWordT 32}),("cur_eb",GEGSingle {singleType = GWordT 32}),("cur_offs",GEGSingle {singleType = GWordT 32}),("last_inum",GEGSingle {singleType = GWordT 32}),("next_sqnum",GEGSingle {singleType = GWordT 64})] NotUnboxed)])] NotUnboxed),("pools",GEGStruct [("idx",GEGSingle {singleType = GWordT 32}),("gim",GEGSingle {singleType = GWordT 32})] IsUnboxed),("oaddr",GEGStruct [("ebnum",GEGSingle {singleType = GWordT 32}),("offs",GEGSingle {singleType = GWordT 32}),("len",GEGSingle {singleType = GWordT 32}),("sqnum",GEGSingle {singleType = GWordT 64})] IsUnboxed),("fsm_st",GEGStruct [("nb_free_eb",GEGSingle {singleType = GWordT 32}),("used_eb",GEGSingle {singleType = GWordT 32}),("dirty_space",GEGSingle {singleType = GWordT 32}),("gim",GEGSingle {singleType = GWordT 32})] NotUnboxed),("index_st",GEGStruct [("addrs",GEGSingle {singleType = GWordT 32})] IsUnboxed),("ubi_vol",GEGSingle {singleType = GWordT 32})]
(0 type failures, 22 body failures)

