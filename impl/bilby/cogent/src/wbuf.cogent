--
-- Copyright 2016, NICTA
--
-- This software may be distributed and modified according to the terms of
-- the GNU General Public License version 2. Note that NO WARRANTY is provided.
-- See "LICENSE_GPLv2.txt" for details.
--
-- @TAG(NICTA_GPL)
--

include "bilbyfs.cogent"
include "ubi.cogent"

-- Most these functions assume that buf is of length mount_st.super.eb_size

wbuf_read_leb: (ExState, MountState!, UbiVol!, Buffer, EbNum) -> RR (ExState, Buffer) () ErrCode
wbuf_read_leb(ex, mount_st, ubi_vol, buf, ebnum) =
-- Reads the entire erase-block @ebnum in @buf
   let io_size = mount_st.super.io_size
   and nb_reads = mount_st.super.eb_size / io_size
   and ((ex, buf), r) = seq32[(ExState, Buffer), (EbNum, U32, UbiVol), ErrCode]
                          #{frm=0, to=nb_reads, step=1, f=loop_body_wbuf_read_leb, acc=(ex, buf), obsv=(ebnum, io_size, ubi_vol)}
   in r
   | Iterate () -> ((ex, buf), Success ())
   | Break e -> ((ex, buf), Error e)

loop_body_wbuf_read_leb: #{acc: (ExState, Buffer), obsv: (EbNum, U32, UbiVol)!, idx: U32} -> LRR (ExState, Buffer) ErrCode
loop_body_wbuf_read_leb #{acc=(ex, buf), obsv=(ebnum, io_size, ubi_vol), idx=i} =
  let offs = i * io_size
  and ((ex, buf), r) = wubi_leb_read #{ex, ubi_vol, ebnum, buf, buf_offs=offs, nb_bytes=io_size}
  in r
  | Success () -> ((ex, buf), Iterate ())
  | Error e -> ((ex, buf), Break e)

