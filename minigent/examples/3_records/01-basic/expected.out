simple : {baz : U8,foo : {bar : U8,foo : U8}#}
         -> {baz : U8,foo : {bar : U8,foo : U8}# take};
simple r = take s { foo = x } = r : {baz : U8,foo : {bar : U8,foo : U8}#}
           in take t { baz = b } = s : {baz : U8
                                       ,foo : {bar : U8,foo : U8}# take}
              in put t : {baz : U8 take
                         ,foo : {bar : U8
                                ,foo : U8}# take}.baz := (((x : {bar : U8
                                                                ,foo : U8}#).bar : U8) + ((x : {bar : U8
                                                                                               ,foo : U8}#).foo : U8) : U8) + (b : U8) : U8
                 end : {baz : U8,foo : {bar : U8,foo : U8}# take}
              end : {baz : U8,foo : {bar : U8,foo : U8}# take}
           end : {baz : U8,foo : {bar : U8,foo : U8}# take};