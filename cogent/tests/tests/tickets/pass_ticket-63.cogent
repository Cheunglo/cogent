--
-- Copyright 2016, NICTA
--
-- This software may be distributed and modified according to the terms of
-- the GNU General Public License version 2. Note that NO WARRANTY is provided.
-- See "LICENSE_GPLv2.txt" for details.
--
-- @TAG(NICTA_GPL)
--

type List a
type T1 a

map : all (a,b). #{f : a -> b, as : List a} -> List b
magic : all a. T1 a -> a

foo : List (T1 U32) -> List U32
foo ls = let f1 = map[T1 Bool, U16]  -- the existence of this line requires
         -- the type of argument and resultant of f1 be defined,
         -- regardless of whether terms of these type are present or not
         and f2 = map[T1 U32, U32]
          in f2 #{f=magic[U32], as=ls}
