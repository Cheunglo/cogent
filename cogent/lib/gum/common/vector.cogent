type Vector

new_vector : (SysState, U32) -> R (SysState, Vector) SysState
free_vector : (SysState, Vector) -> SysState

type VectorUsed
type VectorFree

focus_vector : all (a :< E, b :< DS, r :< E).
               #{ vec : Vector
                , acc : a
                , obsv : b
                , f : #{uvec : VectorUsed, fvec : VectorFree, acc : a, obsv : b} -> #{uvec : VectorUsed, fvec : VectorFree, res : r}
                } -> (r, Vector)

focus_vector_ro : all (a :< E, b :< DS, r :< E).
                  #{ vec : Vector!
                   , acc : a
                   , obsv : b
                   , f : #{uvec : VectorUsed!, fvec : VectorFree!, acc : a, obsv : b} -> #{uvec : VectorUsed!, fvec : VectorFree!, res : r}
                   } -> r

vector_next : (VectorUsed, VectorFree!) -> <This VectorUsed | Next VectorUsed>

vector_loop : all (a :< E, b :< DS).
              #{uvec : VectorUsed, fvec : VectorFree, acc : a, obsv : b}
           -> #{uvec : VectorUsed, fvec : VectorFree, acc : a}

vector_del : all t. #{uvec : VectorUsed, fvec : VectorFree, f : t! -> Bool}
                 -> #{uvec : VectorUsed, fvec : VectorFree}

vector_read : all t. VectorUsed! -> t!

vector_idx : all (t, a :< E, b :< DS, r :< E).
             #{ uvec : VectorUsed!
              , idx : U32
              , acc : a
              , obsv : b
              , f : #{elem : t!, acc : a, obsv : b} -> r
              } -> (VectorUsed!, r)

vector_append : all t. #{uvec : VectorUsed, fvec : VectorFree, obj : t!}
                    -> #{suc : Bool, uvec : VectorUsed, fvec : VectorFree}
